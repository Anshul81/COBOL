      *****************************************************************
      *         I D E N T I F I C A T I O N   D I V I S I O N         *
      *****************************************************************
        IDENTIFICATION DIVISION.

        PROGRAM-ID.   US.
      * AUTHOR.       W CLAYTON.
      * INSTALLATION.  COMDATA NETWORK, INC.
      * DATE-WRITTEN. 11/23/80.

      * REMARKS.      ON-LINE FUEL TRANSACTION PROGRAM.
KB1007******************************************************************
KB1007*  COMPILE OPTIONS: LANG=ECC, DB2=Y, 2/CXXCMCD1/CXXCOW/UR, MQ=Y
      ******************************************************************
MB1112*  COMPILE US USING 5.1 INSTEAD OF COMPIT TO PICK UP SPEC CHAR
MB1112******************************************************************
      * FUNCTION....: ON-LINE FUEL TRANSACTION PROGRAM                 *
      * TRAN ID.....: 'FP'                                             *
      * LANG........: COBOL II (CICS)                                  *
      * DESCRIPTION.: THIS PROGRAM HAS SEVERAL FUNCTIONS, LISTED BELOW *
      *               1)  FP (FUEL) TRANSACTION                        *
      *               2)  FP CANCEL TRANSACTION                        *
      *               3)  SETTLEMENT REQUEST                           *
      *               4)  FP MAINT ON/OFF REQUEST                      *
      ******************************************************************
      *                    MODIFICATION TABLE
      *
      * NAME       DATE   DESCRIPTION
      * ========== ====== ==============================================
      * SCHLEICHER PREV   IF YOU NEED TO SEE THE OLD MODIFICATION TABLE
      *                   PLEASE COME SEE ME.  I HAVE IT FILED.
      * SCHLEICHER 031493 1)REMOVED ALL ALTERS/HANDLE CONDITIONS
      *                   2)REMOVED ALL DEAD CODE
      *                   3)REMOVED ALL RECURSION
      *                   4)CREATED SEVERIAL NEW ROUTINES TO REPLACE GOT
      *                   5)PSR #1132 - REEFER/DIESEL DAILY LIMITS
      *                          1259 - RETURN NAME,CITY,STATE ON POS XT
      *                          1262 - SUPPORT TERMINAL,FUNDED,DB XTNS
      *                                 SAME LOCATION CODE
      * SCHLEICHER 031593 ADDED LOGIC TO HANDLE ALL AMERICAN
      * SCHLEICHER 031793 PSR #1260 - LIMITED NETWORK BY SC LOCATION
      *                       #1374 - MAX GALLONS BY STATE/ALL STATE
      *                       #1314 - IGNORE TERM FUEL LIMITS
      * SCHLEICHER 032993 REMOVED THE FORCED 'US' COMPANY LOGIC
      * C. PRYOR   031893 PSR #1160 - ONE-TIME W/ PO OVERRIDE NOT
      *                               WORKING PROPERLY IF TOTAL > 99999
      * C. PRYOR   041593 PUT SWITCH IN READ-CDNCUST ROUTINE SO THAT
      *                   ONE-TIME AMOUNTS WILL ONLY BE ADDED TO AVAIL
      *                   AMTS FIRST TIME THROUGH
      * C. PRYOR   041993 FIX PROBLEM W/ PREVIOUS CHANGE, RESET SWITCH
      *                   EACH TIME PRMCARD IS READ
      * SCHLEICHER 042693 FIXED PROBLEM WITH IGNORE TERM FUEL LIMITS @
      *                   AN AUTO-GAS LOCATION
      * R PROCTOR  050393 CHANGED BATCH-LOAD-ROUTINE TO LINKED MODULE
      * SCHLEICHER 052593 JUL-DATE-LINK WAS ZEROES WHEN IT WENT TO
      *                   ROLL-PROD-TOTALS.  THIS CAUSED THE CURRENT
      *                   USED AMOUNT ON PRODUCTS TO ALWAYS BE ZERO.
      *            052593 CHANGED COMDATA COMPLETE, DRIVER CARRIED
      *                   CARD, TO CHARGE THE COMCHEK FEE.
      * C PRYOR    052593 ADDED LOGIC FOR CASH PER GALLON LIMIT
      * SCHLEICHER 060893 PSR#1369 - CHECK TO SEE IF WE CHARGE NORMAL
      *                   FEE FOR TRANSLINK TRANSACTIONS
      * SCHLEICHER 060993 PSR#1546 - ALLOW COST PLUS TYPE 'U' AT TERM
      *                   FUEL LOCATION.
      * SCHLEICHER 060993 PSR#1586 - ONLY CHECK CREDIT ON THE BILLABLE
      * SCHLEICHER 060993 PSR#1685 - ADD CANADIAN TAX ID TO FMLOG
      * C PRYOR    061193 PSR#1571 - FOR VRU, IGNORE PURCHASE LIMIT
      * SCHLEICHER 061493 PSR#1678 - IGNORE 2HR CHECK IF CUST OR SC
      *                              IS FLAGGED TO DO SO.
      * C PRYOR    070193 ADD LOGIC FOR PERCENT OF FACE DISCOUNT
      *                   (PENSKE PROJECT).
      * SCHLEICHER 070693 PSR#1768 - ALLOW PO TO OVERRIDE MAX GALLONS
      * SCHLEICHER 071693 CONVERTED TO COBOL II.
      * C PRYOR    072693 PSR#1878 - FIX BALANCE BASED DISCOUNT PART NET
      *                              PART REBATED - ONLY PASS NET AMOUNT
      *                              TO CARD
      * SCHLEICHER 072793 PSR#1883 - CHANGE INTRA-DAY CONTROL# TO SHOW R
      * SCHLEICHER 081693 PSR#1942 - CHANGE INTRA-DAY CONTROL# TO SHOW R
      * SCHLEICHER 081893 PSR#1838 - USE MASTER CODE ON 2HR CHECK
      *                   PSR#1575 - USE MASTER CODE ON 2HR CHECK
      *                   PSR#1763 - IGNORE UNIT # ON 2HR CHECK
      *                   PSR#1687 - MAKE CN225 GET CITY/STATE/TAXID
      *                   PSR#1883 - MAKE US225 GET CITY/STATE INFO
      * SCHLEICHER 090293 FIX AUTOGAS INVOICE PROBLEM (EMERG CHANGE)
      * C PRYOR    090793 PSR#1997 - ALLOW PRODS @ NONDESIGNATED LOCATIO
      * C PRYOR    090993 FIX PAY-AT-LOAD DISCOUNT PROBLEM
      * SCHLEICHER 092093 PSR#2162 - COST PLUS ADD ON
      * C PRYOR    092193 PRJ#73   - ADD LIMITED NETWORK BY CARD
      * R PROCTOR  101393 PRJ#     - CHANGE RJ3 LAYOUT TO MATCH TSFMB010
      * SCHLEICHER 110193 INCREASED TRIP NUMBER FROM 9 TO 10 BYTES
      * SHOTTS     111293 SCMSTR FILE EXPANSION
      * SCHLEICHER 111893 ADDED NEW SETTLEMENT LOGIC
      * PRYOR      112293 EXPANDED SCMSTR HOLD AREA LENGTH
      * SCHLEICHER 020194 CHANGED FMRM LOGIC TO USE TSFMO0RX LINKABLE PG
      * VERNON     033194 SPLIT RETAIN-FEE INTO 'P' & 'R' FOR PREFERRED
      * SCHLEICHER 050194 REWORKED MOST OF THE CODE TO IMPROVE ITS
      *                   INSPECTOR SCORE
      * SCHLEICHER 050594 CHANGES FOR COMDATA COMPLETE RECOURSE
      *                   PROJECT #111
      * C. PRYOR   092994 CHANGES FOR FFE (PROJECT #112) AND PSR #289
      * SCHLEICHER 100394 CHANGES FOR ATM/SECONDARY CARD PROJECT
      * C. PRYOR   122294 FIX FOR MIN. CASH PER GALLON
      * C. PRYOR   122594 CHANGE FORMAT FOR START OF PSNS  (NATS)
      * SCHLEICHER 01??95 - INTRA DAY CHANGES FOR MIXED CURRENCIES
      *                   - ATM CHANGES (NO FREE XTNS)
      *                   - ADDED OIL LIMITS
      * C. PRYOR   052395 - PSR # 1023 - ADDED MANUAL PREFERRED FEE
      * SCHLEICHER 062695 - PSR # 1384 - AUTO-GAS PUMP NUMBER
      * C. PRYOR   081795 - ADDED SETTLEMENT CODE TO FMLOG
      * SCHLEICHER 112895 - CORRECTED ATM REVERSAL PROBLEM
      * SCHLEICHER 121295 - SEND WARNING MESSAGE ON COMCHEK/FDIS CARDS
      * THOMASON   010596 - INSERTED WRITES TO PRMCARD BACKUP FILES
      * C. PRYOR   030196 - PSR # 1694 - TRAILER HR EDITS
      * C. PRYOR   031896 - PSR # 1713 - TRAILER POOL MASTER CODE
      * C. PRYOR   032296 - PSR # 1893 - EXPANDED RESPONSES TO TRENDAR
      *                                  REDUCED CO FEES (FUEL ONLY)
      * SCHLEICHER 042396 - PSR # ???? - ADDED 1-TIME OFF NETW PURC THAT
      *                                  IS SETUP BY CARD
      * C. PRYOR   072996 - PSR # 2095 - ADDED 'DB' OR 'DBF' TO TRENDAR
      *                                  NET AMOUNT RESPONSES
      *                       # 2081 - ADD DATE TO ERROR RESPONSE
      *                       # 1653 - REAL-TIME, CHANGE TERM.FUEL TYPE
      * C. PRYOR   081596 - PSR # 1503 - CHECK "DEFAULT" RECORD FOR
      *                                  LIMITED NETWORK BY CARD
      * C. PRYOR   102296 - PSR # 2129 - CHARGE STANDARD T/S FEE FOR CAS
      *                                  PREFERRED XTNS & ZERO OUT RETAI
      *                                  REBATE
      *                     PSR # 2101 - CHANGE TRIP REQUIRED FLAG TO 'C
      *                                  VR800 TRANSACTIONS
      *                     PSR # 2103 - VALIDATE HUB READING NUMERIC IN
      *                                  REAL-TIME ERROR XFER
      *                     PSR # 2118 - CARD CHECK DIGIT NOT ALWAYS SET
      *                                  REAL-TIME ERROR XFER; MOVED CHE
      *                                  DIGIT TO WS-PRM-CARD IN
      *                                  20060-GET-CARD-CUST-INFO
      * SCHLEICHER 111896 - ADDED CUSTOM TAXES FOR COST PLUS
      * SCHLEICHER 121896 - ADDED RISK MANAGED FUEL
      * C. PRYOR   032197 - SET INDX IN FPU-CHECK-PROD2 AND
      *                     FPU-CHECK-PROD2 TO PREVENT STORAGE VIOLATION
      *                     AND ASRA
      * M. PERRY   032497 - EFS ATM PHASE 1
      * SCHLEICHER 050197 - PSR #2328 (ONE TIME OFF NETWORK
      * SCHLEICHER 052797 - PSR #2203 (TRUNCATION PROBLEM WITH FOCUS CPG
      * SCHLEICHER 052797 - PSR #1712 (INVOICE TOTAL ERROR ON POS)
JS2000* SCHLEICHER 102497 - YEAR 2000 (JS2000)
CP0298* C. PRYOR   020398 - PRJ # 461 - TEXACO
JS0298* SCHLEICHER 020498 - PASSAGE PLUS (SPECIAL PAYTO FOR SETTLE)
MP0303* M PERRY    030398 - NEW NATS PROCESSING
JS0498* SCHLEICHER 040798 - CORRECT PROBLEM WITH CANCEL (PAYTO SPECIAL)
JS0498* SCHLEICHER 040998 - CHANGE COST PLUS DISCOUNTS TO ALLOW A NET
JS0498*                     DISCOUNT FOR DIRECT BILL XTNS.  (CHANGED TO
JS0498*                     MATCH FOCUS)
JS0598* SCHLEICHER 050698 - CORRECT PROBLEM WITH TRAILER NR FLAG = 'E'.
JS0598*                     IT WAS NOT WORKING ON POS TRANSACTIONS.
CP0598* C. PRYOR   050698 - REMOVE COPYBOOK AND REFERENCES FOR "SETTLEC"
CP0598*                     ("OLD SETTLEMENT")
CP0698* C. PRYOR   061898 - PRJ#558 - ADD UNIT POOL MASTER CODE
JS0798* SCHLEICHER 072398 - GENERIC CREDIT FUEL
JS0898* SCHLEICHER 081798 - CORRECT PROBLEM WITH GOLD CARD FUEL PURCHASE
MP0898* M. PERRY   081798 - PRJ # 543 - MAESTRO POS
JS0998* SCHLEICHER 081798 - COMSITE BATCH
CP1098* C. PRYOR   100298 - PRJ#672 -(SCHNEIDER) ADD NEW COST PLUS FLDS
CP1098*                                              ADJUSTMENTS FIELDS
CP1098*                                              SUB NETWORK GROUP
CP1098*                                              MULT. COMPANY STD
CP1098*                                          REMOVED PRMDLPM LOGIC
JS1098* SCHLEICHER 081798 - ADDED NO FEE FLAG AND PROCESSING
MP1098* M. PERRY   102898 - ADDITIONAL MAESTRO CHANGES.
JS1198* SCHLEICHER 110698 - IF CUST COUNTRY = 'C ' REPLACE WITH 'CD'
MP1298* M. PERRY   102898 - ADDITIONAL MAESTRO CHANGES.
JS1198* SCHLEICHER 113098 - AUTO CARD ACTIVATE
JF1298* SCHLEICHER 122098 - SCHNEIDER FIXES
ED0199* E. DUGAN   010499 - CHANGE NATSLOG FILE LOGIC
JS0299* SCHLEICHER 011599 - CORRECTED PROBLEM WITH PO OVERRIDE AND PRODS
JSA199* SCHLEICHER 012199 - IF VERIFY-UNIT = 'N' IGNORE UNIT USED AMTS
CP0399* C. PRYOR   030899 - FIX TO NOT SEND ERROR FOR ITP2 AND PS42
CP0399* C. PRYOR   032299 - ADD NUMERIC CHECKS - FIX ASRA
CP0499* C. PRYOR   040299 - MOVE PERFORM OF PARAGRAPH
CP0499*                     20350-CALC-COST-FOR-TERM-FUEL
MP0599* M. PERRY   051299 - NATS REORG WEEKLY
MP0599* M. PERRY   051299 - PETRO RECEIVABLES CORRECTION.
CP0599* C. PRYOR   051499 - COMMENT OUT RESRTICING DIESEL AND OTHER
CP0599*                     FUEL AT UNATTENDED LOCATIONS WHEN
CP0599*                     CDN-REFER-ONLY = 'Y'
JS0699* SCHLEICHER 060599   CHANGED TO ALWAYS COMPUTE CANADIAN TAX
MP0699* PERRY      061499 - SEND A VALID RESPONSE WHEN FILES ARE CLOSED
MP0699*                     ON TCP/IP TRANSACTIONS.
JS0699* SCHLEICHER 063099   CHANGED CANADIAN TAX RATES
CP0799* C. PRYOR   071599 - FIX PROBLEM W/ RETAINED PREFERRED DISCOUNTS
MP0799* M. PERRY   071999 - ALL ACCESS TO CASH ON CARD AND EXPRESS CASH
ED0899* E. DUGAN   081699 - EXPAND IOL PRODUCT CODE
JS0999* SCHLEICHER 090699 - CONVERT RETAIL PPG STORED IN FMLOG TO BE
JS0999*                     STORED IN THE CURRENCY OF THE COMPANY
JM0999* - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - -
JM0999* 09/22/99 J. MAPLES - SPC - CHANGED CREDITL COPY BOOK TO
JM0999*                            EXPAND SELECTED NUMERIC FIELDS
JM0999* - - - - - - - - - - - - - - - -- - - - - - - - - - - - - - - -
JS1099* 10/04/99 SCHLEICHER- CORRECTED CANADIAN CHECK AND VRU PROBLEM.
MP1099* 10/18/99 M PERRY   - CORRECT EFS ATM INQUIRE FEE
MP1199* 11/01/99  M. PERRY   RECOMPILED FOR SIGN ON AMOUNT IN TSXCW030
JS1199* 11/28/99 SCHLEICHER- MASTER CARD PROJECT
MP1299* 12/08/99 M PERRY     CORRECT A PROBLEM WITH MAESTRO SURCHARGES
MP0100* 01/07/00 M PERRY     CORRECT PURCHACE AMOUNT AVAILABLE FOR
MP0100*                      QUICK FUEL PRE-AUTH.
MP0200* 02/02/00 M PERRY     DECLINE ATM TRANSACTIONS WHEN A FILE
MP0200*                      PROBLEM OCCURS.
JS0200* 02/02/00 SCHLEICHER  CHANGED TO USE COMPANY STANDARDS CASH ON
JS0200*                      CARD FLAG INSTEAD OF CDNCUST.
JS0200* 02/10/00 SCHLEICHER  CHANGED TO USE FLEET FLAT FEE ON FLEET XTNS
JS0200* 02/15/00 SCHLEICHER  ADJUST DRIVER NUMBER IF FLEET CUSTOMER
MP0200* 02/21/00 M PERRY     CORRECT PROBLEM OF BILLING FOR ATM DECLINE
MP0200*                      WHEN FUEL TURNED OFF.
JS0200* 02/23/00 SCHLEICHER  CORRECTED PROBLEM WITH FUEL PRICE UPDATES.
JS0200*                      SCFUELP WAS NOT GETTING UPDATED
JS0300* 03/03/00 SCHLEICHER  ADDED MASTERCARD XTN TIME
CP0300* 03/10/00 C.PRYOR     UNIT VERIFY 'N' - IF SPACES IN
CP0300*                      PRM-UNIT-NUMBER CLEAR PRM-FP-CARD-NO
MP0300* 03/13/00 M.PERRY     ADJUST FOR AVAILABILITY OF SPECIFIC
MP0300*                      PRODUCTS WHEN DOING A PRE-AUTH.
MP0300* 03/21/00 M.PERRY     DO NOT ALLOW REFER ON PRE-AUTH WHEN BLOCKED
JS0400* 04/05/00 SCHLEICHER  HARD-CODE PAM TRANSPORT TO NOT SHOW ZERO IN
JS0400*                      FUEL FEE IF FUEL AND CASH WAS PURCHASED
CP0400* 04/20/00 C.PRYOR     PRJ# 758 - PAC PRIDE - ALLOW FOR PERCENT
CP0400*                      OF FACE FUEL FEES AND SERVICE CENTER CORP.
CP0400*                      REBATES
JS0500* 05/04/00 SCHLEICHER  - CORRECTED PROBLEM WITH POS CANCEL AND
JS0500*                         SC MASTER CODES
JS0500*                      - CORRECTED PROBLEM WITH LINK TO CXXCO0PL
JS0600* 06/01/00 SCHLEICHER  - CHANGE UNIT VERIFY LOGIC FOR FLEET XTN
JS0600* 06/08/00 SCHLEICHER  - ADDED ADDR AND ZIP TO FMLOG
CP0600* 06/22/00 C.PRYOR     PRJ# 758 - NEW SIR-DI-FEE-TYPE
MP0600* 06/12/00 M PERRY     - PETRO CANADA
CP0700* 07/20/00 C.PRYOR     - INCLUDE CASH IN "PERCENT OF FACE" SC
CP0700*                        RATE CALCULATIONS
JS0700* 07/24/00 SCHLEICHER  HARD-CODE TT984 TO NOT SHOW ZERO IN
JS0700*                      FUEL FEE IF FUEL AND CASH WAS PURCHASED
073100* 07/31/00 C.PRYOR     - RE-EXCLUDED CASH FROM "PERCENT OF FACE"
073100*                        SC RATE CALCULATIONS
CP0800* 08/15/00 C.PRYOR     - PRJ.#825 - ADD SC CASH ADD-ON FEE
MP0800* 06/01/00 M. PERRY    - BILL SAVINGS AND CREDIT CARD
JS0900* 09/15/00 SCHLEICHER  - CORRECTED PROBLEM WITH CREDIT PREAUTH AMT
MP0900* 09/21/00 M. PERRY    - RETURN DATE FOR PETRO CANADA
JS1000* 10/20/00 SCHLEICHER  - DON'T USE COST PLUS FOR SCHNEIDER IC DRVR
JS1000*                      - FOR SUB-NETWORK 999 OPEN ALL PRODUCTS
030601* 03/06/01 J HUNTER    - ENHANCEMENTS TO SCFUELP FILE UPDATE LOGIC
JS0401* 04/01/01 SCHLEICHER  - CORRECTED PROBLEM WITH CUSTID RETURNED TO
JS0401*                        SERVICE CENTER
JS0401* 04/02/01 SCHLEICHER  - DB2 CONVERSION
MP0401* 04/11/01 M PERRY     - ADD SPECIAL INTRA-DAY FOR MASS CONNECTION
JS0601* 06/19/01 SCHLEICHER  - IGNORE UNIT LENG EDIT FOR 'C' UNIT VERIFY
MP1001* 10/11/01 M PERRY     - ADD EMAIL DEBIT FROM CASH ON CARD
JS1101* 11/11/01 SCHLEICHER  - MASTERCARD CARD RENEWAL
ED1101* 11/12/01 E DUGAN     - INSTANT CREDIT NOTIFICATION
ED0102* 01/21/02 E DUGAN     - PASS CREDITL UPDATES TO MSG HANDLER
ED0102* 01/21/02 E DUGAN     - PASS PRMCARD UPDATES TO MSG HANDLER
MP0302* 03/13/02 M PERRY     - CORRECT E-MAIL CASH ADVANCE
MP0402* 04/09/02 M PERRY     - ALLOW ATM REVERSAL AFTER 2 HOURS
CC0502* 05/07/02 CHAFIN      - ADD US FLEET - MOBIL FUELING LOGIC
JS0702* 08/16/02 SCHLEICHER  - DON'T CHARGE FEE FOR TA ON CASH ONLY
JS0802* 08/02/02 SCHLEICHER  - ADDED SYNCPOINT AND CHANGED CARD ENQ
MP0902* 09/30/02 M PERRY     - MASTERCARD DIRECT
ED1102* 11/23/02 E DUGAN     - ADD REPORTING LEVELS TO FMLOG
CC0303* 03/04/03 CHAFIN      - 1.ADDED 3 NEW BATCH STAND-IN INPUT FIELDS
      * 03/20/03 CHAFIN      - DON'T FORCE 'W' SRV-TYPE FOR STAND-IN
JS0303* 03/06/03 SCHLEICHER  - ADDED A FORMATTED RESPONSE FOR BATCH FUEL
MP0303* 03/26/03 M PERRY     - ADD PSA1 F NEW DIAL THROUGH TCP/IP
CC0403* 04/16/03 CHAFIN      - FIX FMBP 'FUEL PRICE ERROR' CHECKING
CC040A* 04/24/03 CHAFIN      - FIX WH 'FUEL PRICE ERROR' CHECKING
CC040B* 04/25/03 CHAFIN      - FMLOG EXPANSION
062403* 06/24/03 J HUNTER    - SETINFO FIELD EXPANSION, RECOMPILE ONLY
JS0803* 08/06/03 SCHLEICHER  - CORRECTED PROBLEM WITH BLANK PROD CODES
JS0803*                      - CHANGED CXUTS0EL TO PRODUCE A DUMP
CC0803* 08/08/03 CHAFIN      - MOBIL FUEL ENHANCEMENTS
091003* 09/10/03 J HUNTER    - ROLL UP OF PENDING COMDATA COMPLETE STATU
MP0903* 09/20/03 M PERRY     - ATM STANDIN ON TANDEM
EJ1203* 11/15/03 E JONES     - FMRELAT CONVERSION - RECOMPILE ONLY
JS1203* 12/04/03 SCHLEICHER  - CUSTID CONVERSION FOR FPMASTR
JF1203*                      - CORRECTED CANADIAN XTN DUP CHECK
ED1203* 12/18/03 E DUGAN     - ADD PRMPIN FOR PIN
JS0304* 01/27/04 SCHLEICHER  - CORRECT ASRA ABEND WITH USILOG GALLONS.
JS0304*                        CORRECT PROBLEM WITH CREDIT TRUNCATION
MP0204* 02/24/04 M PERRY     - ADD NO VERIFY TRANSACTION FOR ACCOR
MP0404* 04/19/04 M PERRY     - DO NOT CHECK CREDIT ON BALANCE BASED
JS0604* 06/01/04 SCHLEICHER  - PRODUCT CODE EXPANSION
MP0704* 07/08/04 M PERRY     - ADDITIONAL PRODUCT CODE CHANGES
JS0804* 08/25/04 SCHLEICHER  - REMOVED THE NEED FOR CREDIT OVERRIDE FOR
JS0804*                        XTNS OVER $1,499.99.
MP1004* 10/29/04 M PERRY     - CUST ID EXPANSION
MP1204* 12/13/04 M PERRY     - CORRECT PRODUCT CODE IN INTRA-DAY RECORD
MP0105* 01/06/05 M PERRY     - CORRECT PRODUCT DAILY MAX ERROR
MP0105* 01/06/05 M PERRY     - ADD TRANSACTION PSD1 FOR TCP/IP POS
MP0205* 02/17/05 M PERRY     - CORRECT XXXXX ON MCAUTH
MP0205* 02/22/05 M PERRY     - CORRECT BALANCE BASED CANCEL CHARGES
CP0405* 04/28/05 C PRYOR     - CHANGE START OF FPLG TO PUT TO MQ QUEUE
ED0505* 05/13/05 E DUGAN     - ADD NEW PRODUCTS TO NATS PROD TABLE
CP0505* 05/23/05 C PRYOR     - USE MQ FOR FPLG ON FP CANCEL
EJ0505* 05/24/05 E JONES     - BP ON US
MP0605* 06/13/05 M PERRY     - CORRECT FP CANCEL ON NON SETTLE LOC
CP0605* 06/28/05 C PRYOR     - INITIALIZE DRIVER NAME FOR VEHICLE CARD
MP0705* 07/15/05 M PERRY     - BP INTERUM
MP0705*                           ADD OTHER FUEL SUB PRODUCT CODE
MP0705*                           REMOVE PRMABUP PRMBBUP
MP0705*                           CHECK BATCH LOAD FLAG BEFORE REREADING
MP0705*                           PRMCARD
072705* 07/27/05 J HUNTER    - VEHICLE CARD MAINTENANCE: LINK TO
072705*                        CXXCO0OH WITH FPMASTR BEFORE/AFTER
JS0705* 07/29/05 SCHLEICHER  - ALLOW 10 DIGIT UNIT FOR BATCH (FMMP)
MN0905* 09/22/05 M.NEWTON    - WR# 715 PASS QUICK FUEL MERCHANT NUMBER
MN0905*                        TO SETINFO.
MN0905*                        PT# 2005.10.20.047-AC05 - EXPAND
MN0905*                        WS-TOTAL-PRICE TO CORRECT A
MN0905*                        CALCULATION TRUNCATION.
MN0905*                        CORRECT NATS AUTH ABEND ERRORS.
MP1105* 11/29/05 M PERRY       CORRECT PROCESSING OF PO OUT OF NETWORK
MP1105*                        ON THE SMART FUEL PRE-AUTH
MN1205* 12/07/05 M.NEWTON      WR# 814 - COKE LEADING ZERO ON UNIT
MP0106* 01/19/06 M PERRY       RECOMPILE WITH CORRECT TSXCW030 COPYLIB
MB0106* 01/26/06 M BOWEN       ADD WRITE TO ITDQ FOR MC INTRA-DAY
JS0206* 02/25/06 SCHLEICHER    PRODUCT FEES PROJECT
040606* 04/05/06 J HUNTER      USE CDN BLOCK #2 DIESEL FLAG
EJ0406* 04/10/06 E JONES       BP PLAN C - ADD BIN LOGIC
ED0406* 04/12/06 E DUGAN       ENQUEUE REPLACEMENT
CP0406* 04/19/06 C PRYOR       ULSD - ADD LOGIC FOR SUB PROD CODES
JS0606* 06/11/06 SCHLEICHER    ADDED NETW BY CARD BOTH OPTION FLAG
JS06J6* 06/13/06 SCHLEICHER    ADDED .75 GALLON ALLOWANCE ON NETW BY CRD
ED0606* 06/14/06 E DUGAN       SAFEWAY ENCASHMENT
MN0606* 06/22/06 M.NEWTON    - WR468 - SCHNEIDER FMRM 04 MODIFICATIONS
ED0606* 06/28/06 E DUGAN       ADD SUB PRODUCT HDR FOR CANADIAN
CP0706* 07/05/06 C PRYOR       CHECK FUEL + GST FOR > 999.99
MP0706* 07/26/06 M PERRY       ADDITIONAL CHANGES FOR SAFEWAY ENCASHMENT
ED0906* 09/27/06 E DUGAN       DYNAMIC BINS 1.2
ED1206* 12/04/06 E DUGAN       FIX IOL INVALID CARD NR
ED1206* 12/06/06 E DUGAN       FIX SYSTEM UNAVAILABLE MSG
JS0107* 01/16/07 SCHLEICHER    ADD DEFAULT PRODUCT FEE LOGIC.
JS0107* 01/16/07 SCHLEICHER    REMOVE SCHNEIDER HARD CODE FOR COST PLUS
SB0107* 01/29/07 S BOLING      US RELEASE
MB0207* 02/05/07 M.BOWEN       US RELEASE - TMI MC INTRA-DAY
MN0207* 02/05/07 M.NEWTON      US RELEASE
CP0207* 02/19/07 C.PRYOR       IVR REPLACEMENT
MP0407* 04/23/07 M PERRY       FIX PROB WITH NO PRDLMIT RECORD.
CP0807* 08/01/07 C PRYOR       FPMASTER REPLACEMENT
JS0907* 09/05/07 SCHLEICHER    CORRECTED THE RESPONSE FOR LARGE $ TXNS.
MN0907* 09/20/07 M.NEWTON      INCIDENT 29293 - CORRECT LIMITED NETWORK
MN0907*                                         BY GROUP ERROR.
KB1007* 10/01/07 K BRUCE       GSA CROSS BORDER #10055 PRJ06216
KB1007*                          ADD XBORDER FEE CALCULATION
BW1207* 12/20/07 B WEBB        INCIDENT 36110 - SMART FUEL PREAUTH FIX
CP0208* 02/26/08 C PRYOR       FIX ADF-FP-ID-NR FOR CANCELS (CHK DIGIT
CP0208*                         NOT SET)
CP0208* 02/28/08 C PRYOR       ADD ODR-PREMIER-CARD NUMERIC CHECK
CP0308* 03/04/08 C PRYOR       CORRECT READ TO UNITMST ON CANCEL
021908* 02/19/08 J HUNTER      GSA/HIERARCHY PROJECT
MB0408* 04/02/08 M BOWEN       INCIDENT 36114 FORCE POST TRANSACTIONS
MB0408*                           REJECTED FOR INVALID UNIT
KB0408* 04/11/08 K BRUCE       GSA CROSS BORDER #10055 ADDITIONS WITH
KB0408*                        HIERARCHY PROJECT  PRJ06305
KB0408*                          ADD FM1/12 FLAGING USING TSFMW001.ADF-
KB0408*                          CIR-MAESTRO-INTL-FLAG IN PLACE OF ADF-
CP0508* 05/13/08 C PRYOR       FIX ISSUE WITH DEQ ON CARD
MP0608* 06/12/08 M PERRY       ADDITIONAL CHANGES FOR HIERARCHY.
MP0608*                        AND CROSS BORDER
DS0608* 06/20/08 D STRICKL     FIX ON DRIVER INFOR/ VEHICLE CARD
DS0608* 07/08/08 K BRUCE       ADDITIONAL CHANGES FOR CROSS BORDER
KB0708*  (021908 THRU KB0708 WILL IMPL ON 08/10/08 W/ HIERARCHY)
082008* 08/20/08 J HUNTER      FUEL > 999, INTERIM
MN1008* 10/20/08 M.NEWTON      WR2241-DONLEN MASTERCARD PIN ENTRY AND
MN1008*                        INCIDENTS 48353, 54085, 56807 AND 59340.
MN1108* 11/20/08 M.NEWTON      DRAFT COMCHEK PURCHASING - PROJECT 10713
CW1108* 11/25/08 C.WALKER      REBATES AND DISCOUNTS
MP1208* 12/11/08 M PERRY       INCIDENT 80714 FIX PRE-AUTH CREDIT.
JS0109* 01/09/09 SCHLEICHER    CHANGED NETWORK BY CARD GALLON VARIANCE
JS0109*                        FROM 0.75 TO 5.00
      *** THE FOLLOWING CHANGES ARE INCLUDED IN A SINGLE PROD RELEASE
062209* 06/22/09 J HUNTER      CHG TIME-LIMIT-CHECK TO CHK FOR DUP TRANS
062209*                        ON FUEL AND PRIVATE LABEL GROCERY ONLY
062609* 06/26/09               KEEP CARD SWIPED/KEYED FLAG ON FMLOG
070909* 07/09/09               MAKE CARD ONE TIME OFF NETWORK WORK SAME
070909*                        AS FMRM 02 ONE TIME FLAG
071009* 07/10/09               USE CANADIAN GST TAX IN FUEL > 999 LOGIC
071409* 07/14/09               USE PROMPTED ID TO VALIDATE PIN POOL
071509* 07/15/09               DISALLOW VIRTUAL CARD AT PROPRIETARY LOC
071609* 07/16/09               FIX FOR CURRENCY ISSUES, PRM- USED AMTS
080309* 08/03/09               ZERO OUT CASH ADVANCE FEE FOR PETRO CHAIN
CP0809* 08/03/09 C PRYOR       ADD DEBUG LOGGING XCML FOR COST PLUS
092009* 09/20/09 J HUNTER      CORRECTION TO LENGTH OF WS-Q-AREA
      *** THE PRECEDING CHANGES ARE INCLUDED IN A SINGLE PROD RELEASE
CP1109* 11/19/09 C PRYOR       MORE DEBUG LOGGING XCML FOR COST PLUS
112409* 11/24/09 J HUNTER      CORRECT SCREEN EXIT ON DUPLICATE ERROR;
112409*                        ADD NATS PRODUCT CODES 24 AND 25
091509*** THIS CHG WAS MOVED ASIDE FOR PREV CORRECTIONS
091509* 09/15/09 J HUNTER      GLOBAL CREDIT PROJECT, CREDITL -> DB2
CP0110* 01/07/10 C PRYOR       ADD DEBUG LOGGING CONDITIONS
040510* 04/05/10 J HUNTER      SWITCH REPLACEMENT PROJECT, RELEASE 4
CP0710* 07/21/10 C PRYOR       INC 214323 - NOT LOGGING EXPANDED UNIT
CP0710*                        NUMBER (UNIT VERIFICATION "N"); LOST
CP0710*                        IN UNITMST CONVERSION
080210* 08/02/10 J HUNTER      IRIS PROPRIETARY PROJECT
      *** THE FOLLOWING 5 CHANGES ARE INCLUDED IN A SINGLE PROD RELEASE
083010* 08/30/10 J HUNTER      SWITCH REPLACEMENT PROJECT, RELEASE 6
083110* 08/31/10 J HUNTER      IRIS CORRECTIONS AND ENHANCEMENTS
CP0910* 09/01/10 C PRYOR       INC 215028 - ISSUE W/ CN PROD PRE-AUTH
CP0910* 09/01/10 C PRYOR       INC 213603 - ISSUE W/ CN FUEL PR VERIFY
090310* 09/03/10 J HUNTER      WR 2758 - BATCH FUEL COST PLUS DT LOGIC
      **********
      *** THE FOLLOWING 4 CHANGES ARE INCLUDED IN A SINGLE PROD RELEASE
102110* 10/21/10 J HUNTER      FIX HIERARCHY PRODUCT LIMITS LOGIC
102510* 10/25/10 J HUNTER      FIX PRE-AUTH CHK WHEN BALANCE = FEE AMT
102810* 10/28/10 J HUNTER      ALTERNATIVE FUEL PROJECT
123010* 12/30/10 J HUNTER      CHG FOR IRIS COUNTRY CODE
      **********
020711* 02/07/11 J HUNTER      FOLLOWUP CORRECTIONS, ALTERNATIVE FUEL
BW0211* 02/14/11 B WEBB        MASTERCARD DEBIT RELEASE 11.1
ED0311* 03/02/11 E DUGAN       FIX PROPRIETARY FLEET LIMITS STAND IN
JS0311* 03/07/11 SCHLEICHER    COMPUTE SC POF FEE USING GROSS LESS DISC
MP0411* 04/07/11 M PERRY       CHANGE TO PUT SETINFO TO MQ QUEUE
041111* 04/11/11 J HUNTER      CORRECTION TO MOBILE FUEL HUB EDITS
051611* 05/16/11 B WEBB        WORK REQUEST RELEASE 2011_1 & 2011_2:
052311*                        3369 - GST TAX OVER $99.99
      *                        3424 - VARIOUS INCIDENTS:
052611*                           256926 - LARGE XTNS CONVERSION ISSUES
052711*                           NONE   - DUE TO ROUNDING, SOMETIMES
052711*                                    THE SPLIT XTN TOTAL DOLLAR
052711*                                    AMOUNTS ARE OFF BY $.01.
MN0611*                           233483 - FORCE POST FIX FOR DUP. XTNS
MN0611*                           268777 - XTN SHOWING CANCELLED ON SETL
072611*                           278415 - PRE-AUTH HUB MIN/MAX FIX
072711*                        3384 - ALLOW PREAUTH ON KEYED IN CARD NBR
072811*                        3514 - CANADIAN ICA PROJECT CHANGES
MB0911* 09/27/11 M BOWEN       CANADIAN ICA - REPLACE FCUR WITH CXXCO0CL
JS1111* 11/03/11 SCHLEICHER    ADDED ALT-FUEL DISC APPLIES FLAG LOGIC
J11111* 11/21/11 SCHLEICHER    CORRECTED ALTFUEL DISC APPLIES FLAG LOGIC
      *** THE FOLLOWING 4 CHANGES ARE INCLUDED IN A SINGLE PROD RELEASE
091211* 09/12/11 J HUNTER     STABILITY CHANGES, TO STANDARDIZE ABEND
091211*                       ROUTINES AND REMOVE CUSTID REFORMAT
091411* 09/14/11 J HUNTER     PILOT/LOVES NETWORK PRICING
CP1011* 10/28/11 C PRYOR      CONTROL NUMBER EXPANSION
CP1011*                       INC 297087
MP1011* 11/07/11  M PERRY     STREAMLINE DATE CHANGE - SETTLEMENT
MP1011*                       PROCESS
      **********
013112* 01/31/12 J HUNTER     CANADIAN ICA PCR, IRIS PROCESS CHANGES
020712* 02/07/12 J HUNTER     PILOT/LOVES NETWORK PRICING PCR
022012* 02/20/12 J HUNTER     HANDLE NETWORK PRICING FOR LARGE SPLIT TRX
022112* 02/21/12 J HUNTER     CANADIAN ICA PCR, CREDITL CURRENCY CHGS
040912* 04/09/12 J HUNTER     ECASH IRIS INTEGRATION PROJECT
040912*                       AND INCIDENT TICKETS 306403, 309208
041112* 04/11/12 J HUNTER     CARDLESS SOLUTIONS PHASE 1B
050712* 05/07/12 J HUNTER     NETWORK PRICING FILE SIZE CHG REQUEST
052912* 05/29/12 J HUNTER     FIX SP14 TRAILER LIMITS ON RFID TRANS
060512* 06/05/12 J HUNTER     ADJ TO NETWORK PRICING FOR REBATED DISC
061212* 06/12/12 J HUNTER     NETWORK PRICING CURRENCY CORRECTIONS
JS0712* 07/10/12 SCHLEICHER   MODIFIED TO PROCESS ATM ON FLEET LIMITS
ED0712* 07/17/12 E DUGAN      ECASH IRIS INTEGRATION PROJECT PCR
MN0712* 07/31/12 M.NEWTON     3974-COMSITE II-INVALID CHECK NUMBER
082212* 08/22/12 J HUNTER     FUEL FINDER WORK REQUEST
MB0912* 09/13/12 M BOWEN      IN330812 CANADIAN TRANS DIRECT BILL FUNDED
MB1012* 10/01/12 M BOWEN      CARDLESS PHASE 2.1
MB1112* 10/18/12 M BOWEN      CARDLESS PHASE 2.2
113012* 11/30/12 J HUNTER     ADD RFR RACK PPG TO TSFMO0GD COMMAREA
120412* 12/04/12 J HUNTER     CORRECTION TO SPLIT TRANS FMLOG DISCOUNT
MP0113* 01/02/13 M PERRY      CORRECT DATE FORMAT FOR
MB0113* 01/08/13 M BOWEN      FLEET STORY 1 - REMOVE CARDLESS 1HR LOGIC
SB0113* 01/14/13 S BOLING     FLEET STORY 14- INC0025567 ATM SURCHG FIX
ED0113* 01/17/13 E DUGAN      FLEET STORY 15- INC0021347 & INC0023481
ED0113* 01/18/13 E DUGAN      FLEET STORY 12 TRUNCATION > 999
ED0213* 02/20/13 E DUGAN      FLEET STORY 27 RFID CASH W/MIN FP QTY
MN0313* 03/11/13 M.NEWTON     FLEET STORY 13 - US GST SPLIT
SB0313* 03/22/13 S.BOLING     FLEET STORY 23 - FP CANCEL CHANGE FOR
      *                       CARD MOVE.
MN0413* 04/02/13 M.NEWTON     SPRINT 5-STORY 52-SPLIT ON GST
SB0413* 04/29/13 S.BOLING     SPRINT 6-STORY 75-
      *                       RFID LAST PURCHASE DATE INITIALIZATION
SB0513* 05/08/13 S.BOLING     FLEET STORY 46 - AUTH LIMIT CHANGES
      *                       RFID LAST PURCHASE DATE INITIALIZATION
SB0713* 07/14/13 S.BOLING     FLEET STORY 46 - FIX OTHER FUEL USED AMOUT
072213* 07/22/13 S.BOLING     FLEET STORY 88 - TERMINAL FUEL OVERRIDE
072313* 07/23/13 S.BOLING     FLEET STORY 46 - FIX OTH USED CALC
SB0813* 08/30/13 S BOLING     FLEET STORY B03217 - FIX OTH ASRA ABEND
MB1013* 10/29/13 M BOWEN      FLEET B03922 - FMRM 02 MANUAL FP TRANS
MB1013*                       FLEET B03924 - ADD 20000 LEVEL LIM FOR MC
MB1013*                       ALSO, FIX INC0082897
MB1113* 11/07/13 M BOWEN      FLEET B03928 - CARD EXPIRATION REMAINS
MB1213* 12/02/13 M BOWEN      FLEET B03382 - DRAFT REGISTRATION VIA IVR
MB0114* 01/06/14 M BOWEN      FIX FOR PROD ABENDS (LEN OF Q-COMMAREA)
BG0114* 01/27/14 B GANN       FLEET B-02951 - XCDM EXCLUSIONS
SB0114* 01/28/14 S BOLING     FLEET B-04531 - CAN TAXES AFTER DISCOUNTS
SB0214* 02/26/14 S BOLING     FLEET B-04531 - CHG DISCOUNT FIELD USED
022714* 02/27/14 S BOLING     FLEET B-04531 - PASS CTRL# TO TSFMO0CT
030114* 03/01/14 S BOLING     FLEET B-04531 - MORE CAN TAX CHANGES
030514* 03/05/14 S BOLING     FLEET B-04531 - ADD CHECK OF RMR-NATS-FLAG
030614* 03/06/14 S BOLING     FLEET B-04531 - ROUND US TAX ON FMLOG.
SB0414* 04/16/14 S BOLING     FLEET D-01172 - STOP CANADIAN TAX CALC FOR
SB0414* 04/16/14              TA TRAVEL CENTERS.
SB0514* 05/05/14 S BOLING     D-01144 - FIX ISSUE WITH PRICING FILE
SB0514*                       DISCOUNTS WHEN GETTING DISCOUNT BY PRODUCT
SB0614* 06/10/14 S BOLING     FLEET OTR - MERCHANT SURCHARGE EFFORT 1
072314* 07/23/14 B WEBB       SPLIT TAXES ON SPLIT XTNS BY PRODUCT CODE
MB0714* 07/24/14 M BOWEN      FLEET B-08304 USE FMRACKH RACK HIST FILE
SB0814* 08/04/14 S BOLING     FLEET OTR - FMRM SUB PRODUCT CODE LIMITS
SB0814*                                 - MERCHANT SURCHRG DUP TRNS FIX
SB0814*                                 - MERCHANT SURCHRG EXP PRODUCTS
080614* 08/06/14 S BOLING     FLEET OTR - CHK COMCASH FLG FOR PREPAID
081414* 08/14/14 S BOLING     FLEET OTR - SP14 ADD CUST DATA TO RESPONSE
ED0814* 08/14/14 E DUGAN      FLEET OTR - EXCLUDE DIAL SP14 CUST DATA
MN0814* 08/18/14 M.NEWTON     TK20885 AND TK21831 - ADDITIONAL FIELDS TO
MN0814*                       IRIS MQ
SB0914* 09/03/14 S BOLING     FLEET OTR - SP14 ADDITIONAL CHANGES.
ED0914* 09/08/14 E DUGAN      FLEET OTR - QA FIND COMCASH FLAG
091614* 09/16/14 S BOLING     FLEET OTR - SET MAX QTY TO 99999 DEFAULT.
091914* 09/19/14 S BOLING     FLEET OTR - COMCASH FIX FOR BALANCED BASED
092214* 09/22/14 S BOLING     FLEET OTR - CURRENCY CONV OF QUANTITIES
092414* 09/23/14 S BOLING     FLEET OTR - FIX MULTIPLE PRODUCTS IN ONE
092414*                       CATEGORY ON SP14 WITH FLEET LIMITS = Y
SB1014* 10/06/14 S BOLING     FLEET OTR - FIX SP14 20000 LEVEL QTYS
100914* 10/09/14 S BOLING     FLEET OTR - UNIT GROUP CHANGES.
101014* 10/10/14 S BOLING     PROGRAM DEBT CHANGES.
ED1014* 10/22/14 E DUGAN      FLEET OTR - ADDITIONAL UNIT GROUP CHANGES
101314* 10/13/14 S BOLING     FLEET OTR DEFECT D-01602. (INC0130174)
101314*                       ONE TIME CASH ADVANCE ERROR.
102414* 10/24/14 B WEBB       FIX FOR CHANGE MADE 072314
102714* 10/27/14 S BOLING     FLEET OTR - B-01580 SPLIT DISCOUNT IN
102714*                       INTRADAY TRANSACTIONS
SB1114* 11/06/14 S BOLING     FLEET OTR DEFECT D-01142. (INC0087893,
SB1114*                       INC0114534, INC0096653) BALANCED BASED
SB1114*                       PRICING FILE DISCOUNTS DO NOT SHOW IN
SB1114*                       SALES JOURNAL AS FOCUS DISCOUNTS.
111814* 11/18/14 S BOLING     FLEET - B-11079 POPULATE NEW FMLOG FIELDS
111814*                       MISC 3 & TANK CAPACITY.
112014* 11/20/14 S BOLING     FLEET OTR - B-10123 RESET LIMITS AFTER
112014*                       ONE TIME LIMIT ON FMRM.
112514* 11/25/14 B WEBB       FIX SONAR ISSUE - CRITICAL - RECURSION
120914* 12/09/14 B WEBB       FLEET - B-11459 - 'P' PRICING FILE OPTION
SB0115* 01/20/15 S BOLING     FLEET B-11819 MINIMUM AND GALLON UP FEES
012315* 01/23/15 B WEBB       D-01975 - ISSUE W/ CAN SPLIT XTN'S W/ DISC
013015* 01/30/15 S BOLING     D-01995 - UPDATE OTHER USED QTY ON PRMINFO
013015*                       ON FP CANCEL TRANS.
SB0315* 03/17/15 S BOLING     D-12740 - FUEL UP
SB0415* 04/10/15 S BOLING     D-12740 - FUEL UP CALCULATION CHANGE
SB0615* 06/15/15 S BOLING     D-02384 - FUEL UP CORRECTION OF DAILY
SB0615*                       CREDIT LIMIT.
SB0615*                       D-02383 - FUEL UP FP CANCEL FIX.
061615* 06/16/15 S BOLING     D-12579 - IGNORE FUEL LIMIT CHECK IF
061615*                       PRODUCT NOT PURCHASED.
061715* 06/17/15 S BOLING     B-13958 - RETURN AVAILIBLE AMOUNT ON SP08
061715*                       WHEN FUEL FLAGGED NO AND PRODUCTS PURCHASE
061815* 06/18/15 S BOLING     D-02365 - CANADIAN TAX CORRECTION ON
061815*                       SPLIT TRANSACTIONS.
SB0715* 07/09/15 S BOLING     D-02365 - CHG SPLIT LOGIC FOR AUTO CALC=Y
072315* 07/23/15 S BOLING     D-02507 - PUT OTHER FUEL ON LAST SPLIT TRN
MB0715* 07/27/15 M BOWEN      D-02452 - DON'T USE FMRACKH RATE > 90 DAYS
MB0715* 07/29/15 M BOWEN      B-15085 - FUEL UP PPG UPDATE TIMEFRAME
ED0815* 08/31/15 E DUGAN      B-15146 - CARD PRE VALIDATION - CLC
BG0915* 09/24/15 B GANN       B-16348 - CLC CANCEL
SB1115* 11/19/15 S BOLING     D-02806 - SP14 FUEL=N PRODUCT=Y FIX
DR1115* 11/19/15 D REED       B-17358 - MOBILE FUEL PRICE VALIDATION
SB0116* 01/26/16 S BOLING     D-02922 - ALLOW MASTERCARD MINIMUM FEES
SB0116*                       D-02926 - FIX ABEND IN SP14 POPULATION RTN
DR0116* 01/28/16 D REED       B-10334 - ID MATCH NUMBER PROPRIETARY
SB0316* 03/02/16 S BOLING     B-20132 - ALLOW MASTERCARD GALLON UP FEES
042816* 04/28/16 J HUNTER     D-03141 - FIX CAT SCALE TRANS FOR INTRADAY
050316* 05/03/16 J HUNTER     B-18716 - ADD NATS PRODUCT CODES 34 & 35
SB0516* 05/20/16 S BOLING     B-22672 - SMALL FLEET DISCOUNT
SB0616* 06/01/16 S BOLING     B-22763 - ALLOW SECOND TRANSACTION FEE
DR0616* 06/22/16 D REED       D-03186 - DONLEN ISSUE WITH X7 EXPIRATION
080116* 08/01/16 B WEBB       B-24162 - ALLOW HUB TO PASS THROUGH FOR
080116*                       REEFER XTN'S IF IT IS A MOBILE FUEL XTN
PM0916* 09/28/16 P MCLENDON   B-24034 AUTH WITH NET PRICING FILE INSTEAD
PM0916*                       OF FMRM FOR OTHER FUEL PRODUCTS
DR1016*          D REED       COMPLETION OF B-24034
BG1116* 11/18/16 B GANN       NAT STORY B-26840 - PERMIT PRE-AUTH
DR0117* 01/10/17 D REED       B-28010 - HUB VALIDATION FOR REEFER
SB0217* 02/08/16 S BOLING     B-28572 - COMCHEK MOBILE LIMITS
DR0317* 03/22/17  D REED      B-29360 - IF PRICE VALIDATION NO DISCOUNTS
CP0417* 04/12/17  C PRYOR     INC0247114 - HUB READING ON UNIT
CP0417*                       GETTING UPDATED ON PRODUCT ONLY PURCHASE
PM0517* 05/02/17 P MCLENDON   B-30701 MOBILE FUEL RATE CUSTOMIZATION
DR0817* 08/04/17  D REED      B-31184 - IF QUANTITY IS BELOW THRESHOLD
DR0817*                                DO NOT VALIDATE THE PRICE
VD0917* 09/13/17  V DEVAPOOJA B-31216 - ONROAD CREDIT TRANSACTIONS DEBIT
VD0917*                       BALANCE CASH ON CARD AVAILABILITY
DR1117* 11/09/17  D REED      B-34229 - SWIFT MOT START TRAN FMTB
VD0218* 02/07/18  V DEVAPOOJA D-04800 FIX FP CANCEL ABEND ONROAD CARD
JS0218* 02/20/18  SCHLEICHER  PRICE FILE USE BUS-RULES TO SPLIT DISC
JSH318* 03/22/18  SCHLEICHER  FLEET COMM B-37084 PRICING REL 'P' FOR
JSH318*                       HUSKY/NEW CSTPLUS USE OPT FOR PRICE FILE
JSH318*   - THIS 'P' OPTION IN PRICE FILE ALREADY EXISTED FOR OTH FUEL
JSH318*     SEE CHANGE BECKY WEBB MADE 120914 (IN POS 1-6)
AT0418*     COPYBOOK CHANGES FOR PILOT PRICING
BG0418* 04/20/18  B. GANN     B-37480 - ADD PRICE FILE COST PLUS
BG0418*                       COMPONENTS TO FMLOG.
CP0618* 06/01/18  C. PRYOR    B-34391 - ALLOW VC FOR BATCH FUEL
JS0618* 06/28/18  JSCHLEICHER D-04903 - HUSKY/SPLIT XTN WITH TAX ISSUE
AT0618* 06/28/18  ATAUNTON    D-04903 - CORRECT MULTI SPLIT ISSUE
AT0918* 09/18/18  ATAUNTON     D-05599 - CORRECT TAX ISSUE
AT1218* 12/18/18  ATAUNTON     D-????? - CORRECT CASH ADVANCE
SR0119* 01/22/19  SRAMDHAVE    B-41729 NAT INFINITY CODES - RECOMPILE
SD0219* 02/26/19  S DIPPIE     B-42740 PILOT CAN TAXES - COUNTING TWICE
SD0719* 07/18/19  S DIPPIE     B-45495 MULTIPLE TRIP NUMBERS
SD0819* 08/02/19  S DIPPIE     D-06438 FIX S0C7 ABEND ISSUE WITH TSFMO0G
SD0919* 09/18/19  S DIPPIE     B-47641 UNIT PHASE US CAPTURE 10 CH UNIT
SD1219* 12/12/19  S DIPPIE     B-41420 FM81, CORRECT CANADIAN TAX 03 REC
SD0320* 03/05/20  S DIPPIE     D-07042 FIX TRANS DECLINE (EXP DATE)
SD0220* 02/13/20  S DIPPIE     B-44804 CORRECT DEFECT IN FM12
PJ0520* 05/14/20  P JAIN       B-52349 NEW WRITE CONTROL CHAR 'M' FOR
PJ0520*                        MOBILE AND 'C' FOR EMV.
DR0620* 06/01/20  D REED       B-51989 CHANGE WHERE PRMINFO WRITE IS
DR0620*                        DONE SO IT WILL NOT CREATE ISSUE IN
DR0620*                        PRMRFLOG FOR BILL AT PICKUP EPIC CHANGES
SD0620* 06/24/20  S DIPPIE     FP-5 FUEL PROXIMITY CHANGES
SD0920* 09/11/20  S DIPPIE     FP-620 UPD EXP DATE WHEN WRITE CTL M OR C
SD1020* 10/15/20  S DIPPIE     FP-812 ADJUST FUEL QTY FROM CXXCO0TE
SD1020* 10/15/20  S DIPPIE     FE-419 EXCLUDE HOLD AMT FOR 1 TIME OFF CS
SD1220* 12/07/20  S DIPPIE     FE-1478 DO NOT UPDATE PRODUCT USED FOR
SD1220*                        1-TIME OFF COMP STANDARD MC CARD
SD1220* 12/07/20  S DIPPIE     FE-1479 FIX INTRADAY REBATE INDICATOR
JS1220* 12/07/20  J SCHLEICHER FE-1369 CANADIAN PILOT PRICING ISSUE
SD0321* 03/03/20  S DIPPIE     FE-2060 CORRECT SP14 REPLY FOR CUSTOMERS
SD0321*                        ON FLEET LIMITS
SD0321* 03/08/20  S DIPPIE     FE-258 SP11 NOT UPDATING PRICE ON SCMM
DR0121* 01/06/21  D REED       FE-1057 VALIDATE CVC1
MP0221* 02/26/21  P MANOJ      FE-2004 CVC1 VALIDATION. HANDLE TRNXS
MP0221*                        THAT DON'T HAVE CVC1 SENT IN.
DR0321* 03/30/21  D REED       FE-2004 IF CHIP USAGE CHG SVC TO 999
DR0321*                        BEFORE VALIDATING CVC1
SD0401* 04/01/21  S DIPPIE     FE-2326 CVC1 - VALIDATE THE CHIP CVC WHEN
SD0401*                        THE CHIP IS READ AT POS SP1, SP8, SP14
PJ0421* 04/15/21  P JAIN       FE-2416 CVC1 - REMOVE THE LOGIC THAT
PJ0421*                        CHANGES A KEYED TO SWIPED
SD0521* 05/20/21  S DIPPIE     FE-2754 CVC1 VALIDATION ADDITIONAL CHANGE
SD0521*                        FOR CHIP SENT IN AS SWIPE
SD0521* 06/16/21  S DIPPIE     FE-3052 CASH ON CARD ATM ADVICE, DO NOT
SD0521*                        DO CVC1 CHECK
MP0821* 08/03/21  MANOJ P      FE-3422-PFJ-CHANGE UPDATE LOGIC OF FIELD
MP0821*                        FMDL-SMFL-DISCOUNT TO MOVE TO TSFMO0CD.
AA0921* 09/08/21  A ALBERT     B-42138 DYNAMIC BIN RANGE
BG0122*********THE NEXT TWO STORIES WILL GO INTO PRODUCTION TOGETHER.
BG0122* 01/11/22  B GANN       FE-3461 - TREAT INACTIVE DRIVER ID AS NOT
BG0122*                        AVAILABLE.
011222* 01/12/22  B GANN       FE-4286 - LINK TO TSFMO0TX FOR TAX EXEMPT
SD0122* 01/06/22  S DIPPIE     FE-4262 CHECK FOR CVC1 ON PRE-AUTH
SD0222* 02/01/22  S DIPPIE     FE-4018 BREAK OUT FUEL TYPE DISCOUNTS
DR0422* 03/31/22  D REED       SE-1077 NALP CVC EPIC
      ******************************************************************

      *==============================
       ENVIRONMENT DIVISION.
      *==============================
      *------------------------------
        CONFIGURATION SECTION.
      *------------------------------
         SOURCE-COMPUTER. IBM-4300.
         OBJECT-COMPUTER. IBM-4300.

      *==============================
       DATA DIVISION.
      *==============================
      *------------------------------
        WORKING-STORAGE SECTION.
      *------------------------------
MB0106 01  WS-TIMESTAMP.
MB0106     05 WS-CURRENT-TIMESTAMP       PIC X(26).
MB0106     05 WS-TIMESTAMP-GMT           PIC X(26).
MB0106     05 WS-GMT-HOURS               PIC S999       COMP-3.
091411     05 WS-TIMESTAMP-NP            PIC X(26).
080210***** 19-CHARACTER TIMESTAMP USED FOR IRIS DATA
080210     05 WS-TS-WORK.
              10 WS-TS-DATE.
                 15 WS-TS-CEN                  PIC  9(02).
                 15 WS-TS-YEAR                 PIC  9(02).
                 15                            PIC  X(01) VALUE '-'.
                 15 WS-TS-MON                  PIC  9(02).
                 15                            PIC  X(01) VALUE '-'.
                 15 WS-TS-DAY                  PIC  9(02).
              10                               PIC  X(01) VALUE '-'.
              10 WS-TS-TIME.
                 15 WS-TS-HOUR                 PIC  9(02).
                 15                            PIC  X(01) VALUE '.'.
                 15 WS-TS-MIN                  PIC  9(02).
                 15                            PIC  X(01) VALUE '.'.
                 15 WS-TS-SEC                  PIC  9(02).
080210     05 WS-TS-DATE-IN               PIC  9(04).
080210     05 WS-TS-TIME-IN               PIC  9(06).

MN0207 01  WS-PRD-ALLOW                PIC S9(05)V99  VALUE ZEROS.
MN0207 01  WS-PRD-CUR-DAY              PIC S9(05)V99  VALUE ZEROS.
ED0213 01  WS-CASH-GALLONS             PIC S9(5)V99         VALUE +0.
DR0317 01  WS-PRC-POS-VARIANCE         PIC S9V9(5) COMP-3 VALUE +0.
DR0422 01  WS-DUP-COUNTER-MAX          PIC S9(05) COMP-3 VALUE 10000.
DR0422 01  WS-NUM-7                    PIC  9(07) VALUE ZEROES.
DR0422 01  WS-NUM-9                    PIC  9(09) VALUE ZEROES.
DR0422 01  WS-NUM-15                   PIC  9(15) VALUE ZEROES.

      *-----------------------------*
      * DB2 COPYBOOKS AND WORK STUFF*
      *-----------------------------*
021908******** ALL INCLUDES EXCEPT SQLCA CHANGED TO COPY
021908******** SO YOU CAN SPECIFY WHICH COPY LIBRARY
JS1199     EXEC SQL INCLUDE SQLCA    END-EXEC.
JS1199     COPY DDRVRGRP.
JS1199     COPY DCUSDRVR.
CP1011     COPY DMCAUTH.
JS1199     COPY DCLUSKEY.
JS1199     COPY ONLNDFC.
CP0406     COPY DSBPRDXL.
CP0406     COPY DSBPRDDS.
SD0320     COPY DCRDTYUP.
DR0116*****  USED TO CALL TSXCS060 FOR ID MATCH NUMBER
DR0116     COPY TSXCW280.
021908***** DB2 TABLE DBO.HIERARCHY
021908     COPY DHIERACH.
021908***** DB2 TABLE DBO.HIER_NODE
021908     COPY DHINODE.
021908***** DB2 TABLE DBO.HIER_UNIT_GRP_NODE
021908     COPY DUNITNOD.
021908***** DB2 TABLE DBO.HIER_DRV_GRP_NODE
021908     COPY DHDRVNOD.
KB0408***** DB2 TABLE DBO.HIER_DRV_GRP_DRV
KB0408     COPY DHDRV.
102810***** DB2 TABLE DBO.PRP_PRE_AUTH
041112     COPY DPRPPAUT.
091411***** DB2 TABLE DBO.PFID_CUST_XREF
091411     COPY DPFIDCSX.
020712***** DB2 TABLE DBO.PFID_MAINT
PM0916     COPY DPFIDMNT.
091411***** DB2 TABLE DBO.NET_PRICING_HDR
091411     COPY DNETPHDR.
091411***** DB2 TABLE DBO.NET_PRICING
BG0418**   COPY DNETPRCG.
BG0418     COPY DNETPRC1.
CP1011***** DB2 TABLE DBO.TRNS_HIST
CP1011     COPY DXTNHIST.
041112***** DB2 TABLE DBO.RFID_XREF
041112     COPY DRFIDXRF.
041112***** DB2 TABLE DBO.CRD_TKN_XREF
041112     COPY DCRDTKNX.
SB0113***** DB2 TABLE DBO.CURR_RT
SB0113     COPY DCURRR.
100914***** DB2 TABLE DBO.CUST_UNIT
100914     COPY DCUSUNT.
100914***** DB2 TABLE DBO.CUST_UNIT_GRPS
100914     COPY DCUUGRP.
112014***** DB2 TABLE CXXCOW.PROD_LMT_NTWRK
112014     COPY SPRDLMTN.
SD0620***** FUEL/PROXIMITY COPYBOOK
SD0620     COPY CXXCW0TE.
011222***** TAX EXEMPT ACCOUNT COPYBOOK
011222     COPY DTAXEXEA IN CPYREL.

021908********** DB2 CURSORS
021908     EXEC SQL DECLARE CUR_HIER_DRV_NODE CURSOR FOR
              SELECT  NODE_ID,
                      DRV_GRP_ID
                FROM  DBO.HIER_DRV_GRP_NODE
                WHERE HIER_ID         = :DHDRVNOD.HIER-ID  AND
                      NODE_ID         = :DHDRVNOD.NODE-ID
                FOR READ ONLY WITH UR
           END-EXEC.

021908     EXEC SQL DECLARE CUR_HIER_DRV CURSOR FOR
              SELECT  B.DRV_ID,
                      B.DRV_GRP_ID,
DS0608                B.DRV_LST_NM,
DS0608                B.DRV_FST_NM,
DS0608                B.DRV_LIC_NBR,
DS0608                B.DRV_LIC_ST
                FROM  DBO.HIER_DRV_GRP_NODE  A,
                      DBO.HIER_DRV_GRP_DRV   B
                WHERE A.HIER_ID         = :DHDRVNOD.HIER-ID  AND
                      A.NODE_ID         = :DHDRVNOD.NODE-ID  AND
                      B.DRV_ID          = :DHDRV.DRV-ID      AND
                      A.HIER_ID         = B.HIER_ID          AND
                      A.DRV_GRP_ID      = B.DRV_GRP_ID
                FOR READ ONLY WITH UR
           END-EXEC.

102810     EXEC SQL DECLARE CUR_PRE_AUTH CURSOR FOR
              SELECT  PRE_AUTH_TS
                FROM  DBO.PRP_PRE_AUTH
                WHERE CRD_NBR         = :DPRPPAUT.CRD-NBR  AND
                      MRCH_NBR        = :DPRPPAUT.MRCH-NBR AND
                      PRE_AUTH_DT    >= :DPRPPAUT.PRE-AUTH-DT
                ORDER BY PRE_AUTH_TS DESC
                FOR READ ONLY WITH UR
           END-EXEC.

102810     EXEC SQL DECLARE CUR_PRE_AUTH_UPDT CURSOR FOR
              SELECT  PRE_AUTH_DT,
                      PRE_AUTH_TS,
                      D1_AMT_LIM,
                      D2_AMT_LIM,
                      RFR_AMT_LIM,
                      OTH_AMT_LIM,
                      OIL_AMT_LIM,
                      CASH_AMT_LIM
                FROM  DBO.PRP_PRE_AUTH
                WHERE CRD_NBR      = :DPRPPAUT.CRD-NBR     AND
                      MRCH_NBR     = :DPRPPAUT.MRCH-NBR    AND
                      PRE_AUTH_DT >= :DPRPPAUT.PRE-AUTH-DT AND
                      POST_FLG     < 'P'
                ORDER BY PRE_AUTH_TS DESC
                FOR READ ONLY WITH UR
           END-EXEC.

CP0405*-----------------------------*
CP0405* MQSERIES WORK FIELDS        *
CP0405*-----------------------------*
CP0405 01  MQM-GET-MESSAGE-OPTIONS.
CP0405     COPY CMQGMOV.
CP0405 01  MQM-CONSTANTS.
CP0405     COPY CMQV.
CP0405 01  MQM-PUT-MESSAGE-OPTIONS.
CP0405     COPY CMQPMOV.
CP0405 01  W03-PUT-BUFFER.
CP0405     05 W03-CSQ4BQRM.
CP0405     COPY CSQ4VB4.
CP0405
CP0405 01  W00-MESSAGE-BUFFER.
CP0405     03  MQM-OBJECT-DESCRIPTOR.
CP0405         COPY CMQODV.
CP0405     03  MQM-MESSAGE-DESCRIPTOR.
CP0405         COPY CMQMDV.
CP0405     03  W00-MSGBUFFER.
CP0405         05 W00-MSGBUFFER-ARRAY  PIC X(1) OCCURS 9950 TIMES.
CP0405
CP0405 01  WS-MQSERIES-WORK-FIELDS.
CP0405     05 WS-QNAME-OUTBOUND        PIC X(48) VALUE SPACES.
CP0405     05 WS-QLENGTH-OUTBOUND      PIC S9(9) BINARY VALUE 0.
CP0405
CP0405 01  W03-BUFFLEN                 PIC S9(9) BINARY VALUE 0.
CP0405 01  W03-HCONN                   PIC S9(9) BINARY VALUE 0.
CP0405 01  W03-HOBJ                    PIC S9(9) BINARY VALUE 0.
CP0405 01  W03-OPENOPTIONS             PIC S9(9) BINARY.
CP0405 01  W03-OPTIONS                 PIC S9(9) BINARY.
CP0405 01  W03-COMPCODE                PIC S9(9) BINARY.
CP0405 01  W03-COMPCODE-CHAR           PIC X(9)    VALUE SPACES.
CP0405 01  W03-REASON                  PIC S9(9) BINARY.
CP0405 01  W03-REASON-CHAR             PIC X(9)    VALUE SPACES.
CP0405
CP0405 01  WS-PGM-MQ-WORKFIELDS.
CP0405     05 WS-BATCH-QUEUE-NAME      PIC X(48)
CP0405        VALUE 'TSFM.FPLG.BATCH'.
CP0405     05 WS-ONLINE-QUEUE-NAME     PIC X(48)
CP0405        VALUE 'TSFM.FPLG.ONLINE'.
CP0405     05 WS-QLENGTH-FPLG          PIC S9(9)  VALUE +2260.
MP0411     05 WS-BTCHSET-QUEUE         PIC X(48)
MP0411        VALUE 'TSMM.MMBS'.
MP0411     05 WS-QLENGTH-BTCHSET       PIC S9(9)  VALUE +462.

      *-----------------------------*
      * DISCOUNT WORK AREA          *
      *-----------------------------*
082212 01  WS-FMCD-COMMAREA-CHG.
      ***** FIELDS PASSED TO TSFMO0CD THAT CAN BE CHANGED;
      ***** THESE FIELDS MOVED HERE FROM OTHER PARTS OF PROGRAM SO
      ***** THEY CAN BE MOVED AS A GROUP
           05 WS-COST-PLUS-USED         PIC  X(01)           VALUE 'N'.
           05 WS-SETTLE-DIRECT-BILL-FLAG  PIC  X(01).
JS0206     05 WS-PRD-CALC-TYPE          PIC  X(04).
082008     05 WS-MANUAL-FEE             PIC S9(5)V999 COMP-3 VALUE +0.
           05 WS-AMOUNT-OF-DISC-CPG     PIC S99V9999  COMP-3 VALUE ZERO.
           05 SAVE-FMDL-SC-INVOICE-AMT  PIC S9(5)V99  COMP-3 VALUE +0.
           05 WS-TOTAL-GALLONS          PIC S9(5)V99         VALUE +0.
           05 WS-TOTAL-FACE             PIC S9(6)V99         VALUE +0.
CP0700     05 WS-TOTAL-FACE-SC          PIC S9(6)V99         VALUE +0.
CP0800     05 WS-SC-AUTO-CASH-ADD-ON    PIC S9(6)V99         VALUE +0.
CP0800     05 WS-SC-MAN-CASH-ADD-ON     PIC S9(6)V99         VALUE +0.
082008     05 WS-BASE-FUEL-RATE         PIC S9(5)V99  COMP-3 VALUE ZERO.
082008     05 WS-MIXED-FUEL-RATE        PIC S9(5)V99  COMP-3 VALUE ZERO.
JS0206*** (PRODUCT FEES WORK AREA) ***
JS0206     05 WS-PRD-FEE-WORK-AREA.
JS0206      10 FILLER OCCURS 3 TIMES.
JS0206        15 WS-PRD-FEE-TYPE           PIC X(01).
JS0206        15 WS-PRD-FUNDED-RATE        PIC S9(5)V99 COMP-3.
JS0206        15 WS-PRD-DB-RATE            PIC S9(5)V99 COMP-3.
JS0206        15 WS-PRD-FUNDED-RATE-ALTCUR PIC S9(5)V99 COMP-3.
JS0206        15 WS-PRD-DB-RATE-ALTCUR     PIC S9(5)V99 COMP-3.
JS0206        15 WS-PRD-SC-RATE            PIC S9(5)V99 COMP-3.
JS0206        15 WS-PRD-SCM-AUTO-RATE      PIC S9(5)V99 COMP-3.
JS0206        15 WS-PRD-SCM-MANUAL-RATE    PIC S9(5)V99 COMP-3.
JS0206        15 WS-PRD-SCM-FLAT-OR-POF    PIC X(1).
JS0206     05 WS-PRD-FEE-SC-WORK-AREA.
JS0206      10 FILLER OCCURS 3 TIMES.
JS0206        15 WS-PRD-PROD-FEE           PIC S9(5)V99 COMP-3.
JS0206     05 WS-FMDL-PRODUCT-FEE-INFO.
JS0206       10 WS-FMDL-PRODUCT-FEES OCCURS 3 TIMES.
JS0206        15 WS-FMDL-PF-SC-FEE               PIC S9(05)V99  COMP-3.
JS0206        15 WS-FMDL-PF-SC-FEE-SOURCE        PIC X(01).
JS0206        15 WS-FMDL-PF-SC-FEE-LOC-TYPE      PIC X(02).
JS0206        15 WS-FMDL-PF-SC-FEE-TYPE          PIC X(01).
JS0206        15 WS-FMDL-PF-CUST-FEE             PIC S9(05)V99  COMP-3.
JS0206        15 WS-FMDL-PF-CUST-FEE-SOURCE      PIC X(01).
JS0206        15 WS-FMDL-PF-CUST-FEE-CUST-TYPE   PIC X(02).
JS0206        15 WS-FMDL-PF-CUST-FEE-TYPE        PIC X(01).
JS0298     05 WS-DISCOUNT-AND-FEE-AREA.
             10 WS-DC-DISCOUNT-AMT        PIC S9(5)V99 COMP-3 VALUE +0.
JS0298       10 WS-DC-SC-DISCOUNT-AMT     PIC S9(5)V99 COMP-3 VALUE +0.
             10 WS-DC-SC-REBATE-AMT       PIC S9(5)V99 COMP-3 VALUE +0.
             10 WS-DC-FEE-AMT             PIC S9(5)V99 COMP-3 VALUE +0.
             10 WS-DC-FEE-AMT-FUEL        PIC S9(5)V99 COMP-3 VALUE +0.
             10 WS-DC-FEE-AMT-CUSTOM      PIC S9(5)V99 COMP-3 VALUE +0.
             10 WS-DC-FEE-AMT-RETAIN      PIC S9(5)V99 COMP-3 VALUE +0.
             10 WS-DC-FEE-AMT-MANUAL      PIC S9(5)V99 COMP-3 VALUE +0.
             10 WS-DC-DISCOUNT-FOCUS-SELECT PIC X(1)          VALUE ' '.
             10 WS-DC-DISCOUNT-METHOD     PIC X(1)            VALUE ' '.
             10 WS-DC-REBATE-AMT          PIC S9(5)V99 COMP-3 VALUE +0.
             10 WS-DISCOUNT-TYPE-FLAG     PIC X(1)            VALUE ' '.
              88 WS-DISCOUNT-TYPE-IS-CPG                      VALUE 'G'.
              88 WS-DISCOUNT-TYPE-IS-POF                      VALUE 'F'.
              88 WS-DISCOUNT-TYPE-IS-FLT                      VALUE '1'.
              88 WS-DISCOUNT-TYPE-IS-COST-PLUS                VALUE 'C'.
              88 WS-DISCOUNT-TYPE-IS-NATS                     VALUE 'U'.
              88 WS-DISCOUNT-TYPE-IS-CPG-POF                  VALUE 'B'.
              88 WS-DISCOUNT-TYPE-IS-CPG-FLT                  VALUE '2'.
              88 WS-DISCOUNT-TYPE-IS-POF-FLT                  VALUE '3'.
              88 WS-DISCOUNT-TYPE-IS-ALL                      VALUE '4'.
CP0400       10 WS-SC-CORP-REB-AMT        PIC S9(5)V99 COMP-3 VALUE +0.
CP0400       10 WS-ADJ-FOR-CORP-REB       PIC X               VALUE ' '.
SB0614 01  WS-FMCD-MISC-AREA.
SB0614     05  WS-MERCH-SURCHRG-FLAG      PIC X(01)           VALUE ' '.
SB0614         88 APPLY-MERCH-SURCHRG     VALUE 'Y'.
SB0614     05  WS-MERCH-SURCHRG-TOTAL     PIC S9(7)V99 COMP-3 VALUE +0.
SB0115     05  WS-MINIMUM-FEE-FLAG        PIC X(1)            VALUE ' '.
SB0115         88 APPLY-SC-MIN-FEE        VALUE 'Y'.
SB0115     05  WS-MIN-FUEL-FEE-DIFF       PIC S9(3)V99 COMP-3 VALUE +0.
SB0115     05  WS-GALUP-FEE-FLAG          PIC X(1)            VALUE ' '.
SB0115         88 APPLY-SC-GALUP-FEE      VALUE 'Y'.
SB0115     05  WS-GALUP-FUEL-FEE          PIC S9(3)V99 COMP-3 VALUE +0.
SB0516     05  WS-DC-DISCOUNT-SMFL        PIC S9(5)V99 COMP-3 VALUE +0.

060512***** ADJUSTED TO ACTUAL SIZE OF WS-DISCOUNT-AND-FEE-AREA
082212 01  WS-HOLD-DISC-AND-FEE-AREA      PIC X(044).

JS0298 01  WS-TOTAL-AMOUNT-FLDS.
           05 WS-BILLABLE            PIC S9(5)V99    VALUE ZERO COMP-3.
           05 WS2-BILLABLE           PIC S9(5)V99    VALUE ZERO COMP-3.
           05 WS3-BILLABLE           PIC S9(5)V99    VALUE ZERO COMP-3.
           05 WS-NON-BILLABLE        PIC S9(5)V99    VALUE ZERO COMP-3.
           05 WS2-NON-BILLABLE       PIC S9(5)V99    VALUE ZERO COMP-3.
           05 WS3-NON-BILLABLE       PIC S9(5)V99    VALUE ZERO COMP-3.
           05 WS-CAN-BILLABLE        PIC S9(5)V99    VALUE ZERO COMP-3.
           05 WS-US-BILLABLE         PIC S9(5)V99    VALUE ZERO COMP-3.
           05 WS-CURXMN              PIC S9(6)V99    VALUE ZERO.
           05 WS2-CURXMN             PIC S9(6)V99    VALUE ZERO.
           05 WS3-CURXMN             PIC S9(6)V99    VALUE ZERO.
           05 WS-TOTAL-REQUEST       PIC S9(6)V99    VALUE ZERO COMP-3.
           05 WS2-TOTAL-REQUEST      PIC S9(6)V99    VALUE ZERO COMP-3.
           05 WS3-TOTAL-REQUEST      PIC S9(6)V99    VALUE ZERO COMP-3.
           05 WS2-BILLABLE-FUEL      PIC S9(5)V99    VALUE ZERO COMP-3.
           05 WS2-NON-BILLABLE-FUEL  PIC S9(5)V99    VALUE ZERO COMP-3.
JS0298 01  WS-HOLD-TOTAL-AMOUNT-FLDS PIC X(100).

       01  SETTLEMENT-WORK-FIELDS.
           05 WS-BALANCE-GROUP-ID               PIC S9(9) COMP-3.
           05 WS-CLOSING-GROUP-ID               PIC S9(9) COMP-3.
           05 WS-PAYMENT-GROUP-ID               PIC S9(9) COMP-3.
           05 WS-BALANCE-ITEM-NUMBER            PIC S9(7) COMP-3.
           05 WS-CLOSING-ITEM-NUMBER            PIC S9(7) COMP-3.
           05 WS-PAYMENT-ITEM-NUMBER            PIC S9(7) COMP-3.
           05 WS-CREATE-BALANCE-GROUP           PIC X(1).
           05 WS-CREATE-CLOSING-GROUP           PIC X(1).
           05 WS-CREATE-PAYMENT-GROUP           PIC X(1).
           05 WS-SETTLE-TS-CODE                 PIC X(10).
           05 WS-SETTLE-ORIG-TS                 PIC X(10).
JS0298     05 WS-SPLIT-SETTLE-FLAG              PIC X(1).
JS0298     05 WS-SPLIT-SETTLE-COUNT             PIC 9(1).

SD0222 01  WS-PRODUCT-DISCOUNT-AREA.
SD0222     05  WS-PD-OTH-FUEL-DISC       PIC 9(3)V99.
SD0222     05  WS-PD-RFR-FUEL-DISC       PIC 9(3)V99.
SD0222     05  WS-PD-NR1-FUEL-DISC       PIC 9(3)V99.
SD0222     05  WS-PD-NR2-FUEL-GAL        PIC 9(3)V99.
SD0222     05  WS-PD-NR2-FUEL-PPG        PIC 99V9(3).
SD0222     05  WS-PD-NR2-FUEL-COST       PIC 9(3)V99.
SD0222     05  WS-PD-NR2-FUEL-DISC       PIC 9(3)V99.
SD0222     05  WS-PD-DEF-FUEL-GAL        PIC 9(3)V99.
SD0222     05  WS-PD-DEF-FUEL-PPG        PIC 99V9(3).
SD0222     05  WS-PD-DEF-FUEL-COST       PIC 9(3)V99.
SD0222     05  WS-PD-DEF-FUEL-DISC       PIC 9(3)V99.
SD0222     05  WS-PD-CNG-FUEL-GAL        PIC 9(3)V99.
SD0222     05  WS-PD-CNG-FUEL-PPG        PIC 99V9(3).
SD0222     05  WS-PD-CNG-FUEL-COST       PIC 9(3)V99.
SD0222     05  WS-PD-CNG-FUEL-DISC       PIC 9(3)V99.
SD0222     05  WS-PD-GAS-FUEL-GAL        PIC 9(3)V99.
SD0222     05  WS-PD-GAS-FUEL-PPG        PIC 99V9(3).
SD0222     05  WS-PD-GAS-FUEL-COST       PIC 9(3)V99.
SD0222     05  WS-PD-GAS-FUEL-DISC       PIC 9(3)V99.

      *-------------------------------------*
      * ATM WORK AREA                       *
      *-------------------------------------*
MP0106     COPY ATMSTANC.
SD0621     COPY TSXCW030.
072811     COPY TSXCW008.

       01  ATM-WORK-AREA.
           05 WS-TSXCO0AT-COMM-AREA.
              10 FILLER                PIC X(4).
DR0121        10 WS-TSXCO0AT-COMMAREA  PIC X(2452).
MP0800 01  WS-SAVE-ATM.
MP0800     05 WS-SAVE-ATM-ERROR-NUMBER  PIC S9(5) COMP-3 VALUE +0.
           05 WS-SAVE-ATM-ERROR-MESSAGE PIC X(80)        VALUE SPACES.
       01  POS-OUTPUT-AREA.
           05 POS-ERROR-NUMBER        PIC S9(5) COMP-3 VALUE +0.
081414     05 POS-MESSAGE             PIC X(413) VALUE SPACES.

SD0620 01  WS-MASTER-CUST                PIC X(2040).
SD0620 01  WS-MASTER-UNIT                PIC X(700).
      *** (MISC WORK FIELDS) ****
       01  FILLER.
JS0218     05 WS-DISC-AMTP               PIC 9(3)V99 COMP-3.
ED0406     05 WS-TSFMU020-PROG           PIC X(08) VALUE 'TSFMU020'.
CP1011     05 WS-CXUTS400                PIC X(08) VALUE 'CXUTS400'.
CP1011     05 WS-CALC-AUTH-NR            PIC 9(09) VALUE ZEROS.
CP1011     05 WS-LINK-TO-I-SW            PIC X(01) VALUE 'N'.
CP1011     05 WRK-EIBRESP                PIC 9(03) VALUE ZEROS.
CP1011     05 FILL-CHAR                  PIC X(01) VALUE SPACES.
CP1011     05 WS-CXUTSJON-OPTIONS        PIC X(03) VALUE 'YNN'.
CP1011     05 WS-CNL-6-SW                PIC X(01) VALUE 'N'.
CP1011     05 WS-CTRL-LOOP-SW            PIC X(01) VALUE 'N'.
CP1011     05 WS-CTRL-MULT-SW            PIC X(01) VALUE 'N'.
CP1011     05 WS-CTRL-MATCH-SW           PIC X(01) VALUE 'N'.
SD0122     05 WS-PRE-AUTH-SW             PIC X(01) VALUE 'N'.
SD0122        88 WS-PRE-AUTH-FOUND                 VALUE 'Y'.
SD0122     05 WS-SP14-ELAPSED-TIME-MINS  PIC S9(8) USAGE COMP.
CP1011     05 WS-CTRL-LOOP-CTR           PIC 9(02) VALUE ZEROS.
CP1011     05 WS-LOOPS                   PIC 9(02) VALUE ZEROS.
040912     05 WS-RELOCATE-UNIT-ADJUST    PIC X(01) VALUE 'N'.
040912     05 WS-DRAFT-WAS-CANCELLED     PIC X(01) VALUE SPACES.
041112     05 WS-FUEL-PROD-PURCHASED     PIC X(03) VALUE SPACES.
041112     05 WS-RFID-XREF-READ          PIC X(01) VALUE SPACES.
041112     05 WS-USE-RFID-XREF           PIC X(01) VALUE SPACES.
050712     05 WS-RECOMP-SW               PIC X(01) VALUE SPACES.
SD1020     05 WS-1TIME-OFF-CSTAND-FLG    PIC X(01) VALUE SPACES.
SD1020        88 ONE-TIME-OFF-CSTAND-TRAN VALUE 'Y'.
           05 WS-TIME-CURR               PIC S9(15) COMP-3 VALUE ZERO.
           05 WS-TIME-START              PIC S9(15) COMP-3 VALUE ZERO.
           05 WS-TIME-END                PIC S9(15) COMP-3 VALUE ZERO.
JS0402     05 WS-DI-TRANSACTION-NUMBER   PIC S9(07) COMP-3 VALUE ZERO.
ED1102     05 WS-SUB1                    PIC 9(03) VALUE 1.
SB1115     05 WS-PRD-SUB                 PIC 9(03) VALUE 0.
           05 WS-EXPDATE-MMYY            PIC 9(04) VALUE ZERO.
           05 WS-EXPDATE-YYMM            PIC 9(04) VALUE ZERO.
           05 WS-EXP-DATE-YYYYMM         PIC 9(6)  VALUE ZERO.
BG0122     05 WS-DRVR-ID-HOLD-REL-DT     PIC 9(8)  VALUE ZEROS.
BG0122     05 WS-CURR-DRVR-ID-HOLD-REL-TM
BG0122                                   PIC 9(7)  VALUE ZEROS.
BG0122     05 FILLER REDEFINES WS-CURR-DRVR-ID-HOLD-REL-TM.
BG0122        10 FILLER                  PIC X(1).
BG0122        10 WS-CURR-DRVR-ID-HOLD-REL-HR-MI
BG0122                                   PIC 9(4).
BG0122        10 FILLER                  PIC X(2).
011222     05 WS-PROC-ACCT-NBR           PIC X(14) VALUE SPACES.
           05 WS-UPDATE-EXP-DATE         PIC X(1)  VALUE 'Y'.
           05 WS-UNIT-NR.
              10 WS-UNIT-NR-10.
                 15 FILLER               PIC X(04) VALUE SPACES.
                 15 WS-UNIT-NR-06        PIC X(06) VALUE SPACES.
           05 WS-ADJUST-UNIT-NR.
              10 FILLER                  PIC X(04) VALUE SPACES.
              10 WS-ADJUST-UNIT-NR-06    PIC X(06) VALUE SPACES.
           05 WS-ZERO                    PIC X(1) VALUE '0'.
JS0206     05 WS-FLEET-LIMIT-AVAIL       PIC S9(7)V99 COMP-3 VALUE ZERO.
           05 WS-EXP-DATE                PIC 9(4).
CP1011     05 WS-SQLCODE                 PIC S9(3).
JS1199        88 WS-SQLCODE-WAIT                VALUE -904, -911.
JS1199     05 WS-BALANCE-BASED-FLAG       PIC X(1) VALUE 'N'.
JS1199        88 WS-BALANCE-BASED                  VALUE 'Y'.
JS1199        88 WS-LIMIT-BASED                    VALUE 'N'.
MP0205     05 WS-CDN-CUST-NUMBER          PIC X(10) VALUE SPACES.
JS1199     05 WS-OFF-HOURS-FLAG           PIC X(1).
JS1199     05 WS-OFF-HOURS-WARNING-FLAG   PIC X(1) VALUE 'N'.
JS1199     05 WS-CARD-BLOCKED-FLAG        PIC X(1) VALUE 'N'.
JS1199     05 WS-FLEET-PROD               PIC 9(5) VALUE ZERO.
MP0600     05 WS-PETRO-CANADA-CHAIN       PIC X(10) VALUE 'PC002'.
MP0900     05 WS-PETRO-CANADA-RESP.
MP0900        07 FILLER                   PIC X(6) VALUE ' DATE:'.
MP0900        07 WS-PETRO-CANADA-DATE     PIC X(10) VALUE SPACES.
MP0402     05 WS-ATM-REVERSAL-FLAG        PIC X     VALUE 'N'.
MP0402        88 THIS-IS-AN-ATM-REVERSAL            VALUE 'Y'.
MP0903     05  WS-STANDIN-REVERSE-FL      PIC X(01) VALUE 'N'.
MP0903         88 WS-STANDIN-REVERSE                VALUE 'Y'.
           05 WS-TAX-PARM                 PIC X(1) VALUE 'A'.
           05 WS-TAX-COMPUTED-FLAG        PIC X(1) VALUE 'N'.
           05 WS-CXXCO0CS-ABEND.
              10 FILLER                   PIC X(2) VALUE 'CS'.
              10 WS-CXXCO0CS-ABEND-CODE   PIC X(2) VALUE SPACES.
102810     05 WS-TSFMO0LP-ABEND.
102810        10 FILLER                   PIC X(2) VALUE 'LP'.
102810        10 WS-TSFMO0LP-ABEND-CODE   PIC X(2) VALUE SPACES.
           05 WS-CXXCO0PU-ABEND.
              10 FILLER                   PIC X(2) VALUE 'PU'.
              10 WS-CXXCO0PU-ABEND-CODE   PIC X(2) VALUE SPACES.
           05 WS-RETAIL-PPG-NR2           PIC S9(2)V999 COMP-3 VALUE +0.
           05 WS-RETAIL-PPG-NR1           PIC S9(2)V999 COMP-3 VALUE +0.
           05 WS-RETAIL-PPG-TRAILER       PIC S9(2)V999 COMP-3 VALUE +0.
JS0999     05 WS2-RETAIL-PPG-NR2          PIC S9(2)V999 COMP-3 VALUE +0.
JS0999     05 WS2-RETAIL-PPG-NR1          PIC S9(2)V999 COMP-3 VALUE +0.
JS0999     05 WS2-RETAIL-PPG-TRAILER      PIC S9(2)V999 COMP-3 VALUE +0.
JS0999     05 WS3-RETAIL-PPG-NR2          PIC S9(2)V999 COMP-3 VALUE +0.
JS0999     05 WS3-RETAIL-PPG-NR1          PIC S9(2)V999 COMP-3 VALUE +0.
JS0999     05 WS3-RETAIL-PPG-TRAILER      PIC S9(2)V999 COMP-3 VALUE +0.
JS0298     05 WS-SCPM-LEVEL-1-VARIANCE     PIC S9(2)V999 COMP-3.
           05 WS-HOLD-COM-SPECIAL-SETTLE    PIC X(1).
JS1203     05 WS-HOLD-CUSTOMER-ID           PIC X(10).
MP1204     05 WS-TABLE-CODE                 PIC S9(3) COMP-3 VALUE +1.
           05 WS-HOLD-SIR-KEY               PIC X(23).
           05 WS-EXIT-PROGRAM-FLAG          PIC X(1)          VALUE 'N'.
           05 WS-CASH-AVAILABLE-FLAG        PIC X(1).
           05 WS-WORK-CURR-DATE             PIC 9(8).
           05 FILLER REDEFINES WS-WORK-CURR-DATE.
              10 WS-WORK-CURR-DATE-YYYY     PIC 9(4).
              10 FILLER REDEFINES WS-WORK-CURR-DATE-YYYY.
                 15 WS-WORK-CURR-DATE-CEN   PIC 9(2).
                 15 WS-WORK-CURR-DATE-YY    PIC 9(2).
              10 WS-WORK-CURR-DATE-MM       PIC 9(2).
              10 WS-WORK-CURR-DATE-DD       PIC 9(2).
           05 WS-WORK-PEND-DATE             PIC 9(8).
SB0614     05 WS-EXP-BAL-NEG-AMT      PIC S9(7)V99 COMP-3 VALUE +0.
SB0614     05 WS-MERCH-SURCHRG-AMT-SC PIC S9(7)V99 COMP-3 VALUE +0.
SB0614     05 WS-MERCH-SURCHRG-AMT-ADJ PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-NR2-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-NR1-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-REF-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-OTH-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-OIL-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-PR1-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-PR2-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-PR3-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-TOT-SELECT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
JS0618     05 WS-PROD-COST-RATIO      PIC S9(3)V9(9) COMP-3 VALUE +0.
061815     05 WS-PROD-SPLIT-DISCOUNT  PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-NR1-TAX-PROD-COST    PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-NR2-TAX-PROD-COST    PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-REF-TAX-PROD-COST    PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-OTH-TAX-PROD-COST    PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-NR2-TRANS-AMT-BAL    PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-NR1-TRANS-AMT-BAL    PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-REF-TRANS-AMT-BAL    PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-OTH-TRANS-AMT-BAL    PIC S9(7)V99 COMP-3 VALUE +0.
061815     05 WS-NR2-BASE-AMT         PIC S9(5)V99 COMP-3 VALUE +999.
061815     05 WS-NR1-BASE-AMT         PIC S9(5)V99 COMP-3 VALUE +999.
061815     05 WS-REF-BASE-AMT         PIC S9(5)V99 COMP-3 VALUE +999.
061815     05 WS-OTH-BASE-AMT         PIC S9(5)V99 COMP-3 VALUE +999.
MP1004     05 WS-WORK-TOTAL-AR        PIC S9(5)V99 COMP-3 VALUE +0.
MN1007     05 WS-WORK-NR-OF-GALLONS   PIC S9(7)V99 COMP-3 VALUE +0.
MP1004     05 WS-WORK-PRICE-PER-GLLN  PIC S99V999  COMP-3 VALUE +0.
082008     05 WS-WORK-TOTAL-COST      PIC S9(5)V99 COMP-3 VALUE +0.
MP1004     05 WS-WORK-TRANS-NR        PIC S9(7)    COMP-3 VALUE +0.
MP1004     05 WS-WORK-NW-DATE         PIC 9(6)     COMP-3 VALUE  0.
MP1004     05 WS-WORK-LESS-CHARGE     PIC X(1)            VALUE SPACES.
MP1004        88 TRANS-LESS-CHARGES                       VALUE 'Y'.
           05 WS-TRENDAR-EQUIP-FOUND  PIC X(1).
           05 WS-EXPAND-DISCOUNT-MSG  PIC X    VALUE 'N'.
           05 WS-EXPAND-FEE-MSG       PIC X    VALUE 'N'.
           05 WS-EXPAND-BOTH-MSG      PIC X    VALUE 'N'.
           05 WS-AUTO-GAS-PUMP-NRX.
              10 WS-AUTO-GAS-PUMP-NR  PIC 9(2).
           05 WS-ACCT-CODE            PIC X(5).
              88 WS-ACCT-CODE-PRNT-FLAG-U       VALUES 'WA050' 'WA084'
                                                       'WA146' 'WA154'
                                                       'WA155' 'WA159'.
              88 WS-ACCT-CODE-LANDSTAR          VALUES 'RA401' 'PT001'
                                                       'IN305' 'LI982'.
           05 WS-PRM-VRU-PIN-ATTEMPTS PIC 9(1).
           05 WS-CANADIAN-AREA-CODE   PIC X(1)      VALUE 'N'.
           05 WS-CONVERT-CURR-TYPE    PIC X(1).
           05 WS-CONVERT-AMOUNT       PIC S9(7)V99 COMP-3.
           05 WS-CONVERT-AMOUNT1      PIC S9(7)V99 COMP-3.
           05 WS-CONVERT-AMOUNT2      PIC S9(7)V99 COMP-3.
           05 WS-CONVERT-AMOUNT3      PIC S9(7)V99 COMP-3.

CP1011     05 WS-CONTROL-NR           PIC 9(9)      VALUE ZEROES.
CP1011     05 WS-CONTROL-NR-SETTLE    PIC 9(9)      VALUE ZEROES.
           05 FILLER                  PIC X(1)      VALUE 'N'.
              88 WS-BILLABLE-IS-ALL-CASH            VALUE 'Y'.
              88 WS-BILLABLE-IS-NOT-ALL-CASH        VALUE 'N'.
           05 WS-VRU-COUNTRY-FLAG     PIC X(1).
           05 WS-PROD-AMOUNT          PIC S9(5)V99  VALUE ZEROS.
           05 WS-WHICH-PROD           PIC 9(1)      VALUE ZEROES.
021908     05 WS-UNITMST-UNIT         PIC X(1)      VALUE SPACE.
021908     05 WS-PRMINFO-READ-SW      PIC X(1)      VALUE SPACE.
021908     05 WS-HIER-SW              PIC X(1)      VALUE SPACE.
021908        88 ON-HIERARCHY                       VALUE 'Y'.
021908     05 DONE                    PIC S9(4) COMP VALUE +0.
021908     05 REPEAT                  PIC S9(4) COMP VALUE +1.
021908     05 WS-LOOP-STATUS          PIC S9(4) COMP VALUE +0.
021908     05 51028-LOOP-STATUS       PIC S9(4) COMP VALUE +0.
021908***** THE FOLLOWING BLOCK OF FIELDS REPLACES CDNCUST FIELDS;
021908***** THESE FIELDS CAN BE POPULATED FROM CDNCUST OR HIERARCHY TBL
021908     05 WS-COUNTRY-CODE         PIC X(02).
021908     05 WS-ONE-TIME-LIMIT       PIC X(01).
021908       88  WS-ONE-TIME-CASH-LIMIT-AVAIL        VALUES 'C' 'B'.
021908       88  WS-ONE-TIME-PURC-LIMIT-AVAIL        VALUES 'P' 'B'.
021908     05 WS-PRODUCT-STANDARD     PIC X(01).
021908       88  WS-CHANGE-LIMITS-BY-UNIT            VALUE  'Y'.
021908     05 WS-TRIP-ALLOWANCE       PIC X(01).
021908     05 WS-CASH-ADVANCE-FLAG    PIC X(01).
021908     05 WS-CO-DRVR-NAME-ENTERED PIC X(01).
MP1208     05 WS-DIRECT-BILLING-PROD  PIC 9          VALUE 0.
021908*******************************************
           05 WS-NATS-PRE-AUTH-FLAG   PIC X(1).
050316***** TABLE CHANGED TO ALPHA SO SPACES CAN BE IN 'PLACE-HOLDER'
050316***** PRODUCT CODE VALUES; RECEIVING FIELD IS ALSO ALPHA
           05 WS-NATS-PROD-TABLE-DATA.
MN0207        10 FILLER               PIC X(3)  VALUE '080'.
              10 FILLER               PIC X(3)  VALUE '105'.
MN0207        10 FILLER               PIC X(3)  VALUE '129'.
              10 FILLER               PIC X(3)  VALUE '121'.
              10 FILLER               PIC X(3)  VALUE '085'.
              10 FILLER               PIC X(3)  VALUE '116'.
MN0207        10 FILLER               PIC X(3)  VALUE '130'.
              10 FILLER               PIC X(3)  VALUE '100'.
MN0207        10 FILLER               PIC X(3)  VALUE '125'.
              10 FILLER               PIC X(3)  VALUE '116'.
MN0207        10 FILLER               PIC X(3)  VALUE '122'.
ED0505        10 FILLER               PIC X(3)  VALUE '124'.
ED0505        10 FILLER               PIC X(3)  VALUE '116'.
MN0207        10 FILLER               PIC X(3)  VALUE '118'.
ED0505        10 FILLER               PIC X(3)  VALUE '116'.
MN0207        10 FILLER               PIC X(3)  VALUE '115'.
ED0505        10 FILLER               PIC X(3)  VALUE '116'.
ED0505        10 FILLER               PIC X(3)  VALUE '116'.
ED0505        10 FILLER               PIC X(3)  VALUE '116'.
ED0505        10 FILLER               PIC X(3)  VALUE '116'.
ED0505        10 FILLER               PIC X(3)  VALUE '116'.
ED0505        10 FILLER               PIC X(3)  VALUE '116'.
ED0505        10 FILLER               PIC X(3)  VALUE '116'.
112409        10 FILLER               PIC X(3)  VALUE '116'.
112409        10 FILLER               PIC X(3)  VALUE '082'.
112409        10 FILLER               PIC X(3)  VALUE '140'.
050316        10 FILLER               PIC X(3)  VALUE SPACES.
050316        10 FILLER               PIC X(3)  VALUE SPACES.
050316        10 FILLER               PIC X(3)  VALUE SPACES.
050316        10 FILLER               PIC X(3)  VALUE SPACES.
050316        10 FILLER               PIC X(3)  VALUE SPACES.
050316        10 FILLER               PIC X(3)  VALUE SPACES.
050316        10 FILLER               PIC X(3)  VALUE SPACES.
050316        10 FILLER               PIC X(3)  VALUE SPACES.
050316        10 FILLER               PIC X(3)  VALUE '591'.
050316        10 FILLER               PIC X(3)  VALUE '592'.
           05 FILLER REDEFINES WS-NATS-PROD-TABLE-DATA.
050316        10 WS-NATS-PROD-TABLE   PIC X(3) OCCURS 36 TIMES.
           05 WS-WORK-IOL-MAX-LITERS  PIC 9(9)V99 COMP-3.
           05 WS-WORK-FIELD           PIC X(2500).
           05 WS-CDN-MONEY-INVOICE PIC X(2).
              88 WS-CDN-MONEY-INVOICE-EXP-CASH    VALUES 'F ', 'EF',
                                                         'PF', 'FP',
                                                         'A '.
           05 WS-COST-PLUS-CPG-FEE1 PIC S9(5)V9(5) COMP-3 VALUE ZERO.
           05 WS-COST-PLUS-CPG-FEE2 PIC S9(5)V9(5) COMP-3 VALUE ZERO.
           05 WS-CUSTOM-FEE-TOTAL   PIC S9(5)V99   COMP-3.
           05 WS-LAST-SCMM-READ     PIC X(10)   VALUE SPACES.
           05 WS-CC-PIN-CHECK       PIC S9(8)   COMP.
           05 WS-PIN-NR             PIC S9(15)  VALUE ZEROS.
           05 WS-BINARY-PIN         PIC S9(8)   COMP.
           05 WS-VALIDATE-CKDIGIT   PIC X(1)    VALUE 'Y'.
      **** (MISC WORK FIELDS) ****
           05 WS-INVOICE.
              10 WS-INVOICE-DD      PIC 9(2).
              10 WS-INVOICE-TIME   PIC 9(6).
           05 WS-ADD-ON            PIC S9(5)V99    VALUE ZERO COMP-3.
JS0304     05 WS-AVAIL             PIC S9(9)V99    VALUE ZERO COMP-3.
           05 WS-HOLD-ODR-AMT      PIC S9(6)V99    VALUE ZERO COMP-3.
           05 WS-HOLD-ODR-NAME     PIC X(20)       VALUE SPACES.
           05 WS-HOLD-POS-ERROR-NUMBER PIC S9(5)   VALUE ZEROES.
           05 WS-HOLD-POS-ERROR-MSG    PIC X(80)   VALUE SPACES.
           05 WS-CC-AVAIL          PIC S9(6)V99    VALUE ZERO COMP-3.
           05 WS-CC-CUT-OFF1       PIC X(01)       VALUE 'N'.
           05 WS-DBF-MSG           PIC X(03)       VALUE 'DBF'.
           05 WS-DB-MSG            PIC X(03)       VALUE 'DB '.
           05 WS-CC-CONTROL-NR-DISP.
              10 WS-CC-CONTROL-DD  PIC 9(2).
              10 WS-CC-CONTROL-NR  PIC 9(6).
           05 WS-CC-EMPLOYEE-CHECK PIC X(5).
           05 WS-TALLY             PIC 9(5) COMP-3.
           05 WS-YCODE-ST-KEY.
              10 WS-YCODE-ST       PIC X(02).
              10 FILLER            PIC X(03)   VALUE '999'.
           05 WS-CANADIAN-CONVERSION.
              10 WS-CANADIAN-FIRST-TEN    PIC X(10) VALUE SPACES.
              10 WS-UNPACK-CANADIAN       PIC 9(2)V9(8) VALUE ZEROES.
           05 WS-CANADIAN-CHK-FLAG PIC X(1)    VALUE 'N'.
072811     05 WS-SCM-CNTRY-LOC-SW    PIC X(02) VALUE SPACES.
072811        88  WS-SCM-IS-IN-US              VALUE 'US'.
072811        88  WS-SCM-IS-IN-CANADA          VALUE 'CA'.
JS0403     05 WS-DSMSTR-RRN          PIC S9(09)    COMP SYNC.
CP1098     05 WS-ORIG-DATE           PIC 9(7).
CP1098     05 WS-FMT-ORIG-DATE       PIC 9(7).
CP1098     05 WS-FMT-ORIG-CNTRL-NR   PIC 9(8).
CP1098     05 WS-ORIG-CNTRL-NR       PIC X(6).
CP1098     05 FILLER REDEFINES WS-ORIG-CNTRL-NR.
CP1098        10 WS-ORIG-CNTRL-6     PIC 9(6).
CP1098     05 FILLER REDEFINES WS-ORIG-CNTRL-NR.
CP1098        10 WS-ORIG-CNTRL-5     PIC 9(5).
CP1098        10 FILLER              PIC X.
CP1098     05 FILLER REDEFINES WS-ORIG-CNTRL-NR.
CP1098        10 WS-ORIG-CNTRL-4     PIC 9(4).
CP1098        10 FILLER              PIC XX.
MP0204     05 WS-NV-EXIT-FLAG        PIC X(01) VALUE 'N'.
MP0204        88 WS-NV-EXIT-YES                VALUE 'Y'.
MP0204     05 WS-NV-ERROR-NR         PIC 9(05) VALUE ZERO.
MP0204     88 WS-NV-ERROR-IGNORE               VALUE 30, 31, 32, 47, 51,
MP0204                                               65, 83, 434, 435,
MP0204                                               436, 437, 445, 589,
MP0204                                               590.

PM0517     05 WS-FMRM-05-POF             PIC X(01)    VALUE SPACES.
PMO517     05 WS-TOTAL-FACE-SC-POF       PIC S9(6)V99 VALUE +0.

           05 WS-DRIVER-NR-KEYED-INFO.
              10 WS-DRIVER-NR-KEYED                OCCURS 20 TIMES.
                 15 WS-DRIVER-NR-KEYED-N  PIC 9(1).
           05 WS-DRIVER-NR-CARD-INFO.
              10 WS-DRIVER-NR-CARD        PIC X(1) OCCURS 20 TIMES.
           05 WS-DRIVER-NR-VALIDATE-TABLE.
              15 FILLER                   PIC X(03) VALUE 'QZ '.
              15 FILLER                   PIC X(03) VALUE 'ABC'.
              15 FILLER                   PIC X(03) VALUE 'DEF'.
              15 FILLER                   PIC X(03) VALUE 'GHI'.
              15 FILLER                   PIC X(03) VALUE 'JKL'.
              15 FILLER                   PIC X(03) VALUE 'MNO'.
              15 FILLER                   PIC X(03) VALUE 'PRS'.
              15 FILLER                   PIC X(03) VALUE 'TUV'.
              15 FILLER                   PIC X(03) VALUE 'WXY'.
           05 FILLER REDEFINES WS-DRIVER-NR-VALIDATE-TABLE.
              15 WS-DRIVER-NR-VALIDATE    PIC X(03) OCCURS 9 TIMES.
           05 WS-AREA-STATE-TABLE-DTA.
              15 FILLER                   PIC X(05) VALUE '403AB'.
              15 FILLER                   PIC X(05) VALUE '604BC'.
              15 FILLER                   PIC X(05) VALUE '204MB'.
              15 FILLER                   PIC X(05) VALUE '506NB'.
              15 FILLER                   PIC X(05) VALUE '709NF'.
              15 FILLER                   PIC X(05) VALUE '902NS'.
              15 FILLER                   PIC X(05) VALUE '807ON'.
              15 FILLER                   PIC X(05) VALUE '519ON'.
              15 FILLER                   PIC X(05) VALUE '705ON'.
              15 FILLER                   PIC X(05) VALUE '613ON'.
              15 FILLER                   PIC X(05) VALUE '416ON'.
              15 FILLER                   PIC X(05) VALUE '905ON'.
              15 FILLER                   PIC X(05) VALUE '902PE'.
              15 FILLER                   PIC X(05) VALUE '514PQ'.
              15 FILLER                   PIC X(05) VALUE '418PQ'.
              15 FILLER                   PIC X(05) VALUE '819PQ'.
              15 FILLER                   PIC X(05) VALUE '306SK'.
              15 FILLER                   PIC X(03) VALUE HIGH-VALUES.
              15 FILLER                   PIC X(02) VALUE SPACES.
           05 FILLER REDEFINES WS-AREA-STATE-TABLE-DTA.
              15 WS-AREA-STATE-TABLE OCCURS 18 TIMES.
                 20 WS-AREA-STATE-AREA    PIC X(03).
                 20 WS-AREA-STATE-ST      PIC X(02).

           05 WS-PRODUCT-CODE-LIMITS.
              10 WS-PRODUCT-LIMITS-TABLE OCCURS 36 TIMES.
                 15 WS-PRD-MAX-DAILY      PIC S9(005) COMP-3.
                 15 WS-PRD-ALLOW-ORIG     PIC S9(005) COMP-3.

JS0604     05 WS-PRODUCT-TRANSLATION-DATA.
              10 FILLER                   PIC X(04) VALUE '0000'.
              10 FILLER                   PIC X(04) VALUE '0101'.
              10 FILLER                   PIC X(04) VALUE '0202'.
              10 FILLER                   PIC X(04) VALUE '0303'.
              10 FILLER                   PIC X(04) VALUE '0404'.
              10 FILLER                   PIC X(04) VALUE '0505'.
              10 FILLER                   PIC X(04) VALUE '0606'.
              10 FILLER                   PIC X(04) VALUE '0707'.
              10 FILLER                   PIC X(04) VALUE '0808'.
              10 FILLER                   PIC X(04) VALUE '0909'.
              10 FILLER                   PIC X(04) VALUE '0A10'.
              10 FILLER                   PIC X(04) VALUE '0B11'.
              10 FILLER                   PIC X(04) VALUE '0C12'.
              10 FILLER                   PIC X(04) VALUE '0D13'.
              10 FILLER                   PIC X(04) VALUE '0E14'.
              10 FILLER                   PIC X(04) VALUE '0F15'.
              10 FILLER                   PIC X(04) VALUE '0G16'.
              10 FILLER                   PIC X(04) VALUE '0H17'.
              10 FILLER                   PIC X(04) VALUE '0I18'.
              10 FILLER                   PIC X(04) VALUE '0J19'.
              10 FILLER                   PIC X(04) VALUE '0K20'.
              10 FILLER                   PIC X(04) VALUE '0L21'.
              10 FILLER                   PIC X(04) VALUE '0M22'.
              10 FILLER                   PIC X(04) VALUE '0N23'.
              10 FILLER                   PIC X(04) VALUE '0O24'.
              10 FILLER                   PIC X(04) VALUE '0P25'.
              10 FILLER                   PIC X(04) VALUE '0Q26'.
              10 FILLER                   PIC X(04) VALUE '0R27'.
              10 FILLER                   PIC X(04) VALUE '0S28'.
              10 FILLER                   PIC X(04) VALUE '0T29'.
              10 FILLER                   PIC X(04) VALUE '0U30'.
              10 FILLER                   PIC X(04) VALUE '0V31'.
              10 FILLER                   PIC X(04) VALUE '0W32'.
              10 FILLER                   PIC X(04) VALUE '0X33'.
              10 FILLER                   PIC X(04) VALUE '0Y34'.
              10 FILLER                   PIC X(04) VALUE '0Z35'.
JS0604     05 FILLER REDEFINES WS-PRODUCT-TRANSLATION-DATA.
              15 WS-PRODUCT-TRANSLATION-TABLE OCCURS 36 TIMES
                                              INDEXED BY PTT-INDX.
                 20 WS-PTT-ALPHA          PIC X(02).
                 20 WS-PTT-NUM            PIC X(02).

JS0206*    03 FILLER.
      **** (WS-QUEUE-WORK-AREA) ****
              05 QUEUE-ID-AREA.
                 10 FILLER                PIC X(4) VALUE 'FP  '.
                 10 QID-TRMID             PIC X(4).
              05 WS-ITEM                  PIC 9(4) COMP VALUE 1.
              05 WS-Q-AREA.
MB0114           10 WS-Q-COMMAREA         PIC X(1800).
                 10 WS-Q-UNFORMATTED      PIC X(1197).
                 10 WS-Q-MAPLEN           PIC 9(5) COMP-3.

JS0206     05 WS-STANDARD-ITEM-PURCHASED   PIC X(01).
JS0206     05 WS-ADD-ON-APPLIES            PIC X(01).
JS0206     05 WS-CHECK-PRODUCT-FEE         PIC X(01).
JS0107     05 WS-HOLD-MIXED-FUEL-RATE            PIC S9(5)V99 COMP-3.
JS0107     05 WS-HOLD-BASE-FUEL-RATE             PIC S9(5)V99 COMP-3.
JS0107     05 WS-HOLD-DC-FEE-AMT-FUEL            PIC S9(5)V99 COMP-3.
JS0107     05 WS-PRDCUST-HAS-BEEN-READ           PIC X(1) VALUE 'N'.
JS0107     05 WS-PRDSCMM-HAS-BEEN-READ           PIC X(1) VALUE 'N'.
JS0107     05 WS-PRODUCT-FEE-FOUND               PIC X(1).

082008***** WORK AREA FOR LARGE TRANSACTION INTERIM (LTI) PROJ CHGS
082008     05 WS-NO-TRANS-SPLIT-FLAG    PIC  X(01)    VALUE SPACE.
082008     05 WS-LTI-SW                 PIC  X(01)    VALUE SPACE.
082008       88 WS-LARGE-TRANS-SPLITS                 VALUE 'Y'.
052311     05 WS-LTI-WITH-TAX-SW        PIC  X(01)    VALUE SPACE.
052311       88 WS-LARGE-TRANS-WITH-TAX               VALUE 'Y'.
052311     05 WS-LTI-TAX-SW             PIC  X(01)    VALUE SPACE.
052311       88 WS-LARGE-TRANS-SPLITS-TAX             VALUE 'Y'.
082008     05 WS-LTI-SW2                PIC  X(01)    VALUE SPACE.
082008       88 WS-LTI-SC-CURRENCY                    VALUE 'S'.
082008     05 WS-LTI-SUB1               PIC S9(03)    VALUE ZERO.
082008       88 LTI-FIRST-PASS                        VALUE 1.
082008       88 LTI-SECOND-PASS                       VALUE 2.
082008     05 WS-LTI-LAST-FLAG          PIC  X(01)    VALUE SPACE.
082008       88 LTI-LAST-PASS                         VALUE 'Y'.
082008     05 WS-LTI-SUB2               PIC S9(01)    VALUE ZERO.
082008     05 WS-LTI-SPLIT-COUNT        PIC S9(03)    VALUE ZERO.
052711     05 WS-LTI-AMT-TO-ADD         PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-AMT-TO-SUBTRACT    PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-QTY-TO-ADD         PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-QTY-TO-SUBTRACT    PIC S9(05)V99 VALUE ZERO.
052311     05 WS-LTI-TAX-RATE           PIC S9(1)V9(3) COMP-3 VALUE +0.
052311     05 WS-LTI-TRANS-AMT          PIC S9(05)V99 VALUE ZERO.
052311     05 WS-LTI-INIT-SPLIT-VALUE   PIC S9(05)    VALUE ZERO.
052311     05 WS-LTI-INIT-SPLIT-NBR1    PIC S9(05)    VALUE ZERO.
052311     05 WS-LTI-INIT-SPLIT-NBR2    PIC S9(05)    VALUE ZERO.
052311     05 WS-LTI-INIT-SPLIT-REFER   PIC S9(05)    VALUE ZERO.
052311     05 WS-LTI-INIT-SPLIT-OTHER   PIC S9(05)    VALUE ZERO.
052311     05 WS-LTI-PCT-XTN-NBR1       PIC 9V999     VALUE ZERO.
052311     05 WS-LTI-PCT-XTN-NBR2       PIC 9V999     VALUE ZERO.
052311     05 WS-LTI-PCT-XTN-REFER      PIC 9V999     VALUE ZERO.
052311     05 WS-LTI-PCT-XTN-OTHER      PIC 9V999     VALUE ZERO.
082008     05 WS-LTI-WORK-AMT           PIC S9(05)V99 VALUE ZERO.
071009     05 WS-LTI-WORK-AMT2          PIC S9(05)V99 VALUE ZERO.
082008     05 WS-LTI-SPLIT-AMT          PIC S9(05)V99 VALUE ZERO.
052311     05 WS-LTI-SPLIT-AMT-NBR1     PIC S9(05)V99 VALUE ZERO.
052311     05 WS-LTI-SPLIT-AMT-NBR2     PIC S9(05)V99 VALUE ZERO.
ED0113     05 WS-LTI-SPLIT-AMT-NBR2-HLD PIC S9(05)V99 VALUE ZERO.
052311     05 WS-LTI-SPLIT-AMT-REFER    PIC S9(05)V99 VALUE ZERO.
052311     05 WS-LTI-SPLIT-AMT-OTHER    PIC S9(05)V99 VALUE ZERO.
ED0113     05 WS-LTI-SPLIT-AMT-OTHER-HLD
ED0113                                  PIC S9(05)V99 VALUE ZERO.
ED0113     05 WS-LTI-OVER-AMT-HLD       PIC S9(05)V99 VALUE ZERO.
082008     05 WS-LTI-OVER-QTY           PIC S9(05)V99 VALUE ZERO.
082008     05 WS-LTI-OVER-AMT           PIC S9(05)V99 VALUE ZERO.
082008     05 WS-LTI-MOVE-QTY           PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-QTY-NR1      PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-QTY-NR2      PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-QTY-REF      PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-QTY-OTH      PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-QTY-NR1       PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-QTY-NR2       PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-QTY-REF       PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-QTY-OTH       PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-QTY-NR1-OTH  PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-QTY-NR2-OTH  PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-QTY-REF-OTH  PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-QTY-OTH-OTH  PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-QTY-NR1-OTH   PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-QTY-NR2-OTH   PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-QTY-REF-OTH   PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-QTY-OTH-OTH   PIC S9(05)V99 VALUE ZERO.
082008     05 WS-LTI-MOVE-AMT           PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-AMT-TAX      PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-AMT-NR1      PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-AMT-NR2      PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-AMT-REF      PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-AMT-OTH      PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-AMT-NR1       PIC S9(07)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-AMT-NR2       PIC S9(07)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-AMT-REF       PIC S9(07)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-AMT-OTH       PIC S9(07)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-AMT-TAX-OTH  PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-AMT-NR1-OTH  PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-AMT-NR2-OTH  PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-AMT-REF-OTH  PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-TOTAL-AMT-OTH-OTH  PIC S9(05)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-AMT-NR1-OTH   PIC S9(07)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-AMT-NR2-OTH   PIC S9(07)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-AMT-REF-OTH   PIC S9(07)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-AMT-OTH-OTH   PIC S9(07)V99 VALUE ZERO.
052711     05 WS-LTI-HOLD-AMT-TAX-OTH   PIC S9(05)V99 VALUE ZERO.
052311     05 WS-LTI-HOLD-AMT-TAX       PIC S9(05)V99 VALUE ZERO.
052311     05 WS-LTI-MOVE-TAX           PIC S9(05)V99 VALUE ZERO.
082008     05 WS-LTI-PERCENT            PIC S9V9(06)  VALUE ZERO.
082008     05 WS-PERFORM-SW             PIC  X(01)    VALUE SPACE.
082008     05 WS-TRANS-GALLONS          PIC S9(05)V99 VALUE ZERO.
082008     05 WS-HOLD-TRANS-GALLONS     PIC S9(05)V99 VALUE ZERO.
082008     05 WS-COMSITE-OLD-FORMAT     PIC  X(01)    VALUE SPACE.
082008     05 FP-0175A-FIRST-PASS-SW    PIC  X(01)    VALUE SPACE.
082008       88 FP-0175A-FIRST-PASS                     VALUE 'Y'.
120412     05 WS-BYPASS-LOG-DISCOUNT    PIC  X(01)    VALUE 'N'.
082008***** THESE FLAGS ONLY USED FOR TRANSACTION CANCELLATION
082008     05 WS-LTI-FMLOG-FOUND        PIC  X(01)    VALUE SPACE.
082008     05 WS-LTI-HOLD-FMLOG-RRN     PIC S9(07) VALUE +0 COMP SYNC.
CP1211     05 WS-LTI-SKIP-FMLOG-RRN     PIC S9(07) VALUE +0 COMP SYNC.
082008     05 WS-LTI-LAST-FMLOG-RRN     PIC S9(07) VALUE +0 COMP SYNC.
082008***** HOLD AREA FOR LARGE TRANSACTION INTERIM (LTIH)
082008     05 WS-LTI-HOLD-AREAS.
082008       10 WS-LTIH-FMLOG           PIC  X(2040)  VALUE SPACE.
082008       10 WS-LTIH-CASH-AMT        PIC S9(07)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-TAX-AMT-SC      PIC S9(07)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-BILLABLE        PIC S9(05)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-NON-BILLABLE    PIC S9(05)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-CURXMN2         PIC S9(06)V99        VALUE ZERO.
082008       10 WS-LTIH-CURXMN          PIC S9(06)V99        VALUE ZERO.
CP1011       10 WS-LTIH-CONTROL-NR      PIC  9(07)           VALUE ZERO.
082008       10 WS-LTIH-DRAFT-AMT       PIC  9(05)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-FP-TRANS-AMT    PIC  9(05)V99        VALUE ZERO.
082008       10 WS-LTIH-TOTAL-REQUEST   PIC S9(06)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-TRANS-GALLONS   PIC S9(05)V99 VALUE ZERO.
082008       10 WS-LTIH-TRANS-GALLONS2  PIC S9(05)V99 VALUE ZERO.
082008       10 WS-LTIH-HUB             PIC S9(06)V9  VALUE ZERO.
120412       10 WS-LTIH-SELECT-DISC     PIC S9(03)V99 COMP-3 VALUE ZERO.
JS0618       10 WS-LTIH-TOTAL-TAX-SC    PIC S9(05)V99 COMP-3 VALUE ZERO.
082008     05 WS-LTI-PROD-HOLD-AREAS.
082008       10 WS-LTIH-PROD-BILLABLE   PIC S9(05)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-PROD-BILLABLE2  PIC S9(05)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-PROD-NON-BILLABLE
082008                                  PIC S9(05)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-PROD-NON-BILLABLE2
082008                                  PIC S9(05)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-PROD-BILLABLE-FUEL
082008                                  PIC S9(05)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-PROD-NON-BILLABLE-FUEL
082008                                  PIC S9(05)V99 COMP-3 VALUE ZERO.
082008     05 WS-LTI-UIWA-AREAS.
082008       10                         PIC  X(01)           VALUE 'N'.
082008       10 WS-LTIH-UIWA-NR1-QTY    PIC S9(07)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-UIWA-NR1-COST   PIC S9(07)V99 COMP-3 VALUE ZERO.
082008       10                         PIC  X(01)           VALUE 'N'.
082008       10 WS-LTIH-UIWA-NR2-QTY    PIC S9(07)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-UIWA-NR2-COST   PIC S9(07)V99 COMP-3 VALUE ZERO.
082008       10                         PIC  X(01)           VALUE 'N'.
082008       10 WS-LTIH-UIWA-REF-QTY    PIC S9(07)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-UIWA-REF-COST   PIC S9(07)V99 COMP-3 VALUE ZERO.
082008       10                         PIC  X(01)           VALUE 'N'.
082008       10 WS-LTIH-UIWA-OTH-QTY    PIC S9(07)V99 COMP-3 VALUE ZERO.
082008       10 WS-LTIH-UIWA-OTH-COST   PIC S9(07)V99 COMP-3 VALUE ZERO.
082008     05 FILLER REDEFINES WS-LTI-UIWA-AREAS  OCCURS 4 TIMES.
082008       10 WS-LTI-ZERO-FLAG        PIC  X(01).
082008       10 WS-LTIH-UIWA-QTY        PIC S9(07)V99 COMP-3.
082008       10 WS-LTIH-UIWA-AMT        PIC S9(07)V99 COMP-3.
052311     05 WS-LTIH-UIWA-AMT-TAX      PIC S9(07)V99 COMP-3 VALUE ZERO.
082008***** THE FIELDS IN THIS BLOCK ARE VALUES ON CDNCUST, SCMSTR, ETC.
082008***** THAT NEED TO BE ALTERED DURING LARGE TRANSACTION SPLIT
082008***** PROCESSING WITHOUT ALTERING THE ORIGINAL VALUE ON THE FILE
082008     05 WS-LTI-FILE-DATA-AREA.
082008       10 WS-CDN-GUAR-YN                PIC  X(01).
082008       10 WS-CDN-ALL-HANDLING-ADD-ON    PIC S9(3)V99  COMP-3.
082008       10 WS-CDN-ALL-HANDLING-ADD-ON-AC PIC S9(3)V99  COMP-3.
082008       10 WS-CDN-MANUAL-ADD-ON          PIC S9V99     COMP-3.
082008       10 WS-CDN-COST-PLUS-ADD-ON       PIC S9V99     COMP-3.
082008       10 WS-CDN-COST-PLUS-ADD-ON-AC    PIC S9V99     COMP-3.
082008       10 WS-SCM-CORP-REBATE-LOCATION   PIC  X(10).
082008       10 WS-SCM-CORP-REBATE-FLAG       PIC  X(01).
082008       10 WS-SCPM-PP-PAC-MARKUP         PIC S9(2)V999 COMP-3.
080210***** WORK AREAS FOR IRIS/CXXCO0FC PROCESSING
ED0810     05 WS-NOTIFY-IRIS-FL          PIC  X(01)  VALUE 'Y'.
080210     05 WS-CIX-RESP-REQUESTED      PIC  X(01)  VALUE 'N'.
080210     05 WS-CIX-MESSAGE-TYPE        PIC  X(04)  VALUE SPACE.
080210     05 WS-CIX-CARD-NR             PIC  9(16)  VALUE ZERO.
080210     05 WS-COMPANY-STANDARD-ID     PIC  9(05)  VALUE ZERO.
080210     05 WS-POS-ERROR-NUMBER        PIC  9(05)  VALUE ZERO.
080210     05 WS-AMOUNT-NO-DECIMAL-06    PIC  9(06)  VALUE ZERO.
080210     05 WS-AMOUNT-NO-DECIMAL-09    PIC  9(09)  VALUE ZERO.
080210     05 WS-AMOUNT-NO-DECIMAL-12    PIC  9(12)  VALUE ZERO.
BW0211     05 WS-CODES-AMOUNT.
BW0211        10 WS-CODES-AMT            PIC 9(7)V99 VALUE ZERO.
MB0912     05 WS-TAX-ADDED               PIC  X(01)  VALUE 'N'.
061815     05 WS-SAVE-UIWA-NR1-COST-SC   PIC S9(07)V99 COMP-3 VALUE +0.
061815     05 WS-SAVE-UIWA-NR2-COST-SC   PIC S9(07)V99 COMP-3 VALUE +0.
061815     05 WS-SAVE-UIWA-REF-COST-SC   PIC S9(07)V99 COMP-3 VALUE +0.
061815     05 WS-SAVE-UIWA-OTH-COST-SC   PIC S9(07)V99 COMP-3 VALUE +0.
061815     05 WS-SAVE-UIWA-OIL-COST-SC   PIC S9(07)V99 COMP-3 VALUE +0.

SB0315     05 WS-FUELUP-WORK-AREA.
SB0315        10 WS-FUELUP-SW             PIC X(01) VALUE ' '.
SB0315           88 FUELUP-YES                      VALUE 'Y'.
SB0315           88 FUELUP-NO                       VALUE 'N'.
SB0315        10 FUELUP-PRICE-DIFF        PIC S9(5)V99  COMP-3 VALUE +0.
SB0315        10 FUELUP-CASH-PRICE        PIC S9(2)V999 COMP-3 VALUE +0.
SB0315        10 FUELUP-RETAIN-FEE        PIC S9(5)V99  COMP-3 VALUE +0.
SB0315        10 FUELUP-SC-TR-TRACTOR-COST
SB0315                                    PIC S9(7)V99  COMP-3 VALUE +0.
SB0315        10 FUELUP-NEW-TRACTOR-COST  PIC S9(7)V99  COMP-3 VALUE +0.

DR0321     05 WS-CVC3-PASSED-FLAG           PIC X     VALUE 'N'.
DR0321        88 CVC3-WAS-PASSED                      VALUE 'Y'.
DR0321     05 WS-SAVE-SRVC-CODE             PIC 9(03) VALUE ZEROES.
DR0321     05 WS-ATMW-DE48-71-ON-BEHALF     PIC X(40).
DR0321     05 FILLER REDEFINES WS-ATMW-DE48-71-ON-BEHALF.
DR0321        10 WS-ATMW-DE48-71 OCCURS 10 TIMES
DR0321                           INDEXED BY WS-DE48-71-INDX.
DR0321           15  WS-ATMW-DE48-71-SF1    PIC X(02).
DR0321           15  WS-ATMW-DE48-71-SF2    PIC X(01).
DR0321           15  WS-ATMW-DE48-71-SF3    PIC X(01).
DR0121     05 WS-SWIPED-DATA.
DR0121        10 WS-SWIPED-CARD             PIC 9(16).
SD0421        10 WS-SWIPED-OR-KEYED         PIC X.
SD0421           88 SWIPED-TRANSACTION   VALUE '='.
DR0121        10 WS-SWIPED-EXP-DT-YYMM      PIC X(04).
DR0121        10 WS-SWIPED-SRVC-CD          PIC X(03).
DR0121        10 WS-PROP-SWIPED-AREA.
DR0121           15                         PIC X.
DR0121           15 WS-PROP-SWIPED-CVC1     PIC X(03).
DR0121           15                         PIC X(12).
DR0121        10 WS-MC-SWIPED-AREA
DR0121            REDEFINES WS-PROP-SWIPED-AREA.
DR0121           15 WS-MC-SWIPED-CVC1       PIC X(03).
DR0121           15                         PIC X(13).
DR0121     05 WS-ATMW-TRACK2-DATA.
DR0121        10 WS-ATM-TRACK2-CARD         PIC 9(16).
DR0121        10                            PIC X.
DR0121        10 WS-ATM-TRACK2-EXP-DT-YYMM  PIC X(04).
DR0121        10 WS-ATM-TRACK2-SERVICE-CODE PIC X(03).
DR0121        10 WS-PROP-ATM-TRACK2-AREA.
DR0121           15                         PIC X.
DR0121           15 WS-PROP-ATM-TRACK2-CVC1 PIC X(03).
DR0121           15                         PIC X(11).
DR0121        10 WS-MC-ATM-TRACK2-AREA
DR0121            REDEFINES WS-PROP-ATM-TRACK2-AREA.
DR0121           15 WS-MC-ATM-TRACK2-CVC1   PIC X(03).
DR0121           15                         PIC X(12).
SD0122     05 WS-SWIPED-CARD-20             PIC X(20).
MP0221     05 WS-CVC1-FLAG                  PIC X(1) VALUE 'N'.
MP0221        88 CVC1-NOT-FOUND VALUE 'Y'.
MP0221     05 WS-CODES-CVC-DECLINE-FLG           PIC X(1) VALUE 'N'.
MP0221        88 CODES-CVC-DECLINE VALUE 'Y'.
SD0122     05 WS-CODES-CVC-TIME-LIMIT      PIC 9(09).

       01  WS-OTHER-WORK-AREA.
091509     03 WS-CREDITL-READ-SW        PIC  X(01)    VALUE SPACE.
091509     03 WS-CREDITL-AMOUNTS.
091509       10  WS-CREDIT-LIMIT          PIC S9(12)     VALUE ZERO.
091509       10  WS-UPDATE-OR-AR-BAL      PIC S9(09)V99  VALUE ZERO.
091509       10  WS-CASH-RECEIVED         PIC S9(09)V99  VALUE ZERO.
091509       10  WS-CURRENT-DAY           PIC S9(09)V99  VALUE ZERO.
080210     03 WS-CL-CO-CD              PIC  X(05)     VALUE SPACES.
102810     03 WS-USE-FLEET-LIMITS      PIC  X(01)     VALUE 'N'.
102810     03 WS-XCPL-PROD             PIC  X(05)     VALUE '00000'.
SB1115     03 WS-XCPL-PROD-R REDEFINES WS-XCPL-PROD.
SB1115        05 FILLER                PIC XX.
SB1115        05 WS-XCLP-PROD-NUM      PIC 99.
SB1115        05 FILLER                PIC X.
102810     03 WS-PRE-AUTH-CODES        PIC  X(01)     VALUE 'N'.
102810     03 WS-SUB-PROD-FIND         PIC  X(01)     VALUE 'N'.
102810     03 WS-PAC-SUB               PIC  9(02)     VALUE ZERO.
102810     03 WS-DFLT-NR2-SUB-PROD-IN  PIC  X(15)     VALUE SPACES.
102810     03 WS-DFLT-NR1-SUB-PROD-IN  PIC  X(15)     VALUE SPACES.
102810     03 WS-DFLT-REF-SUB-PROD-IN  PIC  X(15)     VALUE SPACES.
102810     03 WS-DFLT-OTH-SUB-PROD-IN  PIC  X(15)     VALUE SPACES.
102810     03 WS-CHK-HUB               PIC  X(01)     VALUE SPACE.
102810     03 WS-CURR-MIN              PIC S9(04)     VALUE ZERO.
041112     03 WS-CURR-MIN-WORK         PIC S9(04)     VALUE ZERO.
041112     03 WS-SETUP-XCPRODC-DONE    PIC  X(01)     VALUE SPACE.
041112     03 WS-PURC-TIME-UNPACK      PIC  9(05)     VALUE ZERO.
102810     03 WS-COMP-MIN              PIC S9(04)     VALUE ZERO.
102810     03 WS-ELAP-MIN              PIC S9(04)     VALUE ZERO.
102810     03 WS-DSCARD-DT             PIC  9(07)     VALUE ZERO.
102810     03 WS-DSCARD-TM             PIC  9(07)     VALUE ZERO.
102810     03 WS-DSCARD-CMPR-X         PIC  X(04).
102810     03 WS-DSCARD-CMPR REDEFINES WS-DSCARD-CMPR-X
102810                                 PIC S9(07) COMP-3.
102810     03 WS-DSCARD-END            PIC  X(01)     VALUE SPACE.
AA0921*    03 WS-NBC-KEY               PIC  X(29)     VALUE SPACES.
AA0921     03 WS-NBC-KEY               PIC  X(35)     VALUE SPACES.
102810     03 WS-MULTI-PART-PURCHASE   PIC  X(01)     VALUE SPACE.
102810     03 WS-BYPASS-CARD-NETW-UPDT PIC  X(01)     VALUE SPACE.
102810     03 WS-FLEET-LIMIT-CSH-AVAIL PIC  X(01)     VALUE SPACE.
102810     03 WS-FLEET-LIMIT-CSH-AMT   PIC S9(07)V99  VALUE ZERO.
102810     03 WS-AVAIL-AMT-OIL         PIC S9(03)V99  VALUE ZERO.
102810     03 WS-NO-FUEL-FEE-FLAG      PIC X(01)      VALUE SPACE.
102810        88 WS-NO-FUEL-FEE                       VALUE 'Y'.
102810     03 WS-FORCE-POST-FROM-PRE-AUTH  PIC X(01)  VALUE SPACE.
102810        88 FORCE-POST-FROM-PRE-AUTH             VALUE 'Y'.
102810     03 WS-POPULATED-SW.
102810       10 WS-MAX-NR2-POPULATED     PIC  X(01)   VALUE SPACE.
102810       10 WS-MAX-NR1-POPULATED     PIC  X(01)   VALUE SPACE.
102810       10 WS-MAX-REF-POPULATED     PIC  X(01)   VALUE SPACE.
102810       10 WS-MAX-OTH-POPULATED     PIC  X(01)   VALUE SPACE.
ED0213     03 WS-RESET-LAST-QTY-RFID   PIC  X(01)     VALUE 'N'.
MB1013     03 WS-PROPRIETARY-CARD      PIC  X         VALUE 'N'.
MB1113     03 WS-EXP-DATE-ERR          PIC  X         VALUE 'N'.
           03 WS-THIS-BE-A-RESTORE     PIC  X(01)     VALUE 'N'.
           03 WS-COMDATA-COMPLETE-READ PIC  X(01)     VALUE 'N'.
           03 WS-NR1-COST              PIC 99V9(07) COMP-3 VALUE ZERO.
           03 WS-NR2-COST              PIC 99V9(07) COMP-3 VALUE ZERO.
           03 WS-REF-COST              PIC 99V9(07) COMP-3 VALUE ZERO.
CP0506     03 WS-REF-RACK-PPG          PIC 99V9(07) COMP-3 VALUE ZERO.
SD0219* THESE ARE USED TO HOLD THE PPU PRICES AND COST AMOUNTS SO
SD0219* THAT TSFMO0CT CAN BE USED TO BACKOUT CANADIAN TAXES FROM
SD0219* NET PRICES. UNFORTUNATELY CT ONLY OPERATES ON THE UIWA BALANCES
SD0219     03 WS-NR1-PPU-HOLD            PIC S9(02)V9(3)    COMP-3.
SD0219     03 WS-NR1-COST-HOLD           PIC S9(07)V99      COMP-3.
SD0219     03 WS-NR2-PPU-HOLD            PIC S9(02)V9(3)    COMP-3.
SD0219     03 WS-NR2-COST-HOLD           PIC S9(07)V99      COMP-3.
SD0219     03 WS-REF-PPU-HOLD            PIC S9(02)V9(3)    COMP-3.
SD0219     03 WS-REF-COST-HOLD           PIC S9(07)V99      COMP-3.
SD0219     03 WS-OTH-PPU-HOLD            PIC S9(02)V9(3)    COMP-3.
SD0219     03 WS-OTH-COST-HOLD           PIC S9(07)V99      COMP-3.
090310***** CHG TO PIC 9(2) TO HANDLE ADDITIONAL COMPUTATION LOGIC
           03 WS-WEEKDAY               PIC 9(2) VALUE ZERO.
           03 WS-WEEKDAY-FOUND         PIC X(1).
090310     03 WS-CCPP-INDEX            PIC 9(2) VALUE ZERO.
090310     03 WS-CPC-CALC-DAYS         PIC 9(6) VALUE ZERO.
MB0714     03 X-WEEK                   PIC S9(4)    COMP.
MB0714     03 X-WEEK2                  PIC S9(4)    COMP.
MB0714     03 X-DAY                    PIC S9(4)    COMP.
MB0714     03 WS-WEEKS                 PIC S9(4)    COMP.
MB0714     03 WS-WEEK-FOUND            PIC X    VALUE 'N'.
MB0714     03 WS-FMRACKH-FOUND         PIC X    VALUE 'N'.
MB0714     03 WS-FOUND-ON-FMRACK       PIC X    VALUE 'N'.
MB0714     03 WS-WEEK-REMAINDER        PIC 99   VALUE ZERO.
MB0714     03 WS-WHICH-DAY             PIC 99   VALUE ZERO.
MB0714     03 WS-WORK-RPDT             PIC X(6).
MB0714     03 WS-WORK-FPDT             PIC X(6).
           03 WS-INDEX                 PIC 9(2).
           03 WS-INDEX2                PIC 9(2).
JS0298     03 WS-INDEX3                PIC 9(2).
           03 WS-WORK-DATE             PIC 9(7).
           03 WS-DAYS-TABLE            PIC 9(5) OCCURS 7 TIMES.
           03 WS-RACK-FLAG             PIC X(1).
           03 WS-CHECK-NR              PIC 9(9).
           03 FILLER REDEFINES WS-CHECK-NR.
              05 WS-CHECK-NR-1         PIC X(1).
              05 FILLER                PIC X(8).
           03 WS-REQUEST-SETTLE-FEES PIC X(1)          VALUE 'N'.
           03 WS-HOLD-CHECK-NR     PIC 9(10)           VALUE ZERO.
           03 WS-HOLD-PPG          PIC S99V999 COMP-3  VALUE +0.
           03 INDX                 PIC S9999 COMP SYNC VALUE +0.
           03 FILLER               REDEFINES INDX.
             05 FILLER             PIC X.
             05 INDX-LO            PIC X.
           03 INDX-1               PIC S9999 COMP SYNC VALUE +0.
           03 INDX-2               PIC S9999 COMP SYNC VALUE +0.
MP1208     03 INDX-3               PIC S9999 COMP SYNC VALUE +0.
           03 MOD10-SL             PIC S999 COMP-3 VALUE +0.
082008     03 WS-DISC              PIC S9(5)V99.
082008     03 WS-DISC-R1           REDEFINES WS-DISC PIC S999V9999.
           03 FILLER               REDEFINES WS-DISC.
082008        05 FILLER             PIC X(5).
              05 WS-DISC-DECIMAL    PIC S99.
082008     03 WS-CDN-DISC          PIC S9(5)V99.
           03 WS-CDN-DISC-DEC      PIC S99.
082008     03 WS-DISC-AMT          PIC S9(5)V99.
082008     03 FILLER               REDEFINES WS-DISC-AMT.
082008        05                     PIC XX.
082008        05 WS-DISC-AMT-R       PIC S9(05).
082008     03 WS-DISC-AMT-SAVE     PIC S9(5)V99.
CP0400     03 WS-EXTRA-AMT         PIC S9(7)V99 COMP-3 VALUE +0.
           03 WS-TSN-PRICE-CHANGE  PIC X VALUE 'P'.
             88 THIS-BE-A-TS-PRICE-CHANGE VALUE 'P'.
           03 SAVE-BY-GRACE-FLAG   PIC X VALUE SPACES.
      ****   88 THIS-OVERAGE-SAVED-BY-GRACE VALUE 'O'.
           03 SAVE-ZON-VER-FLAG    PIC X VALUE SPACES.
           03 WS-ID-NR.
              05 WS-ID-NR-NUM       PIC  9(7).
              05 WS-ID-NR-NUM-R     REDEFINES WS-ID-NR-NUM.
                 07 WS-ID-CHAR       PIC  9
                                     OCCURS 7 TIMES
                                     INDEXED BY ID-INDX.
              05 WS-ID-NR-CK-DIG    PIC  9.
           03 FILLER.
              05 WS-CKD-TOTAL       PIC  999.
              05 FILLER             REDEFINES WS-CKD-TOTAL.
                 07 FILLER           PIC XX.
                 07 WS-CKD-TOTAL-LO  PIC  9.
              05 WS-CKD-CALCULATED  PIC  9.
              05 WS-CKD-MULT-BY-2   PIC  99.
              05 FILLER             REDEFINES WS-CKD-MULT-BY-2.
                 07 WS-CKD-HI-ORDER  PIC  9.
                 07 WS-CKD-LO-ORDER  PIC  9.
           03 WS-PRM-CARD.
              05 WS-PRM-CARD-PREFIX PIC X(6)  VALUE ZEROES.
              05 WS-PRM-CARD-BASE-A.
                 07 FILLER           PIC X(9) VALUE ZEROES.
                 07 WS-PRM-CARD-CKD  PIC X    VALUE ZEROES.
              05 FILLER REDEFINES WS-PRM-CARD-BASE-A.
                 07 WS-PRM-CARD-NUM  PIC 9(10).
           03 FILLER               REDEFINES WS-PRM-CARD.
              05 WS-PRM-CARD-NR     PIC 9(15).
              05 FILLER             PIC X.
           03 WS-PRM-CARD-N REDEFINES WS-PRM-CARD PIC 9(16).
           03 WS-ENQ-CARD-NR       PIC 9(15)        VALUE ZEROES.
           03 WS-DATE-MDY          PIC 9(6).
           03 FILLER        REDEFINES WS-DATE-MDY.
              05 WS-DATE-MM        PIC 99.
              05 WS-DATE-DD        PIC 99.
              05 WS-DATE-YY        PIC 99.
           03 WS-CALC-DATE         PIC 9(5).
           03 FILLER REDEFINES WS-CALC-DATE.
              05 WS-CALC-YEAR      PIC 9(2).
              05 WS-CALC-DDD       PIC 9(3).
SB0315     03 WS-CALC-DAYS         PIC 9(6) VALUE ZEROES.
SB0217     03 WS-RESET-DAILY       PIC X(7) VALUE '1111111'.
           03 WS-PPG-VAR           PIC S9(3)V999 COMP-3.
           03 WS-TAX-TRIED-VAR     PIC S9(3)V999 COMP-3.
           03 WS-TAX-TRIED         PIC X(1) VALUE 'N'.
           03 WS-TAX-PPG-HOLD      PIC 9V999 VALUE ZEROES.
           03 HOLD-INP-PRICE-GALLON PIC S9(3)V999 COMP-3 VALUE +0.

           03 LEASEWAY-TRAN-FLAG   PIC X   VALUE 'N'.
      ****   88 THIS-IS-LEASEWAY           VALUE 'Y'.
           03 LEASEWAY-CARD.
              05 FILLER.
                 07 LC-ACCT-NR     PIC X(9).
                 07 FILLER         PIC X.
              05 LC-CARD-NR        PIC X(6).
           03 LS-DLXF-KEY.
              05 FILLER               PIC XX    VALUE 'LS'.
              05 FILLER.
                 07 LDK-ACCT-NR       PIC X(9).
                 07 LDK-CARD-NR       PIC X(6).
              05 FILLER               PIC X(5)   VALUE SPACES.
           03 WS-PRM-LAST-DATE-USED   PIC S9(5)  VALUE +0.
           03 WS-PRM-USED             PIC S9(5)V99  VALUE +0.
           03 WS-PRM-INITIAL          PIC S9(5)V99  VALUE +0.
           03 WS-CHARGE-RATE          PIC S9(5)V99  VALUE +0.
           03 WS-SUBTRACT-DISCOUNT    PIC S9(5)V99  VALUE +0.
           03 SAVE-REBATE-DISCOUNT-AMT    PIC S9(5)V99  VALUE +0.
           03 WS-HOLD-RATE            PIC S9(5)V99  VALUE +0.
           03 HLD-PURC-ONE-TIME       PIC S9(5)V99 COMP-3 VALUE +0.
           03 HLD-PURC-ONE-TIME-PRI   PIC S9(5)V99 COMP-3 VALUE +0.
           03 HLD-PURC-ONE-TIME-SEC   PIC S9(5)V99 COMP-3 VALUE +0.
           03 HLD-CASH-ONE-TIME       PIC S9(5)V99 COMP-3 VALUE +0.
           03 HLD-CASH-ONE-TIME-PRI   PIC S9(5)V99 COMP-3 VALUE +0.
           03 HLD-CASH-ONE-TIME-SEC   PIC S9(5)V99 COMP-3 VALUE +0.
           03 HLD-CASH-1TIME          PIC S9(5)V99 COMP-3 VALUE +0.
           03 HLD-PRM-PURC-INITIAL    PIC S9(5)V99 COMP-3 VALUE +0.
           03 HLD-PRM-CASH-INITIAL    PIC S9(5)V99 COMP-3 VALUE +0.
           03 WS-TOTAL-PURC-AMOUNT    PIC S9(5)V99 COMP-3 VALUE +0.
           03 WS-TOTAL-CASH-AMOUNT    PIC S9(5)V99 COMP-3 VALUE +0.
           03 HOLD-FP-LAST-TRANSACTION-NR   PIC S9(9) COMP-3.
           03 HOLD-FP-DATE-LAST-TRANS     PIC S9(5) COMP-3.
           03 HOLD-FP-TIME-LAST-TRANS     PIC S9(6) COMP-3.
           03 HOLD-BALLIM-FLAG        PIC X         VALUE SPACE.
           03 HOLD-EIBTRNID           PIC X(4).
           03 WS-PACKED-CHECK         PIC S9(9) COMP-3 VALUE +0.
           03 WS-DRAFT-RECD           PIC X(159).
           03 WS-EXPRESS-AVAILABLE    PIC S9(6)V99.
           03 WS-PICKUP-RATE          PIC S9(3)V99.
           03 VR-VALIDATE-CHECK       PIC 9(10).
           03 FILLER REDEFINES VR-VALIDATE-CHECK.
              05 VR-FIRST-DIGIT       PIC 9.
              05 FILLER               PIC 9(9).
           03 FILLER REDEFINES VR-VALIDATE-CHECK.
              05 VR-FIRST-NINE        PIC 9(9).
              05 VR-CHECK-DIGIT       PIC 9.
           03 FILLER REDEFINES VR-VALIDATE-CHECK.
              05 VR-FIRST-FOUR        PIC 9(4).
              05 FILLER               PIC 9(6).
           03 WS-CHECK-DIGIT          PIC 9.
           03 WS-CHECK-RESULT         PIC 9(9).
           03 WS-FMDL-CUST-ID-FIXED   PIC X(10).
           03 RETURN-CDE              PIC X.
           03 DATA-LEN                PIC S99  COMP   VALUE +2.
           03 WS-REFERENCE-NR      PIC 9(9).
           03 FILLER            REDEFINES WS-REFERENCE-NR.
              05 WS-REFERENCE-DD   PIC 99.
              05 WS-REFERENCE-CTL  PIC 9(7).
           03 WS-REF-NINE-NR.
              05 WS-REF-NINE-DD    PIC 99.
              05 WS-REF-NINE-CTL   PIC 9(7).
           03 WS-REF-NINE-NR-R REDEFINES WS-REF-NINE-NR   PIC 9(9).
           03 OLD-TRANS-NR.
              05 OLD-TRANS-DD       PIC 99.
              05 OLD-TRANS-CTL-NR   PIC 9(5).
           03 WS-PHONE-WORK.
               05  WS-PHONE-AREA-CODE  PIC 9(3).
               05  WS-PHONE-PREFIX     PIC 9(3).
               05  WS-PHONE-NUMBER     PIC 9(4).
           03  WS-BINARY-FIELD         PIC S9(4)   COMP SYNC VALUE +0.
           03  FILLER  REDEFINES       WS-BINARY-FIELD.
               05  FILLER              PIC X.
               05  WS-BINARY-LOW       PIC X.
           03 WS-TSCODE.
              05 WS-TS-ALP         PIC XX.
              05 WS-TS-NUM         PIC 999.
           03 WS-TSCODE-COMP       PIC X(10).
           03 WS-PRM-RESET-FLAGS   PIC 9(7).
           03 WS-RESET-FLAG REDEFINES WS-PRM-RESET-FLAGS
                                   PIC X
                                   OCCURS 7 TIMES.
MN0905     03 WS-TOTAL-PRICE       PIC S9(5)V99.
082008     03 WS-DEVIATION         PIC S9(5)V999.
           03 WS-PERCENTAGES       PIC S9(9) VALUE +0.
           03 FILLER               REDEFINES WS-PERCENTAGES.
             05 WS-TOTAL-PRCNTAGE  PIC S999V99.
             05 WS-CDN-PRCNTAGE    PIC S99V99.
           03 WS-DRVNM.
             05 WS-DRVN PIC X OCCURS 8 TIMES INDEXED BY DRV-INDX.
           03 WS-CURR-DAY-TOTAL    PIC S9(6)V99 VALUE +0 COMP-3.
           03 WS-CSTTL             PIC S9(6)V99 VALUE +0.
           03 WS-CTR1              PIC S9(7) VALUE +0.
           03 SAVE-PCTUP           PIC SV99 VALUE ZERO.
           03 WRK-VARIANCE         PIC 99V999 COMP-3 VALUE 0.
           03 WRK-VARIANCE2        PIC 99V999 COMP-3 VALUE 0.
           03 WS-PPG-TAX-VAR       PIC SV9(5) COMP-3 VALUE ZEROES.
           03 OCR-FLAG             PIC S9 VALUE +0.
           03 WS-PHONENRX.
              05 WS-PHONENR        PIC 9(10).
           03 FILLER REDEFINES WS-PHONENRX.
              05 WS-PHONENR-AREA   PIC X(03).
              05 FILLER            PIC X(07).
           03 LTR-VALUE            PIC S9(5) VALUE +0.
           03 CURRENT-TIME-IN-SECONDS PIC S9(9) COMP-3.
           03 NON-PROD-FLAG        PIC X VALUE ' '.
             88 NON-PRODUCTION-REQUEST VALUE 'N'.
           03 PGRM-FUNCTION        PIC 9999 VALUE 0.
              88 PGRM-FUNCTION-CASH-ONLY    VALUE 0000.
              88 PGRM-FUNCTION-OIL-ONLY     VALUE 0001.
              88 PGRM-FUNCTION-PRODUCT-ONLY VALUE 1000.
           03 FILLER               REDEFINES PGRM-FUNCTION.
             05 PRODUCT-PURCHASE    PIC 9.
             05 TRAILER-PURCHASE    PIC 9.
             05 TRACTOR-PURCHASE    PIC 9.
             05 OIL-PURCHASE        PIC 9.
062209     03 GROCERY-PURCHASE    PIC 9(01) VALUE ZERO.
           03 GOLD-OK-FLAG        PIC X VALUE SPACES.
              88 GOLD-OK  VALUE 'G'.
           03 ERROR-FLAG          PIC X VALUE SPACE.
             88 THERE-WAS-AN-ERROR VALUE '*'.
           03 CP-ERROR-FLAG       PIC X VALUE SPACE.
           03 ERROR-TYPE          PIC X(39) VALUE SPACES.
           03 SAVE-XTN-FEE        PIC S9(5)V99 COMP-3 VALUE +0.
           03 SAVE-XCS-SETTLE-FEE PIC S9(5)V99 COMP-3 VALUE +0.
           03 SAVE-EQUIP-FEE      PIC S9(5)V99 COMP-3 VALUE +0.
           03 SAVE-SC-FEE         PIC S9(5)V99 COMP-3 VALUE +0.
           03 SAVE-HEADER-FLAG    PIC X               VALUE 'N'.
              88 THIS-IS-A-SDR-HEADER-2 VALUE 'Y'.
           03 SAVE-COUNT          PIC S9(3) COMP-3 VALUE +0.
           03 SAVE-AMOUNT         PIC S9(7)V99 COMP-3 VALUE +0.
           03 XCS-SETTLE-MSG.
              05 FILLER           PIC X(5) VALUE 'STL #'.
              05 XCS-SETTLE-COUNT PIC ZZ9.
           03 AMOUNT-TO-SETTLE    PIC S9(7)V99 COMP-3 VALUE +0.
           03 PRODUCT-TOTAL       PIC S9(7)V99 COMP-3 VALUE +0.
           03 PRODUCT-TOTAL2      PIC S9(7)V99 COMP-3 VALUE +0.
           03 WS-PO-PRODUCT-TOTAL PIC S9(7)V99 COMP-3 VALUE +0.
           03 PRODUCT-AMOUNT      PIC S9(7)V99 COMP-3 VALUE +0.
           03 CURRENT-DAY-PROD-TOTAL PIC S9(7)V99 COMP-3 VALUE +0.
           03 WS-DAY              PIC 9.
           03 PD-YYDDD            PIC 9(5).
           03 CHK-DAY             PIC 9.
           03 PRMLOG-LENGTH       PIC S999 COMP VALUE +352.
           03 CURRENT-DAY         PIC 9.
           03 ELAPSED-DAYS        PIC  9(5) COMP-3.
           03 REL-CUR-DAY         PIC S9(3) COMP-3.
           03 REL-LAST-DAY        PIC S9(3) COMP-3.
           03 WS-YTD-GALLONS       PIC S9(9)V99 COMP-3.
           03 WS-YTD-FUEL-TOTAL    PIC S9(7)V99 COMP-3.
           03 READ-ACCT-FLAG      PIC X   VALUE 'Y'.
              88 I-NEED-TO-READ-ACCT      VALUE 'Y'.
           03 READ-CUST-FLAG      PIC X   VALUE 'Y'.
              88 I-NEED-TO-READ-CUST      VALUE 'Y'.
           03 WS-RESET-ONE-TIME-PURC-FLAG PIC X(1) VALUE 'Y'.
              88 WS-RESET-ONE-TIME-PURC            VALUE 'Y'.
           03 WS-RESET-ONE-TIME-CASH-FLAG PIC X(1) VALUE 'Y'.
              88 WS-RESET-ONE-TIME-CASH            VALUE 'Y'.
SB0513     03 WS-PRMINFO-WRITE-SW         PIC X    VALUE ' '.
SB0513        88 PRMINFO-WRITE                     VALUE 'Y'.
SB0513     03 WS-PRMINFO-REWRITE-SW       PIC X    VALUE ' '.
SB0513        88 PRMINFO-REWRITE                   VALUE 'Y'.
SB0713     03 WS-SAVE-DIESEL-LIMIT        PIC S9(5) COMP-3.
SB0713     03 WS-SAVE-REEFER-LIMIT        PIC S9(5) COMP-3.
           03 HOLD-TRIP-NUMBER    PIC X(10).
SD0719     03 HOLD-TRIP-NUMBER-2  PIC X(10).
SD0719     03 HOLD-TRIP-NUMBER-3  PIC X(10).
           03 HOLD-TRIP-NUMBER-I  PIC X(10).
           03 WORK-TRIP-EDIT.
              05 TRIP-EDIT-CHAR PIC X OCCURS 10 TIMES.
           03 WORK-EDIT-EDIT.
              05 EDIT-EDIT-CHAR PIC X OCCURS 10 TIMES.
           03 WORK-INDEX         PIC 99    VALUE ZEROES.
           03 CANCEL-FLAG        PIC X     VALUE 'N'.
082008     03 WS-CONTINUE-CANCEL PIC X     VALUE SPACE.
           03 WS-NETW-OK         PIC X     VALUE 'N'.
           03 WS-TOTAL-OTHER     PIC S9(7)V99  VALUE +0.
           03 SC-HOLD-AREA       PIC X(1021).
           03 SCFUELP-STATUS-BYTE PIC S999 COMP-3 VALUE +0.
             88 SCFUELP-NOT-FOUND VALUE +1.
           03 WRK-PO-PRODUCT-CODE PIC XX.
           03 FILLER                REDEFINES WRK-PO-PRODUCT-CODE.
              05 WRK-PO-PROD-CODE-1 PIC X.
              05 WRK-PO-PROD-CODE-2 PIC X.
           03 FILLER                REDEFINES WRK-PO-PRODUCT-CODE.
              05 WRK-PO-PROD-N    PIC 99.
CP0807     03 READY-TO-UPDATE-UNITMST   PIC X VALUE 'N'.
      **** (CANADIAN WORK FIELDS) ****
           03 FILLER.
061212******** PICS CHANGED FROM V99 TO V9(5)
061212        05 WS-CANADIAN-DOLLARS    PIC S9(9)V9(5) VALUE ZEROS.
061212        05 WS-US-DOLLARS          PIC S9(9)V9(5) VALUE ZEROS.
              05 WS-GALLONS             PIC S9(5)V999 VALUE ZEROS.
              05 WS-AMOUNT              PIC S9(5)V999 VALUE ZEROS.
              05 WS-LITERS              PIC S9(5)V999 VALUE ZEROS.
              05 WS-QTS                 PIC  9(2)     VALUE ZEROS.
              05 WS-PPG                 PIC 9(3)V999  VALUE ZEROES.
              05 WS-PPL                 PIC 9(3)V999  VALUE ZEROES.
              05 HLD-EXPECTED-AMOUNT    PIC S9(7)V99  VALUE ZEROS.
              05 QUART-TO-LITER-RATE    PIC 9V9(6) VALUE 0.946332.
              05 LITER-TO-QUART-RATE    PIC 9V9(6) VALUE 1.056712.
              05 GALLON-TO-LITER-RATE   PIC 9V9(6) VALUE 3.785329.
              05 LITER-TO-GALLON-RATE   PIC 9V9(6) VALUE 0.264177.
              05 LIMITS-ALTERED-FOR-PO  PIC X      VALUE SPACES.
              05 US-TO-CAN-RATE         PIC S9999V9(08) VALUE ZERO.
              05 CAN-TO-US-RATE         PIC S9999V9(08) VALUE ZERO.
           03 WS-DRIVER-NR.
              05 WS-DRIVER-NR-1-TO-5    PIC X(5).
              05 WS-DRIVER-NR-6-TO-7    PIC X(2).
              05 FILLER                 PIC X(9).
           03 FMT-DRIVER-NR.
              05 FMT-DRIVER-NR-1-TO-5   PIC X(5).
              05 FILLER                 PIC X    VALUE '$'.
              05 FMT-DRIVER-NR-7-TO-8   PIC X(2).
           03 WRK-HUB-READING           PIC 9(6)V9.
           03 FILLER            REDEFINES WRK-HUB-READING.
              05 WRK-HUB-1ST-6          PIC X(6).
              05 FILLER                 PIC X.
           03 WS-SEL-DISC               PIC S9(3)V99 COMP-3.
           03 WS-SC-REV                 PIC S9(3)V99 COMP-3.
           03 WS-TRANS-NR               PIC 9(8).
           03 FILLER REDEFINES WS-TRANS-NR.
              05 WS-TRANS-ROLL          PIC 9(1).
              05 WS-TRANS-DD            PIC 9(2).
              05 WS-TRANS-SEQ           PIC 9(5).
           03 WS-TRANS-NR-WORK          PIC 9(9).
           03 FILLER REDEFINES WS-TRANS-NR-WORK.
              05 FILLER                 PIC 9(3).
              05 WS-TRANS-NR-WORK-ROLL  PIC 9(1).
              05 WS-TRANS-NR-WORK-SEQ   PIC 9(5).
           03 WRK-HHMMSS                PIC 9(6).
           03 FILLER       REDEFINES WRK-HHMMSS.
              05 WRK-HH                 PIC 99.
              05 WRK-MM                 PIC 99.
              05 FILLER                 PIC 99.
           03 FILLER       REDEFINES WRK-HHMMSS.
              05 WRK-HHMM               PIC 9(4).
              05 FILLER                 PIC 99.
           03 HLD-DELIV-TIME            PIC 9(4).
           03 DELIV-TIME-CTR            PIC 9(3).
           03 ITLG-RECORD.
              05 FILLER                 PIC X(5)  VALUE 'ITRC '.
              05 ITLG-DATA-STREAM2      PIC X(800).
           03 WS-ITDQ-LENGTH            PIC S9(4) COMP VALUE +805.
           03 WS-LOOP-FLAG              PIC X          VALUE 'N'.
           03 WS-EXIT-FLAG              PIC X          VALUE 'N'.
           03 WS-LOOP-FP-0100           PIC X          VALUE 'N'.
           03 WS-EXIT-PPG-CHECK         PIC X          VALUE 'N'.
           03 WS-ADD-TO-BILLABLE-FLAG   PIC X          VALUE 'N'.
           03 WS-WORK-AMOUNT            PIC S9(7)V99 COMP-3.
           03                           PIC X.
              88 WS-TRI-STATE-ACCT                     VALUE 'Y'.
              88 WS-TRI-STATE-ACCT-NOT                 VALUE 'N'.
           03 HLD-CRR-KEY.
              05 HLD-CRR-CUSTOMER-TYPE      PIC XX    VALUE 'CU'.
              05 HLD-CRR-CUSTOMER-ID        PIC X(10).
              05 HLD-CRR-SYSTEM-ID          PIC X(4)  VALUE 'FM  '.
              05 HLD-CRR-REPORT-CODE        PIC S9(5) COMP-3 VALUE +12.
              05 HLD-CRR-REPORT-FREQUENCY   PIC X     VALUE 'D'.
              05 HLD-CRR-RECV-CUSTOMER-TYPE PIC XX    VALUE 'AC'.
              05 HLD-CRR-RECV-CUSTOMER-ID   PIC X(10).
              05 FILLER                     PIC X(3)  VALUE LOW-VALUES.
MP0401     03 MA-CRR-KEY.
MP0401        05 MA-CRR-CUSTOMER-TYPE       PIC XX    VALUE 'CU'.
MP0401        05 MA-CRR-CUSTOMER-ID         PIC X(10).
MP0401        05 MA-CRR-SYSTEM-ID           PIC X(4)  VALUE 'FM  '.
MP0401        05 MA-CRR-REPORT-CODE         PIC S9(5) COMP-3 VALUE +85.
MP0401        05 MA-CRR-REPORT-FREQUENCY    PIC X     VALUE 'D'.
MP0401        05 MA-CRR-RECV-CUSTOMER-TYPE  PIC XX    VALUE 'AC'.
MP0401        05 MA-CRR-RECV-CUSTOMER-ID    PIC X(10).
MP0401        05 FILLER                     PIC X(3)  VALUE LOW-VALUES.
MB0106     03 BF-CRR-KEY.
MB0106        05 BF-CRR-CUSTOMER-TYPE       PIC XX    VALUE 'CU'.
MB0106        05 BF-CRR-CUSTOMER-ID         PIC X(10).
MB0106        05 BF-CRR-SYSTEM-ID           PIC X(4)  VALUE 'BF  '.
MB0106        05 BF-CRR-REPORT-CODE         PIC S9(5) COMP-3 VALUE +3.
MB0106        05 BF-CRR-REPORT-FREQUENCY    PIC X     VALUE 'D'.
MB0106        05 BF-CRR-RECV-CUSTOMER-TYPE  PIC XX    VALUE 'AC'.
MB0106        05 BF-CRR-RECV-CUSTOMER-ID    PIC X(10).
MB0106        05 FILLER                     PIC X(3)  VALUE LOW-VALUES.
CP0406     03 SUB-PROD-CRR-KEY.
CP0406        05 SP-CRR-CUSTOMER-TYPE       PIC XX    VALUE 'CU'.
CP0406        05 SP-CRR-CUSTOMER-ID         PIC X(10).
CP0406        05 SP-CRR-SYSTEM-ID           PIC X(4)  VALUE 'FM  '.
CP0406        05 SP-CRR-REPORT-CODE         PIC S9(5) COMP-3 VALUE +93.
CP0406        05 SP-CRR-REPORT-FREQUENCY    PIC X     VALUE 'D'.
CP0406        05 SP-CRR-RECV-CUSTOMER-TYPE  PIC XX    VALUE 'AC'.
CP0406        05 SP-CRR-RECV-CUSTOMER-ID    PIC X(10).
CP0406        05 FILLER                     PIC X(3)  VALUE LOW-VALUES.
           03 CALC-DISCOUNT-ONLY            PIC X     VALUE SPACES.
           03 WS-CASH-AMT-AVAIL             PIC S9(7)V99 VALUE ZEROES.
           03 WS-TOTAL-TRACTOR-GALLONS      PIC S9(9)  VALUE ZEROES.
           03 WS-READ-FMRELAT-SC-FLAG       PIC X      VALUE 'N'.
           03 WS-FMRELAT-SC-REC             PIC X(750).
           03 WS-READ-FMRELAT-CH-FLAG       PIC X      VALUE 'N'.
           03 WS-FMRELAT-CH-REC             PIC X(750).
           03 WS-READ-FMRELAT-CO-FLAG       PIC X      VALUE 'N'.
           03 WS-FMRELAT-CO-REC             PIC X(750).
           03 WS-RMR-SC-FOUND-SW            PIC 9.
           03 WS-RMR-CH-FOUND-SW            PIC 9.
           03 WS-RMR-CO-FOUND-SW            PIC 9.
           03 NBC-READ-STATUS               PIC X      VALUE ' '.
           03 HLD-NBC-KEY.
              05 HLD-NBC-CARD-LOCATION.
AA0921*          10 HLD-NBC-CARD-NUMBER     PIC X(10).
AA0921           10 HLD-NBC-CARD-NUMBER     PIC X(16).
                 10 HLD-NBC-LOCATION-CODE   PIC X(10).
              05 HLD-NBC-DATE-ADD           PIC 9(7) COMP-3.
              05 HLD-NBC-TIME-ADD           PIC 9(9) COMP-3.
           03 TRAILER-HOUR-WORK-FIELDS.
              05 WS-PREV-HOURS        PIC S9(6)V9 COMP-3 VALUE ZEROS.
              05 WS-CURRENT-HOURS     PIC S9(6)V9 COMP-3 VALUE ZEROS.
              05 WS-REEFER-HPG        PIC S9(6)V9 COMP-3 VALUE ZEROS.
           03 WS-RCP-WORK-FIELDS.
              05 WS-CHECK-RCP-INP     PIC 9(1)V9(4).
              05 WS-CHECK-RCP-SCM     PIC 9(1)V9(4).
              05 WS-RCP-WORK-FLD      PIC 9(1)V9(5).
              05 WS-RCP-WORK-TAX1     PIC 9(3)V99.
              05 WS-RCP-WORK-TAX2     PIC 9(3)V99.
              05 WS-RCP-QST-RATE      PIC 9(1)V9(5) VALUE ZERO.
              05 WS-RCP-GST-RATE      PIC 9(1)V9(5) VALUE ZERO.
              05 WS-RCP-PPL           PIC 9(1)V9(5).
JS0699     03 WS-TAX-WORK-FIELDS.
JS0699        05 WS-TAX-QUANTITY      PIC 9(7)V99.
JS0699        05 WS-TAX-PPL           PIC 9(3)V9(5).
JS0699        05 WS-TAX-COST          PIC 9(7)V99.
JS0699        05 WS-TAX-COST-HOLD     PIC 9(7)V99.
JS0699        05 WS-TAX-AMOUNT        PIC 9(7)V99.
JS0699        05 WS-TAX-PPL-WORK      PIC 9(3)V9(5).
JS0699        05 WS-TAX-PST-RATE      PIC 9(3)V9(5) VALUE ZERO.
JS0699        05 WS-TAX-GST-RATE      PIC 9(3)V9(5) VALUE ZERO.
DEBUG *****03 WS-CXMLOG-MESSAGE            PIC X(132).
050712     03 WS-CXML-UNPACK               PIC 9(09)  VALUE ZERO.
CP0809     03 WS-CXML-DATA.
CP0809        05 FILLER                    PIC X(03) VALUE 'US '.
CP0809        05 WS-CXML-DATE              PIC 9(05).
CP0809        05 FILLER                    PIC X(01) VALUE ' '.
CP0809        05 WS-CXML-TIME              PIC 99B99B99.
CP0809        05 FILLER                    PIC X(01) VALUE ' '.
CP0809        05 WS-CXML-WORK              PIC X(114).
CP0406     03 WS-SUB-PROD-WORK-FIELDS-X.
CP0406        05 WS-CP-FOR-SUBPROD        PIC X(1) VALUE 'N'.
CP0406        05 WS-READ-SCSTATE-XY-SW    PIC X(1) VALUE 'N'.
CP0506        05 WS-READ-SCSTATE-SW       PIC X(1) VALUE 'N'.
CP0406        05 WS-NR2-CP-SET            PIC X(01) VALUE 'N'.
CP0406        05 WS-NR1-CP-SET            PIC X(01) VALUE 'N'.
CP0406        05 WS-REF-CP-SET            PIC X(01) VALUE 'N'.
CP0406     03 WS-SUB-PROD-WORK-FIELDS.
CP0406        05 WS-SUB-PROD-IN           PIC X(15).
CP0406        05 WS-SUB-PROD-OUT          PIC X(3).
SD0222        05 WS-SUB-PROD-CODE         PIC X(3).
CP0406        05 WS-SUB-PROD-CODE-TYPE    PIC X(1).
CP0406        05 WS-SUB-PROD-FUEL-TYPE    PIC X(2).
CP0406        05 WS-SUB-PROD-FOUND        PIC X(1).
SB0107        05 WS-NATS-PROD-IN          PIC X(3).
SB0107        05 WS-NATS-PROD-OUT         PIC X(15).
CP0506        05 WS-TAX-CALC-AMT          PIC 9V9(5) VALUE ZEROS.
CP0406        05 WS-HOLD-NR2-SUB-PROD-IN  PIC X(15).
CP0406        05 WS-HOLD-NR1-SUB-PROD-IN  PIC X(15).
CP0406        05 WS-HOLD-REF-SUB-PROD-IN  PIC X(15).
CP0406        05 WS-HOLD-OTH-SUB-PROD-IN  PIC X(15).
CP0406        05 WS-HOLD-NR2-CP-SUFFIX    PIC X(02) VALUE SPACES.
CP0406        05 WS-HOLD-NR1-CP-SUFFIX    PIC X(02) VALUE SPACES.
CP0406        05 WS-HOLD-REF-CP-SUFFIX    PIC X(02) VALUE SPACES.
CP0406        05 WS-CP-SUFFIX             PIC X(02) VALUE SPACES.
CP0406        05 CP-IDX                   PIC 9(01).
MB0714        05 WS-NR2-RP-PRICE-TABLE.
MB0714           10 WS-NR2-RP-PRICE-INFO OCCURS 7 TIMES.
MB0714              15 WS-NR2-RP-DATE       PIC S9(7)      COMP-3.
MB0714              15 WS-NR2-RP-NR1-PPG    PIC S9V9999    COMP-3.
MB0714              15 WS-NR2-RP-NR2-PPG    PIC S9V9999    COMP-3.
MB0714        05 WS-NR1-RP-PRICE-TABLE.
MB0714           10 WS-NR1-RP-PRICE-INFO OCCURS 7 TIMES.
MB0714              15 WS-NR1-RP-DATE       PIC S9(7)      COMP-3.
MB0714              15 WS-NR1-RP-NR1-PPG    PIC S9V9999    COMP-3.
MB0714              15 WS-NR1-RP-NR2-PPG    PIC S9V9999    COMP-3.
MB0714        05 WS-REF-RP-PRICE-TABLE.
MB0714           10 WS-REF-RP-PRICE-INFO OCCURS 7 TIMES.
MB0714              15 WS-REF-RP-DATE       PIC S9(7)      COMP-3.
MB0714              15 WS-REF-RP-NR1-PPG    PIC S9V9999    COMP-3.
MB0714              15 WS-REF-RP-NR2-PPG    PIC S9V9999    COMP-3.
KB1007     03 WS-ONL-CROSS-BORDER-FIELDS.
KB1007        05 WS-ONL-CRD-XBORDER-ASS-PCT PIC SV9(5)  COMP-3 VALUE +0.
KB1007        05 WS-ONL-ATM-XBORDER-ASS-PCT PIC SV9(5)  COMP-3 VALUE +0.
KB1007        05 WS-ONL-POS-XBORDER-ASS-PCT PIC SV9(5)  COMP-3 VALUE +0.
KB1007     03 WS-XBORDER-FIELDS.
KB1007        05 WS-XBORDER-DEFAULT-PCT     PIC SV9(5)  COMP-3
KB1007                                                  VALUE +.00800.
KB1007        05 WS-XBORDER-ASSMT-PCT       PIC SV9(5)  COMP-3 VALUE +0.
KB1007        05 WS-XBORDER-ASSMT-AMT       PIC S9(7)V99
KB1007                                                  COMP-3 VALUE +0.
CP0910     03 WS-HLD-CAR-TAX-ID             PIC X(10)   VALUE SPACES.
SB0114     03 WS-HOLD-UIWA-TAX-FIELDS.
SB0114        05 WS-HOLD-UIWA-NR2-COST-SC  PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-NR2-PPU-SC   PIC S9(02)V9(3)    COMP-3.
SB0114        05 WS-HOLD-UIWA-NR2-SUB-PROD PIC X(03).
SB0114        05 WS-HOLD-UIWA-NR2-QTY      PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-NR2-QTY-SC   PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-NR2-QTY-US   PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-NR1-COST-SC  PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-NR1-PPU-SC   PIC S9(02)V9(3)    COMP-3.
SB0114        05 WS-HOLD-UIWA-NR1-SUB-PROD PIC X(03).
SB0114        05 WS-HOLD-UIWA-NR1-QTY      PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-NR1-QTY-SC   PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-NR1-QTY-US   PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-REF-PPU-SC   PIC S9(02)V9(3)    COMP-3.
SB0114        05 WS-HOLD-UIWA-REF-COST-SC  PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-REF-SUB-PROD PIC X(03).
SB0114        05 WS-HOLD-UIWA-REF-QTY      PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-REF-QTY-SC   PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-REF-QTY-US   PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-OTH-PPU-SC   PIC S9(02)V9(3)    COMP-3.
SB0114        05 WS-HOLD-UIWA-OTH-COST-SC  PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-OTH-SUB-PROD PIC X(03).
SB0114        05 WS-HOLD-UIWA-OTH-QTY      PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-OTH-QTY-SC   PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-OTH-QTY-US   PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-OIL-COST-SC  PIC S9(07)V99      COMP-3.
SB0114        05 WS-HOLD-UIWA-OIL-QTY      PIC S9(07)         COMP-3.
SB0114        05 WS-HOLD-UIWA-PR1-COST     PIC S9(7)V99       COMP-3.
SB0114        05 WS-HOLD-UIWA-PR1-COST-SC  PIC S9(7)V99       COMP-3.
SB0114        05 WS-HOLD-UIWA-PR1-COST-US  PIC S9(7)V99       COMP-3.
SB0114        05 WS-HOLD-UIWA-PR2-COST     PIC S9(7)V99       COMP-3.
SB0114        05 WS-HOLD-UIWA-PR2-COST-SC  PIC S9(7)V99       COMP-3.
SB0114        05 WS-HOLD-UIWA-PR2-COST-US  PIC S9(7)V99       COMP-3.
SB0114        05 WS-HOLD-UIWA-PR3-COST     PIC S9(7)V99       COMP-3.
SB0114        05 WS-HOLD-UIWA-PR3-COST-SC  PIC S9(7)V99       COMP-3.
SB0114        05 WS-HOLD-UIWA-PR3-COST-US  PIC S9(7)V99       COMP-3.
SB0114        05 WS-HOLD-UIWA-TAX-AMT-SC   PIC S9(7)V99 VALUE +0 COMP-3.
SB0114        05 WS-ORIG-UIWA-TAX-AMT-SC   PIC S9(7)V99 VALUE +0 COMP-3.
SB0114     03 WS-HOLD-BILL-FIELDS.
SB0114        05 WS-HOLD-BILLABLE          PIC S9(5)V99 VALUE +0 COMP-3.
SB0114        05 WS-HOLD-NON-BILLABLE      PIC S9(5)V99 VALUE +0 COMP-3.
SB0114     03 WS-RET-PROD-PRICE            PIC S9(5)V99 VALUE +0 COMP-3.
DR1117     03 WS-INTERVAL-CONTROL-X         PIC X(06).
DR1117     03 WS-INTERVAL-CONTROL
DR1117          REDEFINES
DR1117            WS-INTERVAL-CONTROL-X     PIC 9(06).
DR1117     03 WS-INTERVAL-CONTROL-PACKED    PIC S9(07) COMP-3.
DR1117
DR1117*-----------------------------*
DR1117* FMTB COMMAREA FIELDS        *
DR1117*-----------------------------*
DR1117 01 WS-FMTB-COMMAREA.
DR1117     05 WS-FMTB-CRD-NBR               PIC X(20).
DR1117     05 WS-FMTB-MRCH-NBR              PIC X(10).
DR1117     05 WS-FMTB-PRE-AUTH-DT           PIC X(10).
DR1117     05 WS-FMTB-PRE-AUTH-TS           PIC X(26).
DR1117     05 WS-FMTB-POST-FLG              PIC X(01).

CP0807** THE FOLLOWING WS FIELDS REPLACE FPMASTR FIELDS THAT WERE
CP0807** ALWAYS OVERWRITTEN WITH VALUES FROM OTHER FILES.
CP0807 01  WS-FLAGS-AND-LIMITS.
CP0807     05 WS-FP-ACCT-CODE            PIC X(10).
CP0807     05 WS-UNITMST-RECD-SW         PIC X(01)  VALUE 'Y'.
CP0807     05 WS-FL-HUBOMETER-FLAG       PIC X(01).
CP0417        88 HUB-READING-REQUIRED        VALUE 'Y','P','R'.
CP0807     05 WS-FL-DRIVER-NAME-FLAG     PIC X(01).
CP0807        88 CO-INPUTS-DRIVER-NAME       VALUE 'D'.
CP0807     05 WS-FL-TRIP-ALLOWANCE-FLAG  PIC X.
CP0807        88 TRIP-ALLOWANCE-SET          VALUE 'T'.
CP0807     05 WS-FL-TRIP-FLAG            PIC X.
CP0807        88 TRIP-NR-REQ-THIS-UNIT       VALUES 'T' 'B' 'D' 'C'.
CP0807        88 TRIP-NR-ENTERED             VALUE 'E'.
CP0807     05 WS-FL-CASH-ADV-STATUS      PIC X.
CP0807     05 WS-FL-CASH-ADV-USED-DLY    PIC S9(9)V99     VALUE ZEROS.
CP0807     05 WS-FL-CASH-ADV-FLAG        PIC X.
CP0807     05 WS-FL-CASH-ADV-RATE        PIC S9V99 COMP-3 VALUE ZEROS.
CP0807     05 WS-FL-OIL-BLOCK            PIC X.
CP0807        88 NO-OIL-PURCHASE-ALLOWED-THIS-U VALUE 'Y'.
CP0807     05 WS-FL-MAX-OIL-QTS          PIC S999 COMP-3 VALUE ZEROS.
CP0807     05 WS-FL-SERVICE-RESTRICTION  PIC X.
CP0807        88 SELF-SERVICE-ONLY       VALUE 'S'.
CP0807        88 SELF-MINI-SERVICE       VALUE 'M'.
CP0807     05 WS-FL-REFER-BLOCK          PIC X.
CP0807        88 REFER-IS-BLOCKED        VALUE 'Y'.

CP0807** THE FOLLOWING WS FIELDS ARE INITIALLY POPULATED FROM UNITMST
CP0807** BUT CAN BE OVERWRITTEN WITH VALUES FROM OTHER FILES.
CP0807 01  WS-REUSED-FLAGS-AND-LIMITS.
CP0807     05 WS-RFL-CASH-ADV-INIT       PIC S9(9)V99    VALUE ZEROS.
CP0807     05 WS-RFL-CASH-ADV-USED       PIC S9(9)V99    VALUE ZEROS.
CP0807     05 WS-RFL-CASH-ADV-INIT-DLY   PIC S9(9)V99    VALUE ZEROS.
CP0807     05 WS-RFL-CASH-ADV-DAILY-FLAG PIC X.
CP0807        88 CASH-ADV-DAILY-SET          VALUE '*'.
CP0807     05 WS-RFL-MAX-PURC-VARIANCE   PIC S999V99     VALUE ZEROS.
CP0807     05 WS-RFL-MAX-PURC-VARIANCE-R REDEFINES
CP0807        WS-RFL-MAX-PURC-VARIANCE   PIC S9V9999.
CP0807     05 WS-RFL-MAX-PURC-DLY-FUEL   PIC S9(9)V99    VALUE ZEROS.

      *********************************************************
      * CURRENT DATE WORK FIELDS                              *
      *********************************************************
       01  WS-BUSINESS-DATE-WORK-FIELDS.
           05 WS-BUSINESS-DATE-YYYYMMDD.
              10 WS-BUSINESS-DATE-YYYYMMDD-N    PIC 9(8).
           05 WS-BUSINESS-DATE-CYYMMDD          PIC 9(7).
           05 FILLER REDEFINES WS-BUSINESS-DATE-CYYMMDD.
              10 WS-BUSINESS-DATE-CENT          PIC 9(1).
              10 WS-BUSINESS-DATE-YYMMDD        PIC 9(6).
           05 WS-BUSINESS-DATE-YYYYMMDD-FMT     PIC XXXXBXXBXX.
           05 WS-BUSINESS-TIME-FMT              PIC 99B99B99.
           05 WS-BUSINESS-DATE-YYYYMM           PIC 9(6).

      *********************************************************
      * CURRENT DATE WORK FIELDS                              *
      *********************************************************
       01  WS-CURRENT-DATE-WORK-FIELDS.
           05 WS-CURRENT-DATE-CYYDDD           PIC 9(6).
           05 FILLER REDEFINES WS-CURRENT-DATE-CYYDDD.
              10 FILLER                        PIC 9(1).
              10 WS-CURRENT-DATE-YYDDD         PIC 9(5).

           05 WS-CURRENT-DATE-YYYYDDD          PIC 9(7).

           05 WS-CURRENT-DATE-CMMDDYY          PIC 9(7).
           05 FILLER REDEFINES WS-CURRENT-DATE-CMMDDYY.
              10 FILLER                        PIC 9(1).
              10 WS-CURRENT-DATE-MMDDYY        PIC 9(6).

           05 WS-CURRENT-YYYYMMDD-FMT          PIC 9999B99B99.
           05 WS-CURRENT-DATE-YYYYMMDD         PIC 9(8).
           05 FILLER REDEFINES WS-CURRENT-DATE-YYYYMMDD.
              10 WS-CURRENT-DATE-YYYYMMDD-CENT PIC 9(2).
              10 WS-CURRENT-DATE-YYYYMMDD-YY   PIC 9(2).
              10 WS-CURRENT-DATE-YYYYMMDD-MM   PIC 9(2).
              10 WS-CURRENT-DATE-YYYYMMDD-DD   PIC 9(2).
           05 FILLER REDEFINES WS-CURRENT-DATE-YYYYMMDD.
              10 FILLER                        PIC 9(2).
              10 WS-CURRENT-DATE-YYMMDD        PIC 9(6).

      *    ** (-SS = SUNDAY THRU SATURDAY -MS = MONDAY THRU SUNDAY) **
           05 WS-CURRENT-DATE-WEEKDAY-SS       PIC 9(1).
           05 WS-CURRENT-DATE-WEEKDAY-MS       PIC 9(1).
MB0106     05 WS-CURRENT-TS.
MB0106        10 WS-CURRENT-TS-DATE            PIC X(10).
MB0106        10 FILLER                        PIC X(01).
MB0106        10 WS-CURRENT-TS-TIME            PIC X(08).
MB0106        10 FILLER                        PIC X(07).
MB0106     05  WS-CURRENT-GMT.
MB0106         10  WS-GMT-DATE                 PIC X(10).
MB0106         10  FILLER                      PIC X(01).
MB0106         10  WS-GMT-TIME                 PIC X(08).
MB0106         10  FILLER                      PIC X(07).
MB0106     05 WS-POSTING-TIME                  PIC 99B99B99.

      **** (FP COMMON AREA) ****
AA0921     COPY TSFMW250 IN CPYREL.

       01  SETTLEMENT-COMMAREA.
           05 FILLER                   PIC X(4)  VALUE 'FP -'.
           05 SETL-LOC-O               PIC X(6).
           05 SETL-CHK-NR-O.
              10 SETL-CHK-NR-NUM       PIC 9(10).
           05 SETL-PRINTER-FLAG        PIC X     VALUE SPACE.
           05 SETL-SUB-ID              PIC X.
           05 SETL-BALANCE-PARAM-FLAG  PIC X(01).
           05 SETL-CLOSING-PARAM-FLAG  PIC X(01).
           05 SETL-PAYMENT-PARAM-FLAG  PIC X(01).
           05 SETL-BALANCE-REQ-FLAG    PIC X(01).
           05 SETL-CLOSING-REQ-FLAG    PIC X(01).
           05 SETL-PAYMENT-REQ-FLAG    PIC X(01).
           05 FILLER                   PIC X(195) VALUE SPACES.
       01  SETTLEMENT-COMMAREA-RETURN REDEFINES SETTLEMENT-COMMAREA.
           05 SETL-RETURN-ERROR-NUMBER PIC S9(5) COMP-3.
           05 SETL-RETURN-MESSAGE.
CP1011        10 FILLER                PIC X(08).
CP1011        10 SETL-RETURN-CNTL-NR   PIC 9(7).
              10 FILLER                PIC X(205).

       01  SETTLEMENT-DISPLAY-MSG.
           05 FILLER                   PIC X(07)  VALUE '| STL: '.
           05 SETL-DISPLAY-MESSAGE     PIC X(31).


       01  WS-FPLG-COMMAREA.
MP1004     05 WS-FPLG-CA-USILOG     PIC X(0220).
CC040B     05 WS-FPLG-CA-FMLOG      PIC X(2040).

011222*-----------------------------*
011222* COMMAREA FOR TSFMO0TX       *
011222*-----------------------------*
011222 01  WS-TSFMO0TX-COMM-AREA.
011222     05 WS-TSFMO0TX-COMM-PGM          PIC X(08).
011222     05 WS-TSFMO0TX-COMM-PROCESS-TYPE PIC X(01).
011222     05 WS-TSFMO0TX-COMM-FMLOG        PIC X(2040).
011222     05 FILLER                        PIC X(452).

       01  FILLER.
      **** (FILE-RRNS-AND-KEYS) ****
           03 FND-RRN            PIC S9(7) VALUE +0 COMP SYNC.
           03 ORDRFIL-RRN        PIC S9(7) VALUE +0 COMP SYNC.
           03 ORDRPTR-RRN        PIC S9(7) VALUE +0 COMP SYNC.
           03 SVC-RRN            PIC S9(7) VALUE +0 COMP SYNC.
           03 FMLOG-RRN          PIC S9(7) VALUE +0 COMP SYNC.
           03 DRFTLG1-RRN        PIC S9(7) VALUE +0 COMP SYNC.
           03 PRMLOG-RRN         PIC S9(8) VALUE +0 COMP SYNC.
           03 SAVE-RRN  COMP-3   PIC  9(7) VALUE 0.
           03 SCMSTR-KEY         PIC X(10)   VALUE SPACES.
           03 FILLER       REDEFINES SCMSTR-KEY.
              05 SCM-KEY-ST      PIC XX.
              05 SCM-KEY-NUM     PIC XXX.
              05 FILLER          PIC X(5).
           03 SCMSTR-KEY-TEMP    PIC X(10)   VALUE SPACES.
           03 CDEQUIP-KEY        PIC X(15) VALUE SPACES.
           03 SCFUELP-KEY        PIC X(15) VALUE SPACES.
           03 RATE-KEY-RATE      PIC X VALUE SPACE.
CP1011     03 WS-RRN-MATCHED     PIC 9(7) VALUE ZEROS.
CP1011     03 WRK-RRN            PIC 9(7) VALUE ZEROS.
CP1011     03 FILLER REDEFINES WRK-RRN.
CP1011        05 WRK-RRN-1ST     PIC 9(1).
CP1011        05 FILLER          PIC 9(6).

         01 WS-FF-LOG-RECD         PIC X(341) VALUE SPACES.
         01 FILLER                 REDEFINES WS-FF-LOG-RECD.
           03 FF-LOG-RECD-ID       PIC XX.
           03 FF-LOG-OP-ID         PIC XXXX.
           03 FF-LOG-TERM-ID       PIC XXXX.
           03 FF-LOG-DATE          PIC S9(5) COMP-3.
           03 FF-LOG-TIME          PIC S9(6) COMP-3.
           03 FF-LOG-CHNG-TYPE     PIC XX.
           03 FF-LOG-SC-CODE       PIC X(5).
           03 FILLER.
              05 FF-LOG-DATA-1-FLAG PIC X.
              05 FF-LOG-DATA-1-OLD.
                 07 FILLER           PIC 99V999 COMP-3.
                 07 FILLER           PIC 99V999 COMP-3.
                 07 FILLER           PIC 99V999 COMP-3.
           03 FILLER.
              05 FF-LOG-DATA-2-FLAG PIC X.
              05 FF-LOG-DATA-2-NEW.
                 07 FF-LOG-DATA-2-1  PIC 99V999 COMP-3.
                 07 FF-LOG-DATA-2-2  PIC 99V999 COMP-3.
                 07 FF-LOG-DATA-2-3  PIC 99V999 COMP-3.
       01  FILLER REDEFINES WS-FF-LOG-RECD.
      **** (WS-SETTLE-CANCEL-LOG) ****
           03 FF-SETTLE-CANCEL-ID  PIC XX.
           03 FF-SETTLE-RECD       PIC X(130).
           03 FF-SETTLE-CANCEL-DATE PIC S9(7) COMP-3.
           03 FF-SETTLE-CANCEL-TIME PIC S9(7) COMP-3.
           03 FF-SETTLE-CANCEL-TERMID PIC XXXX.

       01  FILLER.
           05  TST-KEY.
               10  TST-PHONE-NUMBER   PIC 9(10)     VALUE ZERO.
           05 FILLER                  REDEFINES TST-KEY.
              10 TST-KEY-AREA-CODE.
                 15 FILLER             PIC X.
                 15 TST-KEY-AREA-MID   PIC X.
                 15 FILLER             PIC X.
              10 TST-KEY-PREFIX        PIC XXX.
              10 FILLER                PIC X(4).

SB0315     COPY SETINFOC IN CPYREL.
MP0411     COPY BTCHSETC IN CPYREL.
           COPY CSITELGC IN CPYREL.
DR0117     COPY CSTANDC  IN CPYREL.
CP1098     COPY CXXCW0CS IN CPYREL.
SB0513     COPY TSXCW020 IN CPYREL.
           COPY TSFMW667 IN CPYREL.
SB0513     COPY TSFMW030 IN CPYREL.
           COPY TSFMW040 IN CPYREL.
           COPY CXISW001 IN CPYREL.
           COPY DRAFTSC  IN CPYREL.
           COPY DRFTLGC  IN CPYREL.
           COPY CDXLATEC IN CPYREL.
           COPY ZIPXREFC IN CPYREL.
CP0208     COPY UNITMSTC IN CPYREL.
JSH318     COPY SCMSTRC  IN CPYREL.
           COPY SCLOCATC IN CPYREL.
           COPY CXUTW123 IN CPYREL.
      ***** USED BY CUSTID REFORMAT ROUTINE CXUTS200
           COPY CXUTW200 IN CPYREL.
           COPY PROCCTLC IN CPYREL.
           COPY USISET   IN CPYREL.
           COPY BMSATTR  IN CPYREL.
           COPY TIMDAT   IN CPYREL.
           COPY CXXCW013 IN CPYREL.
ED1101     COPY CXACW040 IN CPYREL.
091509***** WORK AREA FOR LINKING TO CREDITL UPDATE, CXACO0UD
091509     COPY CXACW031 IN CPYREL.
ED0102     COPY TSXCW110 IN CPYREL.
ED0102     COPY CXXCW330 IN CPYREL.
ED1203     COPY PRMPINC  IN CPYREL.
ED1203     COPY CXPSW230 IN CPYREL.

******** CHANGE THIS BACK TO USING REAL COPYBOOK NAMES - CSP
CP0208     COPY PRDLMITC IN CPYREL.
CP0208     COPY PRDUSEDC IN CPYREL.

JS0604     COPY PRODCODC IN CPYREL.
ED0406     COPY TSFMW230 IN CPYREL.
MN0207     COPY CXXCW052 IN CPYREL.
102810***** PRODUCT CONTROL RECORD
MB0715     COPY XCPRODCC IN CPYREL.

       01  WS-HOLD-SC-RECORD.
           05 WS-HOLD-SC-RECORD-KEY       PIC X(010).
           05 FILLER                      PIC X(281).
           05 WS-HOLD-SC-COST-PLUS-FLAG   PIC X(001).
CP0400     05 FILLER                      PIC X(142).
CP0400     05 WS-HOLD-SC-SETTLE-PMT-CYC   PIC X(001).
CP0400     05 FILLER                      PIC X(015).
CP0400     05 WS-HOLD-SC-SETTLE-PMT-METH  PIC X(002).
CP0400     05 FILLER                      PIC X(569).
           COPY CDADDRC.
           COPY CDEQUIPC.
           COPY SCFUELPC.
091509****** DB2 CREDITL TABLE
SR0119     COPY DCREDITL.
091509****** DB2 GLOBAL CREDIT TABLE
SR0119     COPY DCRDLMTS.
091509***** WORK AREA FOR LINKING TO CREDLOD REPLACEMENT, CXACO0LD
           COPY CXXCW002.
           COPY CXXCW003.
           COPY ORDRFILC.
MN1108     COPY CDCORDFL.
           COPY ORDRPTRC.
           COPY CDCORDPT.
CP1211     COPY CXUTW400.
MP1004     COPY FPDLGC.
           COPY CXORW002.
MN1108     COPY CDCORDFL.
           COPY CXORW003.
           COPY OPACDATA.
           COPY OPACSF1C.
DR0422     COPY PRMCARDC IN CPYUAT.
       01  WS-HOLD-PRM-CARD-RECORD     PIC X(590).
SB0514     COPY PRMINFOC.
           COPY PRMXREFC.
080116     COPY CDNCUSTC.
BW0211     COPY CODESC.
           COPY DSMSTRC.
102810***** CROSS REF FROM CARD TO DSMSTR
102810     COPY DSCARDC.
           COPY DSTRANC.
           COPY TSDSW010.
AA0921     COPY CARDNETC IN CPYREL.
022112     COPY CXXCW001.
           COPY PRMDLXFC.
KB0408     COPY TSFMW001.
DR0422     COPY PRMRLOGC IN CPYREL.
           COPY POMSTRC.
011222     COPY FMLOG2C IN CPYREL.

DR0422     COPY PRDDISC IN CPYREL.

CC040B 01  WS-HOLD-FMLOG                       PIC X(2040).

           COPY FMPOMSTC.
           COPY FMPOOLC.
JS1111     COPY CXXCW0CL.
           COPY CXITW001.
           COPY CDREPRTC.
           COPY CXORW001.
           COPY SCSTATEC.
CC0502     COPY OTHFUELC.
MP1011     COPY TSFMW0SO.
DR0817     COPY FMRELATC.
JS0206     COPY PRDFMRMC.
JS0206     COPY PRDCUSTC
JS0206               REPLACING ==:PRDCUST:==     BY ==PRDCUST==
JS0206                         ==:PRDCST:==      BY ==PRDCST==.
JS0206     COPY PRDSCMMC
JS0206               REPLACING ==:PRDSCMM:==     BY ==PRDSCMM==
JS0206                         ==:PRDSCM:==      BY ==PRDSCM==.
           COPY TSMMW003.
ED0906     COPY TSXCW005.
013015     COPY TSXCW007 REPLACING ==:PREF:==
013015                                    BY ==S007-==.
      ***** WORK AREA FOR CALL TO TSXCS050
021908     COPY TSXCW050.
      *****  USED TO LINK TO CXXCO0FC, IRIS FRAUD DETECT PROCESSING
MN0814     COPY CXXCW170.
080210*****  ATMW- WORK AREA
BW0211     COPY CXPSW080.
080210*****  COUNTRY CODE CONVERSION RECORD LAYOUT
080210     COPY CNTRY2C.
102810*****  COMMAREA FOR SUBROUTINE TSFMO0LP, FLEET LIMIT PROCESSING
102810     COPY TSFMW0LP.
      *****  USED TO LINK TO TSFMSNPR, NET PRICING FILE INFO
BG0418     COPY TSFMWNPR.
      *****  USED TO LINK TO TSFMO0GD, GET DISCOUNT CALC INFO
DR0422     COPY TSFMW270 IN CPYREL.
      *****  USED TO LINK TO TSFMO0CD, CALCULATE DISCOUNT ROUTINE
DR0422     COPY TSFMW285 IN CPYREL.
MB0114*****  USED TO LINK TO TSFMO0CT, CANADIAN TAXES
030114     COPY TSFMW290.

      **** (RECORD LAYOUT FOR THE INTRA-DAY MESSAGE) ****
       01  INTRA-DAY-ERROR-LAYOUT.
           05 FILLER                           PIC X(02) VALUE '1E'.
           05 IDEL-ACCOUNT-CODE                PIC X(05).
           05 IDEL-UNIT-NUMBER                 PIC X(06).
           05 IDEL-LOCATION-CODE               PIC X(05).
           05 IDEL-LOCATION-NAME               PIC X(15).
           05 IDEL-LOCATION-CITY               PIC X(12).
           05 IDEL-LOCATION-STATE              PIC X(02).
           05 IDEL-TRANSACTION-TIME            PIC 9(04).
           05 IDEL-TRIP-NUMBER                 PIC X(10).
           05 IDEL-HUB-READING                 PIC 9(06).
           05 IDEL-CARD-NUMBER                 PIC 9(10).
           05 IDEL-EMPLOYEE-NUMBER             PIC X(16).
           05 IDEL-DL-STATE                    PIC X(02).
           05 IDEL-DL-NR                       PIC X(20).
           05 FILLER                           PIC X(08) VALUE SPACES.
           05 FILLER                           PIC X(02) VALUE '2E'.
           05 IDEL-PO-NUMBER                   PIC X(10).
           05 IDEL-TRAILER-NUMBER              PIC X(10).
           05 IDEL-CUSTOMER-ID                 PIC X(10).
           05 IDEL-TRAILER-HUBX.
              10 IDEL-TRAILER-HUB              PIC 9(6)V9.
           05 IDEL-TRANSACTION-DATE            PIC 9(6).
           05 FILLER                           PIC X(83) VALUE SPACES.
           05 FILLER                           PIC X(02) VALUE '3E'.
           05 IDEL-RETURN-CODE                 PIC 9(05).
           05 IDEL-ERROR-MESSAGE               PIC X(121).

MB0714     COPY FMRACKC.
MB0714     COPY FMRACKHC.
PM0916     COPY SCRACKC.
           COPY SILIMITC.
           COPY TSSIW010.
           COPY CDAUDITC.
           COPY CXZZW460.
      ***** NEXT TWO COPYBOOKS CONTAIN ABEND WORK AREAS
CW1108     COPY CXXCW110.
091211     COPY CXXCW130.
           COPY CXXCW0PL.
082008     COPY CXXCW0PU.

         01 FILLER.
           03 DUP-CONTROL-NR       PIC S9(7) COMP-3 VALUE +0.

           COPY CXXCW038.

       01  FILLER.
      **** (WS-CANCEL-WORK-AREA) ****
           05 WS-CANCEL-AREA.
              10 WS-CANCEL-SC-CODE   PIC X(5).
              10 WS-CANCEL-CARD-NR   PIC X(10).
CP0111        10 WS-CANCEL-TRANS-NR  PIC X(07).
CP1011        10 FILLER REDEFINES WS-CANCEL-TRANS-NR.
CP1011           15 WS-CNL-TRANS-NR-N PIC 9(07).
CP1011        10 FILLER REDEFINES WS-CANCEL-TRANS-NR.
CP1011           15 WS-CNL-TRANS-NR-6 PIC X(06).
CP1011           15 FILLER            PIC X(01).
              10 WS-PC-CANCEL-FLAG   PIC X(01)  VALUE 'N'.
                 88 THIS-IS-A-PC-CANCEL         VALUE 'Y', 'A'.
                 88 THIS-IS-A-ATM-CANCEL        VALUE 'A'.
           05 WS-NW-TS-CODE.
              10 WS-NW-TS-ALP        PIC X(02).
              10 WS-NW-TS-NUM        PIC 9(03).
         01 VCWS-ERROR-IND         PIC X    VALUE 'N'.
           88 VCWS-ERROR                    VALUE 'Y'.
         01 SAVE-OPERATOR-INFO.
            03 FILLER              PIC X    VALUE SPACE.
            03 FILLER              PIC 9(3) VALUE ZEROS.
         01 HUB-ERROR-IND          PIC X   VALUE 'N'.
           88 HUB-ERROR-FOUND              VALUE 'Y'.

         01 FILLER.
            03 WS-DEEDIT-QTYX.
               05 WS-DEEDIT-QTY        PIC 9(7)V99.
            03 WS-DEEDIT-QTY-NO-DECX.
               05 WS-DEEDIT-QTY-NO-DEC PIC 9(7).
            03 WS-DEEDIT-COSTX.
               05 WS-DEEDIT-COST       PIC 9(7)V99.
            03 WS-DEEDIT-PPUX.
               05 WS-DEEDIT-PPU        PIC 9(2)V9(3).
            03 WS-DEEDIT-HUBX.
               05 WS-DEEDIT-HUB        PIC 9(7)V9.

           03 INP-CO-SMLNAME           PIC X(7).
           03 INP-AUTH-NR              PIC XXXX.
           03 WS-WORK-PHONE-NR.
              05 DPH-AREA              PIC XXX.
              05 DPH-EXCH              PIC XXX.
              05 DPH-NR                PIC XXXX.
           03 WS-WORK-PROD-AMT         PIC S9(7)V99   VALUE +0.
           03 WS-WORK-PROD-AMT-SC      PIC S9(7)V99   VALUE +0 COMP-3.
           03 WS-WORK-PROD-AMT-US      PIC S9(7)V99   VALUE +0 COMP-3.
           03 INP-NR-GALLONS           PIC 9(7)V99    VALUE 0.
           03 INP-PRICE-GALLON         PIC 9(2)V9(3)  VALUE 0.
           03 INP-TOTAL-COST           PIC 9(7)V99    VALUE 0.
           03 INP2-NR-GALLONS          PIC 9(7)V99    VALUE 0 COMP-3.
           03 INP2-PRICE-GALLON        PIC 9(2)V9(3)  VALUE 0 COMP-3.
           03 INP2-TOTAL-COST          PIC 9(7)V99    VALUE 0 COMP-3.
           03 INP3-NR-GALLONS          PIC 9(7)V99    VALUE 0 COMP-3.
           03 INP3-PRICE-GALLON        PIC 9(2)V9(3)  VALUE 0 COMP-3.
           03 INP3-TOTAL-COST          PIC 9(7)V99    VALUE 0 COMP-3.
           03 WS-PROD-BILL-FLAG        PIC X(1)     VALUE SPACE.
           03 INP-PROD-BILL-1          PIC X(1)     VALUE SPACE.
           03 INP-PROD-BILL-2          PIC X(1)     VALUE SPACE.
           03 INP-PROD-BILL-3          PIC X(1)     VALUE SPACE.
           03 WORK-PROD-CODE.
              05 WORK-PROD-CODE-CHAR OCCURS 2 TIMES PIC X.
           03 WORK-PROD-CODE-NUM REDEFINES WORK-PROD-CODE PIC 9(2).
           03 WORK-PROD-DESC           PIC X(14).
SB0814     03 HOLD-WORK-PROD-CODE      PIC X(02).
SB0914     03 WS-PUR-CATEGORY          PIC X(05).
091614     03 WS-DEFAULT-MAX-QTY       PIC 9(5) COMP-3 VALUE 99999.
100914     03 WS-UNITGRP-NR-10.
100914        05 FILLER                   PIC X(04).
100914        05 WS-UNITGRP-NR-5-10       PIC X(06).

      **** (THE RATE  FIELDS IS THE COMPANY BASE CURRENCY) ****
      **** (THE RATE2 FIELDS IS THE SC           CURRENCY) ****
      **** (THE RATE2 FIELDS IS US               CURRENCY) ****
082008     03 WS-ADVANCE-RATE           PIC S9(5)V99  COMP-3 VALUE +0.
082008     03 WS-ADVANCE-RATE2          PIC S9(5)V99  COMP-3 VALUE +0.
082008     03 WS-ADVANCE-RATE3          PIC S9(5)V99  COMP-3 VALUE +0.
082008     03 WS-TOTAL-RATE             PIC S9(5)V99  COMP-3 VALUE +0.
082008     03 WS-TOTAL-RATE2            PIC S9(5)V99  COMP-3 VALUE +0.
082008     03 WS-TOTAL-RATE3            PIC S9(5)V99  COMP-3 VALUE +0.
082008     03 WS-FUEL-RATE              PIC S9(5)V99  COMP-3 VALUE +0.
082008     03 WS-FUEL-RATE2             PIC S9(5)V99  COMP-3 VALUE +0.
082008     03 WS-FUEL-RATE3             PIC S9(5)V99  COMP-3 VALUE +0.
           03 WS-PPRIDE-TRANSFER-PPG    PIC S9(2)V999 COMP-3 VALUE ZERO.
           03 WS-PPRIDE-MARKUP-SC       PIC S9(2)V999 COMP-3 VALUE ZERO.
082008     03 WS-CO-FUEL-RATE-REDUCTION PIC S9(5)V99  COMP-3 VALUE ZERO.
082008     03 WS-BASE-ADVANCE-RATE      PIC S9(5)V99  COMP-3 VALUE ZERO.
082008     03 WS-MIXED-ADVANCE-RATE     PIC S9(5)V99  COMP-3 VALUE ZERO.
           03 CHECK-WORK                PIC 9(10) VALUE 0.
           03 FILLER               REDEFINES CHECK-WORK.
             05 HI-CHECK-DIGITS         PIC 9(9).
             05 LOW-CHECK-DIGIT         PIC 9.
           03 WS-CHECK-WORK             PIC 9(9).
           03 WS-CHECK-HOLD             PIC 9(10).
           03 WS-CALC-CHECK-DIGIT       PIC 9.

           03 INP-DISC.
082008       05 INP-F-SRVC-DISC    PIC  9(5)V99.
082008       05 INP-S-SRVC-DISC    PIC  9(5)V99.
           03 PC-NAME-CONSTRUCT.
             05 FILLER             PIC X(5) VALUE 'UNIT '.
             05 PC-NAME-UNIT       PIC X(10) VALUE SPACES.
             05 FILLER             PIC X VALUE SPACES.
             05 PC-NAME-MESSAGE    PIC X VALUE SPACES.
             05 FILLER             PIC X(12) VALUE SPACES.

           03 INP-COMMON-AREAS.
JS1203       05 INP-CO-CODE        PIC  X(05).
             05 INP-COMMON-DATA.
               07 FILLER           PIC X(8).
               07 FILLER.
                  09 FILLER         PIC XX.
                  09 FILLER         PIC 999.
               07 FILLER           PIC X.
               07 FILLER           PIC X(10).

DR0121     COPY CXPSW351 IN CPYREL.
DR0422*    COPY TSXCW041 IN CPYREL.
DR0422     COPY CXXCW0LE IN CPYUAT.
CW1108     COPY TSFMW210.
CW1108     COPY CXPSW352.
MP1204     COPY TSFMW673.
CP0807*****CONTAINS UNITMST-CHANGE-RECORD
CP0208     COPY TSFMW181.

SB0114*****CONTAINS WS-USER-INPUT-WORK-AREA
           COPY TSFMW280.
SB0114*****SAVE AREA FOR ORIGINAL UIWA AREA
SB0114 01 WS-ORIG-UIWA-AREA     PIC X(1500).
SB0114*****SAVE AREA FOR ORIGINAL FMLOG RECORD
SB0114 01 WS-ORIG-FMLOG-AREA    PIC X(2040).

       01  UNFORMATTED-AREA-DEF   PIC X(15)  VALUE '**UNFORMATTED**'.
082008***** INCREASED BECAUSE OF FIELDS ADDED TO COPYBOOK CXPSW351
BW0211***** INCREASED BECAUSE OF FIELDS ADDED TO COPYBOOK TSXCW030
DR0121 01  UNFORMATTED-LENG       PIC S9999   VALUE +2466  COMP.
DR0121 01  UNFORMATTED-AREA       PIC X(2452).

       01  FILLER                 REDEFINES UNFORMATTED-AREA.
           03 FILLER                PIC XXXX.
           03 INP-PC-ZON-OVERLAY.
             05 INP-PC-ZON-VER-FLAG PIC X.
DR0121       05 INP-PC-ZON-TRAILER  PIC X(2447).

       01  FILLER REDEFINES UNFORMATTED-AREA.
           03 UNF-PGRM-NAME        PIC XX.
           03 FILLER               PIC X.
DR0121     03 INP-NP-DATA          PIC X(2449).

CP1011***** CHANGED TO ALLOW EITHER 6 DIGIT OR 7 DIGIT CONTROL NUMBER
CP1011***** TO BE ENTERED ON THE CANCEL REQUEST
      **** (FP CANCEL AREA) ****
       01  WS-INP-FP-CANCEL.
              05 FILLER                PIC X(3).
              05 FP-CANCEL-REQ         PIC X(7) VALUE 'CANCEL '.
CP1011        05 FPCR-CTLNR-CARD.
CP1011           10 FPCR-CTL-6         PIC 9(6).
CP1011           10 FILLER REDEFINES FPCR-CTL-6.
CP1011              15 FPCR-CTL-6X     PIC X(6).
CP1011           10 FILLER             PIC X.
CP1011           10 FPCR-CTL6-CARD     PIC X(16).
CP1011           10 FILLER             PIC X.
CP1011        05 FILLER REDEFINES FPCR-CTLNR-CARD.
CP1011           10 FPCR-CTL-7         PIC 9(7).
CP1011           10 FILLER             PIC X.
CP1011           10 FPCR-CTL7-CARD     PIC X(16).

CP1011 01  WS-FP-CANCEL-CTL            PIC 9(7).
CP1011 01  FILLER REDEFINES WS-FP-CANCEL-CTL.
CP1011     05 WS-FP-CANCEL-CTL1        PIC X.
CP1011     05 WS-FP-CANCEL-CTLX        PIC X(6).

CP1011 01  WS-INP-FP-CANCEL-CARD.
             05 FP-CANCEL-CARD         PIC X(16).
             05 FP-CANCEL-COMMON REDEFINES FP-CANCEL-CARD.
                07 FP-CANCEL-CO-CODE.
                   09 FP-CANCEL-CO-CODE-N PIC 9(4).
                07 FP-CANCEL-ID-NR.
                   09 FILLER              PIC X(7).
                   09 FP-CANCEL-4-CHECK   PIC X.
                07 FILLER                 PIC X(4).
             05 FILLER REDEFINES FP-CANCEL-COMMON.
                07 FP-CANCEL-CO-CODE-5.
                   09 FP-CANCEL-CO-CODE-5-N PIC 9(5).
                07 FP-CANCEL-ID-NR-5.
                   09 FILLER                PIC X(7).
                   09 FP-CANCEL-5-CHECK     PIC X.
                07 FILLER                 PIC X(3).

SB0114* THE 88 LEVELS UNDER WS-XTN-REQUEST-FLAG HAVE BEEN MOVED TO
SB0114* THE WS-USER-INPUT-WORK-AREA IN COPYLIB TSFMW280
       01  WS-XTN-REQUEST-AREA.
           03 WS-XTN-REQUEST-FLAG  PIC X VALUE SPACES.
SB0114*      88 THIS-BE-A-PC-REQUEST      VALUES '+' '$' '#' '!' '?'
SB0114*                                          '%' '&' '(' ')' '*'
SB0114*                                          '>' ',' '.' '^' '<'
SB0114*                                          '\' '|' '['.
SB0114*      88 THIS-BE-AN-AUTOMATED-REQ  VALUES '$' '!' '%' '&' '('
SB0114*                                          ')' '*' '?' ',' '.'
SB0114*                                          '^' '<' '\' '|' '['.
SB0114*      88 THIS-BE-A-SETTLEMENT-REQUEST   VALUE '-'.
SB0114*      88 THIS-BE-A-CANCEL-REQUEST       VALUE '@'.
SB0114*      88 THIS-IS-A-CANCEL-REQ           VALUE 'C'.
SB0114*      88 THIS-IS-A-CANCEL-XTN           VALUE '@' 'C'.
SB0114*      88 THIS-BE-A-VRU-XTN              VALUE '#' '>' '\'.
SB0114*      88 THIS-BE-A-REAL-VRU-XTN         VALUE '#' '>'.
SB0114*      88 THIS-BE-A-VRU-EXPRESS-CASH     VALUE '#'.
SB0114*      88 THIS-BE-A-VRU-CASH-ON-CARD     VALUE '>'.
SB0114*      88 THIS-BE-A-RESTORE-REQUEST      VALUE '='.
SB0114*      88 THIS-BE-A-BATCHED-REQUEST      VALUE '&'.
SB0114*      88 THIS-BE-A-NATS-AUTH            VALUE '*'.
SB0114*      88 THIS-BE-AN-AUTO-GAS-PRE-AUTH   VALUE '!'.
SB0114*      88 THIS-BE-AN-AUTO-GAS-AUTH       VALUE '%'.
SB0114*      88 THIS-BE-AN-AUTO-GAS-XTN        VALUE '!' '%'.
SB0114*      88 THIS-BE-AN-IOL-PRE-AUTH        VALUE '('.
SB0114*      88 THIS-BE-AN-IOL-AUTH            VALUE ')'.
SB0114*      88 THIS-BE-AN-IOL-XTN             VALUE '(' ')'.
SB0114*      88 THIS-BE-A-SMART-FUEL-PRE-AUTH  VALUE ','.
SB0114*      88 THIS-BE-A-SMART-FUEL-AUTH      VALUE '.'.
SB0114*      88 THIS-BE-A-SMART-FUEL-XTN       VALUE '.'.
SB0114*      88 THIS-BE-A-PRODUCT-PRE-AUTH     VALUE '['.
SB0114*      88 THIS-BE-AN-UNATTENDED-PRE-AUTH VALUE '!' '(' ',' '['.
SB0114*      88 THIS-BE-AN-UNATTENDED-AUTH     VALUE '%' ')' '*' '.'
SB0114*                                              '^' '<'.
SB0114*      88 THIS-BE-AN-UNATTENDED-XTN      VALUE '!' '(' '%' ')'
SB0114*                                              '*' ',' '.' '^'
SB0114*                                              '<' '['.
SB0114*      88 THIS-BE-A-NO-VERIFY-XTN        VALUE '|'.
SB0114*      88 THIS-BE-AN-ATM-XTN             VALUE '?'.
SB0114*      88 THIS-BE-AN-ATM-CANCEL          VALUE '~'.
SB0114*      88 THIS-BE-A-PETRO-RECEIVABLE     VALUE '^'.
SB0114*      88 THIS-BE-A-FLEET-XTN            VALUE '<'.
SB0114*      88 THIS-BE-A-EMAIL-XTN            VALUE '\'.
SB0114*      88 THIS-BE-A-CARD-NR              VALUE '0' THRU '9'.
SB0114*      88 FPM-REBUILD                    VALUE 'R'.
SB0114*      88 FPM-OPEN                       VALUE 'O'.
           03 WS-XTN-TYPE-FLAG       PIC X(01) VALUE SPACES.
              88 WS-XTN-TYPE-LARGE-AMT         VALUE 'L'.

       01  WS-AUTOMATED-INPUT-AREA.
             05 INP-PC-XTN-REQUEST   PIC X(01).
             05 INP-PC-CARD-NR       PIC X(16).
             05 INP-PC-UNIT          PIC X(6).
             05 INP-PC-TS-CODE       PIC X(5).
             05 INP-PC-GALLONS       PIC 999V99.
             05 INP-PC-TOTAL         PIC 999V99.
             05 INP-PC-INVOICE       PIC X(8).
             05 INP-PC-TRIP-NR       PIC X(10).
             05 INP-PC-TR-GALS       PIC 999V99.
             05 INP-PC-TR-PPG        PIC 99V999.
             05 INP-PC-TR-COST       PIC 999V99.
             05 INP-PC-OIL-QTS       PIC 99.
             05 INP-PC-OIL-COST      PIC 999V99.
             05 INP-PC-HUB-READING   PIC 9(6)V9.
             05 INP-PC-HUB-REQ-FLG   PIC X.
      ****     88 PC-SAYS-HUB-AVAILABLE VALUE '*'.
             05 INP-PC-SPCL-UNIT-NR PIC X(6).
             05 INP-PC-ADV-AMT      PIC 9999V99.
             05 INP-PC-MSG-QUERY    PIC X.
             05 INP-PC-PRINT-REQ    PIC X.
             05 INP-PC-CHECK-NRX.
                10 INP-PC-CHECK-NR  PIC 9(10).
             05 INP-PC-OGALS        PIC 999V99.
             05 INP-PC-OTTL         PIC 999V99.
             05 FILLER              OCCURS 3 TIMES.
                07 INP-PC-PROD-CODE PIC XX.
                07 INP-PC-PROD-AMT  PIC XXXXXX.
                07 INP-PC-PROD-AMTN REDEFINES INP-PC-PROD-AMT
                                    PIC 9(4)V99.
             05 INP-PC-DL-NR        PIC X(20).
             05 INP-PC-DL-ST        PIC XX.
             05 INP-PC-ITTL         PIC 9999V99.
             05 INP-PC-CARD-EXP-DATE PIC X(4).
             05 FILLER              PIC X(26).
      * SUB-ID IS IN SRVC-TYPE
             05 INP-PC-SRVC-TYPE    PIC X.
             05 FILLER                     PIC X.
                88 PC-HAS-ATTACHED-PRINT   VALUE '2'.
             05 INP-PC-TRAILER-NR   PIC X(10).
             05 INP-PC-TRAILER-HUB  PIC 9(06)V9.
             05 INP-PC-PURCHASE-ORDER-NR  PIC X(10).
             05 INP-PC-DRIVER-NR          PIC X(10).
             05 INP-PC-NR1-GALS           PIC 9(3)V99.
             05 INP-PC-NR1-COST           PIC 9(3)V99.
             05 INP-PC-SWIPED-KEYED       PIC X(1).
             05 INP-PC-SC-SECU-CARD-INFO.
                10 FILLER                 PIC X(06).
                10 INP-PC-SC-SECU-CARD    PIC X(10).
             05 INP-PC-SC-SECU-PIN        PIC 9(4).
             05 INP-PC-CANADIAN-TAX       PIC 9(3)V99.
             05 INP-PC-BATCH-PROCESS-DATE PIC 9(6).
             05 INP-PC-NATS-INFO.
                10 INP-PC-NATS-PRICES OCCURS 6 TIMES.
                   15 INP-PC-NATS-PROD-CODE  PIC X(3).
                   15 INP-PC-NATS-PUMP-FEE   PIC 9(4)V99.
                   15 INP-PC-NATS-PUMP-SIGN  PIC X(1).
                   15 INP-PC-NATS-DISC-PG    PIC 9(4)V999.
                   15 INP-PC-NATS-DISC-SIGN  PIC X(1).
                   15 INP-PC-NATS-DISC-EXT   PIC 9(5)V99.
                   15 INP-PC-NATS-DISC-E-SIGN PIC X(1).
                10 INP-PC-NATS-POS-FLAG   PIC X(1).
CP1011          10 INP-PC-NATS-CTL-NR     PIC 9(7).
                10 INP-PC-NATS-FEE        PIC 9(2)V99.
                10 INP-PC-NATS-PRE-AUTH-DATE PIC 9(5).
                10 INP-PC-NATS-PRE-AUTH-SEQ  PIC 9(7).
                10 INP-PC-NATS-AUTH-NR    PIC 9(10).
             05 INP-PC-TRAILER-HRS        PIC 9(5)V9.
             05 INP-PC-IOL-RCP            PIC 9V9(05).
             05 INP-PC-DEVICE-TYPE        PIC X(4).
JS1199       05 INP-PC-MASTER-CARD.
JS1199          10 INP-PC-FLEET-PROD      PIC 9(5).
JS1199          10 INP-PC-FLEET-DATE-ORIG PIC X(10).
JS1199          10 INP-PC-FLEET-NAME      PIC X(30).
JS0600          10 INP-PC-FLEET-ADDR      PIC X(30).
JS1199          10 INP-PC-FLEET-CITY      PIC X(13).
JS1199          10 INP-PC-FLEET-STATE     PIC X(02).
JS0600          10 INP-PC-FLEET-ZIP       PIC X(10).
JS1199          10 INP-PC-FLEET-AMT-ORIG  PIC 9(05)V99.
JS1199          10 INP-PC-FLEET-KEY       PIC X(32).
JS1199          10 INP-PC-FLEET-XTN-DATE  PIC 9(06).
JS0300          10 INP-PC-FLEET-XTN-TIME  PIC 9(06).
JS0401       05 INP-PC-UNIT-EXPANDED      PIC X(10).
CC0502       05 INP-PC-SC-CITY              PIC X(20).
CC0502       05 INP-PC-SC-STATE             PIC X(02).
CC0502       05 INP-PC-SC-ZIP               PIC X(10).
CC0502       05 INP-PC-FUELING-DATE         PIC 9(06).
CC0502       05 INP-PC-FUELING-TIME         PIC 9(06).
CC0502       05 INP-PC-OTHER-FUEL-TYPE      PIC X(03).
CC0502       05 INP-PC-USFLEET-MISC-NR      PIC X(09).
CC0502       05 INP-PC-PROD-9-TYPE-1        PIC X(03).
CC0502       05 INP-PC-PROD-9-TYPE-2        PIC X(03).
CC0502       05 INP-PC-PROD-9-TYPE-3        PIC X(03).
CC0502       05 INP-PC-BASE-PPG             PIC 9(02)V999.
CC0502       05 INP-PC-DELIVERY-FEE-PPG     PIC 9(02)V999.
CC0502       05 INP-PC-TOTAL-TAX-PPG        PIC 9(02)V999.
CC0303       05 INP-PC-SYSTEM-ID            PIC 9(04).
CC0303       05 INP-PC-RECV-DATE            PIC X(10).
CC0303       05 INP-PC-TASK-NR              PIC 9(09).
CP0406       05 INP-PC-NR2-SUB-PROD         PIC X(15).
CP0406       05 INP-PC-RFR-SUB-PROD         PIC X(15).
CP0406       05 INP-PC-OTH-SUB-PROD         PIC X(15).
CP0406       05 INP-PC-NR1-SUB-PROD         PIC X(15).
MN0207       05 INP-PC-PR1-SUB-PROD-CODE    PIC X(15).
MN0207       05 INP-PC-PR2-SUB-PROD-CODE    PIC X(15).
MN0207       05 INP-PC-PR3-SUB-PROD-CODE    PIC X(15).
MN0207       05 INP-AUTH-1-PROD-CODE        PIC X(02).
MN0207       05 INP-AUTH-2-PROD-CODE        PIC X(02).
MN0207       05 INP-AUTH-3-PROD-CODE        PIC X(02).

      **** (SETTLEMENT REQUEST INPUT AREA) ****
       01  WS-SETTLEMENT-INPUT-AREA.
           03 FILLER              PIC X(4).
           03 INP-SETTLE-TS-CODE  PIC X(6).
           03 INP-SET-CHECK       PIC 9(10).
           03 INP-INVOICE         PIC X(8).
           03 FILLER REDEFINES INP-INVOICE.
              05 INP-SETTLE-PRINTER-FLAG  PIC X(1).
              05 FILLER           PIC X(7).
           03 INP-AMOUNT          PIC 9(7)V99.
           03 FILLER              PIC X(1024).

       01  WS-INP-CANCEL-AREA.
      **** (UNFORMATTED-AREA-RCNCL) ****
           03 FILLER              PIC X(4).
           03 FILLER              PIC X(1).
           03 INP-CANCEL-AREA.
              05 FILLER              PIC X(5).
              05 FILLER              PIC X(10).
              05 FILLER              PIC 9(06).
           03 FILLER              PIC X(1035).

       01  WS-OL-PT-AREA.
           03 OL-PT-AMOUNT         PIC 9(4)V99.
           03 OL-PT-CHECK-NR       PIC 9(10).
           03 OL-PT-MESSAGE-FLAG   PIC X.

      *---------------------------------------------------*
      * IOL PRE AUTH INPUT/OUTPUT AREA.                   *
      *---------------------------------------------------*
       01  WS-IOL-PRE-AUTH-AREA.
           03 FILLER                  PIC X(4).
           03 WS-IOL-PRE-AUTH-DATA.
              05 WS-IOL-SC-CODE       PIC X(05).
              05 WS-IOL-CARD-NR       PIC X(16).
              05 WS-IOL-FUEL-TYPE     PIC X(01).
                 88 WS-IOL-FUEL-TYPE-IS-TRACTOR    VALUE 'T'.
                 88 WS-IOL-FUEL-TYPE-IS-TRAILER    VALUE 'R'.
ED0899        05 WS-IOL-PRODUCT-CODE  PIC 9(08).
              05 WS-IOL-MAX-LITERS-IN PIC 9(03)V99.
              05 WS-IOL-PPL           PIC 9(01)V999.
              05 WS-IOL-DRIVER-NUMBER PIC X(16).
              05 WS-IOL-UNIT-NUMBER   PIC X(12).
              05 WS-IOL-HUB-READING   PIC 9(07).
              05 WS-IOL-TRIP-NUMBER   PIC X(12).
              05 WS-IOL-PIN-NUMBER    PIC X(04).
              05 WS-IOL-PO-NUMBER     PIC X(10).
              05 WS-IOL-LANGUAGE-IND  PIC X(01).
              05 WS-IOL-RCP           PIC 9V9(05).

       01  WS-IOL-PRE-AUTH-RESP.
           05 WS-IOL-RETURN-CODE      PIC 9(05).
           05 WS-IOL-RETURN-MESSAGE   PIC X(80).
           05 WS-IOL-ACCOUNT-CODE     PIC X(05).
           05 WS-IOL-MAX-LITERS       PIC 9(03)V99.
           05 WS-IOL-FUNDED-FLAG      PIC X(01).
           05 WS-IOL-AUTH-NUMBER-01   PIC 9(06).
           05 WS-IOL-AUTH-NUMBER-02   PIC 9(06).

         01 TERMINAL-OUTPUT-AREA.
           03 3270-CTRL.
              05 FILLER             PIC S9(8) COMP VALUE +12738833.
              05 FILLER             PIC X(208) VALUE SPACES.
           03 FILLER               REDEFINES 3270-CTRL.
              05 3270-SBA           PIC X.
              05 FILLER             PIC XX.
              05 3270-SBA-1         PIC X.
              05 FILLER             PIC X(208).
           03 FILLER               REDEFINES 3270-CTRL.
              05 FILLER             PIC X(3).
              05 3270-OUTPUT-DATA   PIC X(209).


       01  BATCH-RECORD-OUTPUT-AREA.
           05 BR-CONTROL-NR        PIC S9(7) COMP-3.
           05 BR-MESSAGE           PIC X(277).

       01  AUTO-GAS-OUTPUT-AREA.
           05 AG-ERROR-NUMBER     PIC S9(5) COMP-3.
           05 AG-ERROR-NUMBER-2   PIC 9(5)   VALUE 99999.
           05 AG-RESPONSE-FLAGS   PIC 9(16)  VALUE ZEROES.
           05 AG-MESSAGE.
              10 FILLER           PIC X(40)  VALUE SPACES.
              10 FILLER           PIC X(40)  VALUE SPACES.

       01  FILLER.
      **** (AUTOGAS WORK FIELDS          ) ****
      **** (THE FOLLOWING WS-AUTO-GAS-AVAIL FIELDS ARE FOR) ****
      **** (       1....FP LIMIT         ) ****
      **** (       2....FP TRIP ALLOWANCE) ****
      **** (       3....CARD LIMITS      ) ****
      **** (       4....CARD BALANCE     ) ****
      **** (     OIL....OIL DOLLAR LIMITS) ****
MN0407**** (     PURC...PURCHASE AMOUNT  ) ****
           05 WS-AUTO-GAS-AVAILX.
              10 WS-AUTO-GAS-AVAIL   PIC 9(5)V99 VALUE ZERO.
           05 WS-AUTO-GAS-AVAIL2     PIC 9(5)V99 VALUE ZERO.
           05 WS-AUTO-GAS-AVAIL3     PIC 9(5)V99 VALUE ZERO.
102510     05 WS-AUTO-GAS-AVAIL4     PIC S9(6)V99 VALUE ZERO.
           05 WS-AUTO-GAS-AVAIL-OIL  PIC 9(5)V99 VALUE ZERO.
MN0407     05 WS-AUTO-GAS-AVAIL-PURC PIC 9(5)V99 VALUE ZERO.

      **** (THE FOLLOWING IS THE QTY ALLOWED FOR THE SELECTED PROD) ****
      **** (IT WILL BE USED FOR AUTO-GAS ONLY                     ) ****
           05 WS-AUTO-GAS-AVAIL-QTYX.
              10 WS-AUTO-GAS-AVAIL-QTY     PIC 9(5)V99 VALUE ZERO.

      *** (THE FOLLOWING IS THE QTY OR AMT ALLOWED FOR EACH PRODUCT) ***
           05 WS-AUTO-GAS-AVAIL-ALL.
              10 WS-AUTO-GAS-AVAIL-QTY-NR2 PIC 9(5)V99 VALUE ZERO.
              10 WS-AUTO-GAS-AVAIL-QTY-NR1 PIC 9(5)V99 VALUE ZERO.
              10 WS-AUTO-GAS-AVAIL-QTY-REF PIC 9(5)V99 VALUE ZERO.
              10 WS-AUTO-GAS-AVAIL-QTY-OTH PIC 9(5)V99 VALUE ZERO.
              10 WS-AUTO-GAS-AVAIL-QTY-OIL PIC 9(5)V99 VALUE ZERO.
              10 WS-AUTO-GAS-AVAIL-AMT-CSH PIC 9(5)V99 VALUE ZERO.
           05 WS-AUTO-GAS-AVAIL-QTY-WRK    PIC 9(5)V99 VALUE ZERO.
102810     05 WS-SP14-REPLY.
             10  WS-SP14-MAX-PUR-AMT      PIC  9(05)V99.
             10  WS-SP14-MAX-PUR-QTY      PIC  9(05)V99.
             10  WS-SP14-MAX-CASH-AVAIL   PIC  9(05)V99.
             10  WS-SP14-MAX-OIL-AMT      PIC  9(05)V99.
             10  WS-SP14-MAX-OIL-QTY      PIC  9(05)V99.
             10  WS-SP14-MAX-NR2-AMT      PIC  9(05)V99.
             10  WS-SP14-MAX-NR2-QTY      PIC  9(05)V99.
             10  WS-SP14-MAX-NR1-AMT      PIC  9(05)V99.
             10  WS-SP14-MAX-NR1-QTY      PIC  9(05)V99.
             10  WS-SP14-MAX-REF-AMT      PIC  9(05)V99.
             10  WS-SP14-MAX-REF-QTY      PIC  9(05)V99.
             10  WS-SP14-MAX-OTH-AMT      PIC  9(05)V99.
             10  WS-SP14-MAX-OTH-QTY      PIC  9(05)V99.
             10  WS-SP14-MAX-PRD-AMT      PIC  9(05)V99.
             10  WS-SP14-PRODUCTS OCCURS 10 TIMES.
               15  WS-SP14-PUR-CATEGORY     PIC  X(05).
               15  WS-SP14-SUB-PROD-CD      PIC  X(03).
               15  WS-SP14-MAX-PROD-AMT     PIC  9(05)V99.
               15  WS-SP14-MAX-PROD-QTY     PIC  9(05)V99.

MN0207 01  WS-AUTO-GAS-PRODUCT-INFO.
MN0207     05 FILLER                    PIC X(1)  VALUE '~'.
MN0207     05 WS-AUTO-GAS-AVAIL-PROD1   PIC X(2)    VALUE SPACES.
MN0207     05 WS-AUTO-GAS-AVAIL-AMT1    PIC 9(5)V99 VALUE ZEROS.
MN0207     05 WS-AUTO-GAS-AVAIL-PROD2   PIC X(2)    VALUE SPACES.
MN0207     05 WS-AUTO-GAS-AVAIL-AMT2    PIC 9(5)V99 VALUE ZEROS.
MN0207     05 WS-AUTO-GAS-AVAIL-PROD3   PIC X(2)    VALUE SPACES.
MN0207     05 WS-AUTO-GAS-AVAIL-AMT3    PIC 9(5)V99 VALUE ZEROS.

       01  FILLER.
      **** (WS-POS-AREA) ****
           03 WS-POS-FLAG          PIC X(01) VALUE 'N'.
              88 THIS-IS-A-POS-TRANS         VALUE 'Y'.
              88 THIS-IS-NOT-A-POS-TRANS     VALUE 'N'.
           03 POS-DRIVER-MESSAGE-AREA.
              10 FILLER            PIC X(18) VALUE
                 'OK: DRV. MSG...>  '.
              10 POS-DRV-MESSAGE   PIC X(80)  VALUE SPACES.
              10 POS-NRM-MESSAGE   PIC X(120) VALUE SPACES.
           03 FILLER.
      *   **** (POS-CUSTOMER-RETURN-AREA) ****
081414        10 POS-CUSTOMER-NRM-MSG  PIC X(413).
              10 POS-CUSTOMER-INFO.
                 15 FILLER             PIC X(6)  VALUE '~CUST:'.
                 15 POS-CUSTOMER-NAME  PIC X(25).
                 15 POS-CUSTOMER-CITY  PIC X(15).
                 15 POS-CUSTOMER-STATE PIC X(02).
MP1004           15 POS-CUSTOMER-ID-X  PIC X(10).
           03 WS-SAVE-PRINTER-FLAG PIC X(1)     VALUE SPACES.
           03 WS-SAVE-POS-SUB-ID   PIC X(1)     VALUE SPACES.
JS0698     03 WS-SAVE-COM-SITE-ACCT PIC X(5)    VALUE SPACES.
           03 WS-SAVE-NAME.
              05 WS-SAVE-NAME-11.
                 10 FILLER         PIC X(5)   VALUE 'UNIT '.
                 10 WS-SAVE-NAME-6 PIC X(10)  VALUE SPACES.
              05 FILLER            PIC X(5)   VALUE ' AND '.
              05 WS-SAVE-NAME-44   PIC X(44)  VALUE SPACES.
           03 FILLER.
      **** (WS-JOIN-FIELDS) ****
              05 WS-FIELD-LEN-1    PIC S9(4)    COMP SYNC.
              05 WS-FIELD-LEN-2    PIC S9(4)    COMP SYNC.
              05 WS-FIELD-LEN-3    PIC S9(4)    COMP SYNC.
              05 WS-FIELD-3        PIC X(3)     VALUE SPACES.
              05 WS-FIELD-20       PIC X(20)    VALUE SPACES.
              05 WS-FIELD-63       PIC X(63)    VALUE SPACES.
              05 WS-FIELD-60       PIC X(60)    VALUE SPACES.
              05 WS-FIELD-83       PIC X(83)    VALUE SPACES.
              05 WS-FIELD-86       PIC X(86)    VALUE SPACES.
              05 WS-FIELD-39       PIC X(39)    VALUE
                 '(FP) CARD & DRIVER LISC MUST BE PRESENT'.
              05 WS-FIELD-125      PIC X(125)   VALUE SPACES.
              05 WS-CHAR-3         PIC X(3)     VALUE '`1C'.
              05 WS-FIELD-50       PIC X(50)    VALUE SPACES.
              05 WS-FIELD-53       PIC X(53)    VALUE SPACES.
              05 WS-FIELD-72       PIC X(72)    VALUE SPACES.
              05 WS-TRY-PO-MSG     PIC X(25)    VALUE
                 '/*(DID YOU ASK FOR PO #)*'.
           03 WS-PO-PROD-CODE.
              05 WS-PO-PROD-CODE-N PIC 9(2).
           03 WS-DATE-1.
              05 WS-MONTH-1        PIC 9(2).
              05 WS-DAY-1          PIC 9(2).
              05 WS-YEAR-1         PIC 9(2).
           03 FILLER REDEFINES WS-DATE-1.
              05 WS-GREG-DATE      PIC 9(6).
              05 FILLER REDEFINES WS-GREG-DATE.
                 10 WS-GREG-MM     PIC 99.
                 10 WS-GREG-DD     PIC 99.
                 10 WS-GREG-YY     PIC 99.
           03 WS-YYMMDD-DATE       PIC 9(6).
           03 FILLER REDEFINES WS-YYMMDD-DATE.
              05 WS-YYMMDD-YY      PIC 99.
              05 WS-YYMMDD-MM      PIC 99.
              05 WS-YYMMDD-DD      PIC 99.
           03 WS-DATE-3.
              05 WS-MONTH-3        PIC Z9.
              05 FILLER            PIC X(1)   VALUE '/'.
              05 WS-DAY-3          PIC 9(2).
              05 FILLER            PIC X(1)   VALUE '/'.
              05 WS-YEAR-3         PIC 9(2).
MP1011 01  WS-DATE-S-AREA.
MP1011     05 WS-DATE-S                     PIC 9(8).
MP1011     05 FILLER                        REDEFINES WS-DATE-S.
MP1011        10 WS-DATE-S-CC               PIC 9(2).
MP1011        10 WS-DATE-S-YY               PIC 9(2).
MP1011        10 WS-DATE-S-MM               PIC 9(2).
MP1011        10 WS-DATE-S-DD               PIC 9(2).
MP1011     05 WS-UPDT-FLAG                  PIC X(01) VALUE 'N'.
           03 WS-TIME-1            PIC 9(7).
           03 FILLER REDEFINES WS-TIME-1.
              05 FILLER            PIC X.
              05 WS-HOURS-1        PIC 9(2).
              05 WS-MINUTES-1      PIC 9(2).
              05 WS-SECONDS-1      PIC 9(2).
           03 FILLER REDEFINES WS-TIME-1.
              05 FILLER            PIC X(1).
              05 WS-TIME-4         PIC 9(4).
              05 FILLER            PIC X(2).
           03 WS-TIME-3.
              05 WS-HOURS-3        PIC Z9.
              05 FILLER            PIC X(1)   VALUE ':'.
              05 WS-MINUTES-3      PIC 9(2).
              05 FILLER            PIC X(1)   VALUE ':'.
              05 WS-SECONDS-3      PIC 9(2).
           03 FILLER.
      **** (WS-PT-AREA) ****
              05 WS-PT-AMOUNT         PIC 9(4)V99.
              05 WS-PT-CHECK-NR       PIC 9(10).
              05 WS-PT-MESSAGE-FLAG   PIC X.

       01  WORK-DATE              PIC 9(7).
       01  FILLER REDEFINES WORK-DATE.
           05  FILLER             PIC 9(2).
           05  WORK-DATE-X        PIC 9(5).
       01  WORK-TIME              PIC 9(7).
       01  FILLER REDEFINES WORK-TIME.
           05  FILLER             PIC 9(1).
           05  WORK-TIME-X        PIC 9(5).
           05  FILLER             PIC 9(1).

       01  ATTACHED-PRINT-RESPONSE.
           05  FILLER              PIC X(3)     VALUE '>C<'.
           05  ATT-AUTH-NUMBER     PIC 9(5)     VALUE ZEROES.
           05  FILLER              PIC X(3)     VALUE '`1C'.
           05  ATT-CTL-NUMBER      PIC 9(9)     VALUE ZEROES.
           05  FILLER              PIC X(3)     VALUE '`1C'.
           05  ATT-TOTAL-ORDER-AMT PIC 9(5)V99  VALUE ZEROES.
           05  FILLER              PIC X(3)     VALUE '`1C'.
           05  ATT-INCREMENT-AMT   PIC 9(5)V99  VALUE ZEROES.
           05  FILLER              PIC X(3)     VALUE '`1C'.
           05  ATT-DATE            PIC X(8)     VALUE SPACES.
           05  FILLER              PIC X(3)     VALUE '`1C'.
           05  ATT-TIME            PIC X(8)     VALUE SPACES.
           05  FILLER              PIC X(3)     VALUE '`1C'.
           05  ATT-REMAINDER       PIC X(125)   VALUE SPACES.

CP1011***** FORMAT CHANGED WITH CONTROL NUMBER EXPANSION - BELOW IS NEW
CP1011****  FORMAT WITH "OLD" FORMAT COMMENTED OUT UNDERNEATCH
         01 CHECK-ENTRY-COMMON-AREA.
           03 CHECK-ENTRY-CONTROL  PIC XX VALUE SPACES.
           03 CHECK-NR-AREA.
             05 1ST-10-BYTES.
               07 1ST-10-BYTES-N   PIC 9(10).
             05 2ND-10-BYTES.
               07 2ND-10-BYTES-N   PIC 9(10).
           03 FILLER               REDEFINES CHECK-NR-AREA.
             05 1ST-9-BYTES.
               07 1ST-9-BYTES-N    PIC 9(9).
             05 2ND-9-BYTES        PIC X(9).
             05 FILLER             PIC X(2).
           03 FILLER               REDEFINES CHECK-NR-AREA.
             05 1ST-8-BYTES.
               07 1ST-8-BYTES-N    PIC 9(8).
             05 2ND-8-BYTES        PIC X(8).
             05 FILLER             PIC X(4).
           03 FILLER               REDEFINES CHECK-NR-AREA.
             05 1ST-7-BYTES.
               07 1ST-7-BYTES-N    PIC 9(7).
             05 2ND-7-BYTES        PIC X(7).
             05 FILLER             PIC X(6).
CP1011     03 CHECK-AMOUNT         PIC 9(5)V99 VALUE 0.
           03 FILLER               PIC XX VALUE SPACES.
CP1011     03 CHECK-ENTRY-DATA     PIC X(18) VALUE SPACES.
           03 FILLER               PIC X VALUE SPACES.
CP1011     03 FILLER               PIC X(20) VALUE SPACES.
           03 CHECK-ENTRY-CANADIAN-AMT PIC 9(5)V99.
CP1011     03 FILLER               PIC X(7) VALUE SPACES.
           03 CHECK-ENTRY-TRAN-ID  PIC X(2).
CP1011     03 FILLER               PIC X(4) VALUE SPACES.
           03 CHECK-ENTRY-ONLRCD   PIC X(256) VALUE SPACES.
           03 CHECK-ENTRY-ORDRFIL  PIC X(212) VALUE SPACES.
CP1011     03 FILLER               PIC X(4) VALUE SPACES.

         01 FILLER                 REDEFINES CHECK-ENTRY-COMMON-AREA.
           03 FILLER               PIC XXX.
           03 CHECK-ENTRY-MESSAGE-1 PIC X(39).
           03 FILLER               PIC XXX.
           03 CHECK-ENTRY-MESSAGE-2 PIC X(39).


           EJECT
      ***************************************
      *    C I C S   O U T P U T   A R E A  *
      ***************************************
       01  FILLER.
           03 OUT-COMENT.
             05 OUT-COMENT-1       PIC X(40).
             05 OUT-COMENT-2.
MP1004          06 FILLER          PIC X(60)     VALUE SPACES.
                06 OUT-COMENT-2-E.
                   07 FILLER       PIC X(20).
             05 FILLER             PIC X.
             05 OUT-GOLD-MESSAGE   PIC X(79).
             05 FILLER             REDEFINES OUT-GOLD-MESSAGE.
                06 OUT-NR-GOLD      PIC ZZZ9.
                06 FILLER           PIC X.
                06 OUT-GOLD-GROSS   PIC ZZ,ZZZ.99-.
                06 FILLER           PIC X(64).
082008     03 OUT-NR-GALLONS       PIC Z(5).99.
           03 OUT-PRICE-GALLON     PIC 9.999.
           03 OUT-TOTAL-COST       PIC ZZZZZ.99.

         01 VOICE-RESPONSE-OUTPUT-AREA.
           03 VR-TRANS-ID                  PIC XX.
           03 FILLER                       PIC X.
           03 VR-REQUEST-ID                PIC X.
           03 VR-REQUEST-VERSION           PIC X.
           03 FILLER.
              05 FILLER                    PIC X(6)     VALUE SPACES.
              05 VR-CARD-NUMBER-10         PIC X(10).
           03 VR-TRANS-FLAG                PIC X        VALUE SPACE.
           03 FILLER                       PIC X(7)     VALUE SPACES.
           03 FILLER                       PIC X(7)     VALUE SPACES.
           03 VR-PHONE-LIMIT-FLAG          PIC X        VALUE 'N'.
           03 FILLER                       PIC X(7)     VALUE SPACES.
           03 FILLER                       PIC X(7)     VALUE SPACES.
           03 VR-VRU-CAN-DRAFT             PIC X        VALUE SPACES.
           03 VR-EXPRESS-BALANCE           PIC 9(6)V99  VALUE ZEROES.
           03 VR-EXPRESS-BALANCE-AVAIL     PIC 9(6)V99  VALUE ZEROES.
           03 VR-EXPRESS-BALANCE-CAN       PIC 9(6)V99  VALUE ZEROES.
           03 VR-EXPRESS-BALANCE-AVAIL-CAN PIC 9(6)V99  VALUE ZEROES.
           03 VR-CASH-LIMIT-US             PIC 9(6)V99  VALUE ZEROES.
           03 VR-CASH-LIMIT-CN             PIC 9(6)V99  VALUE ZEROES.
           03 FILLER                       PIC X(59)    VALUE SPACES.
           03 USUAL-FP-MESSAGE             PIC X(80).

      *----------------------------------------------------------------*
      *        OTHER WORK AREAS                                        *
      *----------------------------------------------------------------*

         01  ALPHA-TABLE.
             05  ALPHA-CONSTANTS.
                 10  FILLER           PIC X(07)  VALUE
                     'YAYB000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YBYC000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YCYD000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YDYE000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YEYF000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YFYG000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YGYH000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YHYI000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YIYJ000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YJYK000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YKYL000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YLYM000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YMYN000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YNYO000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YOYP000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YPYQ000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YQYR000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YRYS000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YSYT000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YTYU000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YUYV000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YVYW000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YWYX000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YXYY000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YYYZ000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YZZA000'.
                 10  FILLER           PIC X(07)  VALUE
                     'YZZA000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZAZB000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZBZC000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZCZD000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZDZE000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZEZF000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZFZG000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZGZH000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZHZI000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZIZJ000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZJZK000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZKZL000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZLZM000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZMZN000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZNZO000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZOZP000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZPZQ000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZQZR000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZRZS000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZSZT000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZTZU000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZUZV000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZVZW000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZWZX000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZXZY000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZYZZ000'.
                 10  FILLER           PIC X(07)  VALUE
                     'ZZYA000'.
           05  ALPHA-CONSTANTS-TABLE REDEFINES ALPHA-CONSTANTS
                                     OCCURS 53 TIMES
                                     ASCENDING KEY IS
                                       ISBN-TABLE
                                     INDEXED BY ALPHA-IND.
               15  ISBN-TABLE         PIC XX.
               15  ALPHA-TITLE-TABLE.
                   20  TABLE-ST       PIC XX.
                   20  TABLE-NR       PIC 999.

           COPY TSFMW003.

101014      03 WRK-TRIP-I-NUMERIC  PIC 9(09).

         01 DCOMP-WORK-AREA.
            03 FILLER               PIC S9999 COMP.
            03 FILLER               PIC S9999 COMP.
            03 FILLER              PIC X(60).
         01 FILLER.
      **** (DCOMP-TRIP-AREA) ****
            03 DCOMP-LENGTH        PIC S9999 COMP.
            03 DCOMP-TRIP-NR       PIC X(20).
            03 FILLER              REDEFINES DCOMP-TRIP-NR.
              05 DCOMP-TRIP-CHAR  PIC X
                                  OCCURS 20 TIMES
                                  INDEXED BY DTC-INDEX.
         01 FILLER.
      **** (DCOMP-EDIT-AREA) ****
           03 DCOMP-EDIT-NR       PIC X(10).
           03 FILLER              REDEFINES DCOMP-EDIT-NR.
              05 DCOMP-EDIT-CHAR  PIC X
                                  OCCURS 10 TIMES
                                  INDEXED BY DEC-INDEX.

         01 DEEDIT-AREA.
           03 NR-OF-BYTES          PIC S99 VALUE +0.
           03 NR-OF-DECIMALS       PIC S9 VALUE +0.
           03 DEEDIT-FIELD         PIC X(10).
           03 FILLER REDEFINES DEEDIT-FIELD.
              05 DEEDIT-FIELD-X    PIC ZZZZZ.ZZ.
              05 FILLER            PIC X(02).
       01  PLAY-DEEDIT-FLD-N       PIC 9(7)V99.
       01  FILLER REDEFINES PLAY-DEEDIT-FLD-N.
           05 PLAY-DEEDIT-FLD-C    PIC X(9).

           EJECT
      *----------------------------------------------------------------*
      *            MESSAGES AND COMMENTS                               *
      *----------------------------------------------------------------*

       01  FILLER.
      **** (TERM-MESSAGES) ****
           03 NORMAL-MESSAGE.
             05 FILLER             PIC X(40) VALUE
               '*OK..  HAVE T/S ATTENDANT GIVE DRIVER A '.
             05 FILLER             PIC X(15) VALUE
               'USI DIRECTORY  '.
             05 US-CODE-NR         PIC Z(5).
             05 FILLER             PIC X(20) VALUE SPACES.

           03 I-PRMPT-WORK.
             05 FILLER             PIC XX VALUE 'I '.
CP1011       05 FILLER             PIC X(29) VALUE SPACES.
CP1011       05 I-CTL-NR           PIC 9(7) VALUE 0.
             05 I-AMT              PIC 9(5)V99 VALUE 0.
             05 I-TIMIN            PIC 9(4) VALUE 0.
             05 FILLER             PIC X VALUE SPACES.

           03 OUTPUT-DATA-OK.
             05 FILER              PIC X(08) VALUE 'OK XMIT-'.
             05 OUT-NETXMN         PIC ZZ,ZZZ.99-.
             05 FILLER             PIC X(02) VALUE '#-'.
CP1011       05 OUT-CTL-NR         PIC 9(07) VALUE 0.
CP1011       05 FILLER             PIC X(01) VALUE SPACES.
             05 FILLER             PIC X(06) VALUE 'AUTH#-'.
             05 OUT-CK-AUTH-NR     PIC 9(04) VALUE 0.

           03 OUTPUT-2ND-LINE.
             05 FILLER             PIC X(39) VALUE
               'CHK MUST BE MADE OUT TO DRIVER AND T/S.'.
             05 FILLER             PIC XXX VALUE SPACES.
SB0614       05 OUT-TAX-HEAD-A.
SB0614          10 OUT-TAX-HEAD    PIC X(06) VALUE SPACES.
SB0614          10 OUT-TAX         PIC Z(5).ZZ.
SB0614       05 OUT-SURCH-HEAD-B REDEFINES OUT-TAX-HEAD-A.
SB0614          10 OUT-SURCH-HEAD  PIC X(06).
SB0614          10 OUT-SURCH       PIC ZZ9.99.
SB0614          10 FILLER          PIC X(02).

           03 OUTPUT-CAN-DATA-OK.
             05 FILLER             PIC X(4) VALUE 'OK- '.
             05 OUT-CAN-NETXMN     PIC ZZ,ZZZ.99-.
             05 FILLER             PIC X(5)
                VALUE 'CAN$ '.
             05 FILLER             PIC XX   VALUE '#-'.
             05 OUT-CAN-CTL-NR     PIC 9(6) VALUE 0.
             05 OUT-CAN-BRIDGE     PIC X(3) VALUE SPACES.
             05 FILLER             PIC X    VALUE SPACES.
             05 FILLER             PIC X(5) VALUE 'AUTH-'.
             05 OUT-CAN-CK-AUTH-NR PIC 9(4).

           03 OUTPUT-CAN-2ND-LINE.
             05 FILLER             PIC X(39) VALUE
               'CHK MUST BE MADE OUT TO DRIVER AND T/S.'.
             05 FILLER             PIC XXX VALUE SPACES.
             05 OUTPUT-CAN-2ND-LINE-COUNTRY   PIC X(2)   VALUE 'US'.
             05 FILLER             PIC X(13)
                VALUE ' EQUIVALENT: '.
             05 OUT-US-NETXMN     PIC ZZ,ZZZ.99-.
SB0614       05 OUT-CAN-TAX-HEAD-A.
SB0614          10 OUT-CAN-TAX-HEAD    PIC X(06) VALUE SPACES.
SB0614          10 OUT-CAN-TAX         PIC Z(4).ZZ.
SB0614       05 OUT-CAN-SURCH-HEAD-B REDEFINES OUT-CAN-TAX-HEAD-A.
SB0614          10 OUT-CAN-SURCH-HEAD  PIC X(07).
SB0614          10 OUT-CAN-SURCH       PIC ZZ9.99.

           03 AUTO-DIAL-MESSAGE.
             05 FILLER             PIC X(39) VALUE
               'CHECK IS ON THE WAY                    '.

           03 TRI-STATE-MESSAGE-1.
             05 FILLER             PIC X(6) VALUE 'DRIVER'.
             05 FILLER             PIC X VALUE QUOTE.
             05 FILLER             PIC X(20) VALUE
                'S CONTROL NUMBER IS '.

           03 TRI-STATE-MESSAGE-2  PIC X(47) VALUE
             'ENTER THE UNIT NUMBER OF THE TRACTOR..........-'.

           03 OUTPUT-GOLD-OK-1.
             05 FILLER               PIC XXX VALUE 'OK-'.
             05 OUT-GOLD-AMT         PIC ZZ,ZZZ.99-.
             05 FILLER               PIC X(6) VALUE 'REF#- '.
             05 OUT-GOLD-DAY         PIC 99.
             05 OUT-GOLD-CTL         PIC 9(7).
             05 OUT-GOLD-BRIDGE      PIC X(3).
             05 OUTPUT-GOLD-HD-1     PIC X(09) VALUE '         '.
SB0614       05 OUT-GOLD-TAX-HD-A.
SB0614          10 OUT-GOLD-TAX-HEAD    PIC X(06) VALUE SPACES.
SB0614          10 OUT-GOLD-TAX         PIC Z(5).ZZ.
SB0614       05 OUT-GOLD-SURCH-HD-B REDEFINES OUT-GOLD-TAX-HD-A.
SB0614          10 OUT-GOLD-SURCH-HEAD  PIC X(06).
SB0614          10 OUT-GOLD-SURCH       PIC ZZ9.99.
SB0614          10 FILLER               PIC X(02).

           03 OUTPUT-GOLD-OK-2.
             05 FILLER           PIC X(26) VALUE
                                 '*===DO NOT WRITE A CHECK!!'.
             05 OUTPUT-GOLD-HD-2 PIC X(29) VALUE
                                 ' DRIVER MUST SIGN INVOICE===*'.
           03 NEW-OUTPUT-GOLD-OK-2.
             05 FILLER           PIC X(50) VALUE
             'PLEASE HAVE DRIVER SIGN INVOICE, YOUR TRANSACTION '.
             05 FILLER           PIC X(10) VALUE
             'NUMBER IS '.
             05 NEW-OUTPUT-DAY   PIC 99    VALUE ZEROS.
             05 NEW-OUTPUT-TRAN  PIC 9(7)  VALUE ZEROS.
             05 FILLER           PIC X(10) VALUE SPACES.

           03 OK-G                             PIC X(40) VALUE
              'OK...G'.
           03 OK-MSG1                          PIC X(40) VALUE
              '*OK..'.
           03 OK-MSG2                          PIC X(40) VALUE
              'OK...'.
           03 OK-S                             PIC X(40) VALUE
              'OK...S'.
           03 SEE-PRINTER                      PIC X(40) VALUE
              'SEE PRINTER'.
           03 WS-CANCEL-GALLONS                PIC 9(5)V99.
           03 WS-CANCEL-COST                   PIC 9(5)V99.
           03 TRANS-CANCELLED-2.
              05 FILLER.
                 10 FILLER                     PIC X(01) VALUE ' '.
                 10 FILLER                     PIC X(17) VALUE
                    'TRANS. CANCELLED '.
              05 FILLER.
                 10 FILLER                     PIC X(01) VALUE ' '.
                 10 CANCEL-GAL-LIT             PIC X(09) VALUE
                    'GALLONS: '.
                 10 CANCEL-GALLONS             PIC 9(5).99.
              05 FILLER.
                 10 FILLER                     PIC X(01) VALUE ' '.
                 10 FILLER                     PIC X(09) VALUE
                    ' AMOUNT: '.
                 10 CANCEL-COST                PIC 9(5).99.
           03 TRANSACTION-RECORDED             PIC X(40) VALUE
              'TRANSACTION RECORDED'.
           03 THANK-YOU                        PIC X(40) VALUE
              'THANK YOU'.
JS1199     03 WS-FLEET-RESPONSE.
JS1199        10 WS-FR-CODE                    PIC 9(05).
JS1199        10 WS-FR-ACCT                    PIC X(05).
MP1004        10 WS-FR-CUST                    PIC X(10).
JS1199        10 WS-FR-AMT                     PIC 9(05)V99.
JS1199        10 WS-FR-CONTROL-NR              PIC 9(06).
JS1199        10 WS-FR-EXP-DATE                PIC 9(04).
JS1199        10 WS-FR-CARD-BLOCKED            PIC X(01).
JS1199        10 WS-FR-MESSAGE                 PIC X(80).

JS0303     03 WS-BATCH-FUEL-RESPONSE.
JS0303        10 WS-BF-MESSAGE                 PIC X(80).
JS0303        10 WS-BF-CONTROL-NR              PIC 9(09).
CC0803        10 WS-BF-FMLOG-RK-DATE           PIC 9(07).

           03 POS-OKG-LARGE.
              05 FILLER                     PIC X(04) VALUE 'CTL#'.
              05 POS-OKGL-CTL               PIC 9(06).
              05 POS-OKGL-BRIDGE            PIC X(03).
JS0907        05 FILLER                     PIC X(02) VALUE ' $'.
JS0907        05 POS-OKGL-AMT               PIC ZZZZZ9.99.
JS0699        05 POS-OKGL-TAX-HEAD          PIC X(06) VALUE SPACES.
JS0699        05 POS-OKGL-TAX               PIC ZZZZZ.ZZ.
           03 POS-OK-TERMINAL.
              05 FILLER.
                 10 FILLER                  PIC X(01) VALUE ' '.
                 10 FILLER                  PIC X(06) VALUE 'CNTL#:'.
                 10 FILLER.
                    15 POS-OKT-CTL-DD       PIC 9(02).
                    15 POS-OKT-CTL          PIC 9(06).
              05 FILLER.
                 10 FILLER                  PIC X(01) VALUE ' '.
                 10 FILLER                  PIC X(09) VALUE 'GALLONS: '.
                 10 POS-OKT-GALLONS         PIC 9(5).99.
              05 FILLER.
                 10 FILLER                  PIC X(01) VALUE ' '.
                 10 FILLER                  PIC X(09) VALUE 'AMOUNT: '.
                 10 POS-OKT-AMOUNT          PIC 9(5).99.
              05 FILLER.
                 10 FILLER                  PIC X(07) VALUE ' DATE: '.
                 10 POS-OKT-DATE            PIC X(8).
                 10 FILLER                  PIC X(07) VALUE ' TIME: '.
                 10 POS-OKT-TIME            PIC X(8).

           03 POS-OK.
              05 FILLER                     PIC X(06) VALUE 'AMOUNT'.
              05 POS-OK-AMT                 PIC ZZ,ZZZ.99-.
              05 FILLER                     PIC X(10) VALUE ' CTL#-'.
              05 POS-OK-CTL                 PIC 9(6).
              05 FILLER                     PIC X(7) VALUE ' AUTH#-'.
              05 POS-OK-AUTH                PIC 9(4).
JS0699        05 POS-OK-TAX-HEAD            PIC X(06).
082008        05 POS-OK-TAX                 PIC Z(5).ZZ.
           03 POS-OK-EXPANDED.
              05 FILLER.
                 10 FILLER                  PIC X(01) VALUE ' '.
                 10 FILLER                  PIC X(04) VALUE 'CTL#'.
                 10 FILLER.
                    15 POS-OKX-CTL          PIC 9(06).
                    15 POS-OKX-XTN-TYPE     PIC X(03) VALUE SPACES.
              05 FILLER.
                 10 FILLER                  PIC X(11)
JS0903              VALUE ' NET AMOUNT'.
JS0903           10 POS-OKX-NET             PIC $$$$$9.99.
              05 FILLER.
                 10 FILLER                  PIC X(18)
                    VALUE ' - FEE REDUCED BY '.
082008           10 POS-OKX-FEE-DEDUCT      PIC 9(5).99.
JS0699        05 FILLER.
JS0699           10 POS-OKX-TAX-HEAD        PIC X(06) VALUE SPACES.
082008           10 POS-OKX-TAX             PIC Z(5).ZZ.
           03 POS-OK-DISCOUNT.
              05 FILLER.
                 10 FILLER                  PIC X(01) VALUE ' '.
                 10 FILLER                  PIC X(04) VALUE 'CTL#'.
                 10 FILLER.
                    15 POS-OKD-CTL          PIC 9(06).
                    15 POS-OKD-XTN-TYPE     PIC X(03) VALUE SPACES.
              05 FILLER.
                 10 FILLER                  PIC X(11)
JS0903              VALUE ' NET AMOUNT'.
JS0903           10 POS-OKD-NET             PIC $$$$$9.99.
JS0699        05 FILLER.
JS0699           10 POS-OKD-TAX-HEAD        PIC X(06) VALUE SPACES.
082008           10 POS-OKD-TAX             PIC Z(5).ZZ.
           03 POS-OK-FEE.
              05 FILLER.
                 10 FILLER                  PIC X(01) VALUE ' '.
                 10 FILLER                  PIC X(04) VALUE 'CTL#'.
                 10 FILLER.
                    15 POS-OKF-CTL          PIC 9(06).
                    15 POS-OKF-XTN-TYPE     PIC X(03) VALUE SPACES.
              05 FILLER.
                 10 FILLER                  PIC X(18)
                    VALUE ' - FEE REDUCED BY '.
082008           10 POS-OKF-FEE-DEDUCT      PIC 9(5).99.
JS0699        05 FILLER.
JS0699           10 POS-OKF-TAX-HEAD        PIC X(06) VALUE SPACES.
082008           10 POS-OKF-TAX             PIC Z(5).ZZ.
           03 POS-SETTLE-OK.
JS0903        05 FILLER                     PIC X(07) VALUE 'CHK AMT'.
JS0903        05 POS-SETTLE-AMT             PIC $$$$$9.99.
              05 FILLER                     PIC X(8) VALUE ' AUTH# '.
              05 POS-SETTLE-AUTH            PIC 9(4).
              05 FILLER                     PIC X(4) VALUE SPACES.
              05 FILLER                     PIC X(11) VALUE
                 ' XTN CNT -'.
              05 POS-SETTLE-CNT             PIC ZZZZ9.
              05 FILLER                     PIC X(11) VALUE
                 '  XTN TOT '.
              05 POS-SETTLE-TOT             PIC $$,$$9.99-.
MP1001     03 EMAIL-OK-RESP.
MP1001        05  EOR-ACCT-CODE             PIC X(10).
MP1001        05  EOR-CUST-ID               PIC X(10).
MP1001        05  EOR-CTL-NR                PIC 9(6).

      ******************************************************************
      *  TRANSACTION RESPONSES.  (ERRORS ONLY)                         *
      ******************************************************************

       01  FILLER.
      **** (TRANSACTION-MESSAGES) ****
           05 CALL-COMPANY-MSG.
              10  FILLER                    PIC X(21) VALUE
              'CALL COMPANY - ERROR '.
              10  CALL-COMPANY-NBR          PIC 9(3)  VALUE ZEROS.

           05 NEW-OUT-MESSAGE.
              10  NEW-OUT-MSG1              PIC X(40) VALUE SPACES.
              10  NEW-OUT-MSG2              PIC X(79) VALUE SPACES.

           05 NO-MSG-NBR                    PIC 9(3)  VALUE 002.
           05 INVALID-UNIT-NR-NBR           PIC 9(3)  VALUE 030.
           05 CUST-NOT-ACTIVE-NBR           PIC 9(3)  VALUE 088.
           05 INACTIVE-CARD-NBR             PIC 9(3)  VALUE 054.
           05 INVALID-DL-NBR                PIC 9(3)  VALUE 056.
           05 INVALID-RATE-NBR              PIC 9(3)  VALUE 084.
           05 INVALID-TRIP-NR-NBR           PIC 9(3)  VALUE 022.
           05 FUEL-NOT-ALLOWED-NBR          PIC 9(3)  VALUE 052.
           05 ID-MISSING-NBR                PIC 9(3)  VALUE 086.
           05 PURCHASE-NOT-ALLOWED-NBR      PIC 9(3)  VALUE 042.
           05 ALLOWANCE-EXCEEDED-NBR        PIC 9(3)  VALUE 044.
           05 MAX-DAILY-NBR                 PIC 9(3)  VALUE 046.
           05 CARD-BLOCKED-NBR              PIC 9(3)  VALUE 048.
           05 LIMIT-EXCEEDED-NBR            PIC 9(3)  VALUE 058.
           05 HUB-READING-NBR               PIC 9(3)  VALUE 060.
           05 TRIP-ALLOW-EXCEEDED-NBR       PIC 9(3)  VALUE 050.

           05 SETTLE-NOT-POSSIBLE-N         PIC S9(5) COMP-3 VALUE +01.
           05 SETTLE-NOT-POSSIBLE           PIC X(40) VALUE
              '001 SETTLEMENT NOT POSSIBLE'.

           05 DRIVER-MAY-NOT-FUEL-NO-PROD-N PIC S9(5) COMP-3 VALUE +02.
           05 DRIVER-MAY-NOT-FUEL-NO-PROD.
              10 FILLER                     PIC X(40) VALUE
                 'DRIVER MAY NOT FUEL HERE'.
              10 FILLER                     PIC X(80) VALUE
                 'NO PRODUCTS ARE AVAILABLE'.

           05 DRIVER-MAY-NOT-PURC-PROD-N    PIC S9(5) COMP-3 VALUE +03.
           05 DRIVER-MAY-NOT-PURC-PROD.
              10 FILLER                     PIC X(40) VALUE
                 'THIS DRIVER MAY NOT PURCHASE'.
              10 FILLER                     PIC X(80) VALUE
                 'THIS PRODUCT'.

           05 MUST-ANSWER-Y-N-N             PIC S9(5) COMP-3 VALUE +04.
           05 MUST-ANSWER-Y-N               PIC X(40) VALUE
              'YOU MUST ANSWER Y OR N'.

           05 MUST-ENTER-CHECK-N            PIC S9(5) COMP-3 VALUE +05.
           05 MUST-ENTER-CHECK              PIC X(40) VALUE
              'YOU MUST ENTER A CHECK NR'.

           05 INVALID-CHECK-NR-N            PIC S9(5) COMP-3 VALUE +06.
           05 INVALID-CHECK-NR              PIC X(40) VALUE
              'INVALID CHECK NUMBER'.
           05 INVALID-CAN-CHECK-NR          PIC X(40) VALUE
              'INVALID CANADIAN CHECK NUMBER'.
           05 INVALID-US-CHECK-NR           PIC X(40) VALUE
              'INVALID US CHECK NUMBER'.

           05 VERIFY-PRODUCTS-N             PIC S9(5) COMP-3 VALUE +07.
           05 VERIFY-PRODUCTS               PIC X(40) VALUE
              'VERIFY PRODUCTS..'.

           05 VERIFY-PRODUCTS-DUP-N         PIC S9(5) COMP-3 VALUE +07.
           05 VERIFY-PRODUCTS-DUP           PIC X(40) VALUE
              'DUPLICATE PRODUCT ENTERED'.

           05 INVALID-AMOUNT-ENTERED-N      PIC S9(5) COMP-3 VALUE +08.
           05 INVALID-AMOUNT-ENTERED        PIC X(40) VALUE
              'INVALID AMOUNT ENTERED.'.

           05 INVALID-NUM-VALUE-N           PIC S9(5) COMP-3 VALUE +08.
           05 INVALID-NUM-VALUE             PIC X(40) VALUE
              'INVALID NUMERIC VALUE ENTERED'.
           05 INVALID-NUM-VALUE2            PIC X(40) VALUE
              'MAX QTY/AMOUNT EXCEEDED      '.

           05 INVALID-PRODUCT-CODE-N        PIC S9(5) COMP-3 VALUE +09.
           05 INVALID-PRODUCT-CODE          PIC X(40) VALUE
              'INVALID PRODUCT CODE'.

           05 PRODUCT-ALLOWANCE-EXCEEDED-N  PIC S9(5) COMP-3 VALUE +10.
           05 PRODUCT-ALLOWANCE-EXCEEDED    PIC X(40) VALUE
              'PRODUCT ALLOWANCE EXCEEDED'.

           05 MAX-DAILY-PROD-PURC-N         PIC S9(5) COMP-3 VALUE +11.
           05 MAX-DAILY-PROD-PURC.
              10 FILLER                     PIC X(40) VALUE
                 'MAXIMUM DAILY PRODUCT PURCHASE'.
              10 FILLER                     PIC X(40) VALUE
                 'EXCEEDED'.

           05 INVALID-CARD-NR-N             PIC S9(5) COMP-3 VALUE +12.
           05 INVALID-CARD-NR               PIC X(40) VALUE
              'INVALID CARD NR'.

DR0121     05 INVALID-CVC1-N                PIC S9(5) COMP-3
DR0121                                                     VALUE +1557.
DR0121     05 INVALID-CVC1                  PIC X(40) VALUE
DR0121        'INVALID CVC1 ON CARD'.

           05 INVALID-RESP-QUERY-N          PIC S9(5) COMP-3 VALUE +13.
           05 INVALID-RESP-QUERY            PIC X(40) VALUE
              'INVALID RESPONSE TO QUERY'.

           05 CHECK-ENTRY-ERROR-N           PIC S9(5) COMP-3 VALUE +14.
           05 CHECK-ENTRY-ERROR             PIC X(40) VALUE
              'CHECK ENTRY ERROR'.

           05 SYSTEM-UNDER-INQUIRY-N        PIC S9(5) COMP-3 VALUE +15.
           05 SYSTEM-UNDER-INQUIRY          PIC X(40) VALUE
              'SYSTEM UNDER INQUIRY'.
           05 NEW-SYSTEM-UNDER-INQUIRY      PIC X(40) VALUE
              'SYSTEM UNDER INQUIRY, USE FORMS SCREEN  '.

           05 ID-NR-MISSING-N               PIC S9(5) COMP-3 VALUE +16.
           05 ID-NR-MISSING                 PIC X(40) VALUE
              'ID NR IS MISSING OR INVALID'.

           05 TS-IS-INVALID-N               PIC S9(5) COMP-3 VALUE +17.
           05 TS-IS-INVALID                 PIC X(40) VALUE
              'T/S IS INVALID'.
MP0706     05  IN-NETW-TS-INVALID-N         PIC S9(5) VALUE +17 COMP-3.
MP0706     05  IN-NETW-TS-INVALID           PIC X(40)
MP0706                               VALUE 'BUSSINESS TYPE IS INVALID'.
           05 YCODE-IS-INVALID              PIC X(40) VALUE
              'YCODE NOT ALLOWED'.

           05 DO-NOT-HONOR-N                PIC S9(5) COMP-3 VALUE +18.
           05 DO-NOT-HONOR                  PIC X(40) VALUE
              'DO NOT HONOR'.

           05 NEW-DO-NOT-HONOR1             PIC X(40) VALUE
              'FUEL SCREEN BLOCKED                     '.
           05 NEW-DO-NOT-HONOR2.
              10 FILLER                     PIC X(21) VALUE
              'CALL COMPANY - ERROR '.
              10 NEW-DO-NOT-HONOR-NBR       PIC 9(3)  VALUE ZEROS.
              10 FILLER                     PIC X(55) VALUE SPACES.

071509***** THIS OBSOLETE MESSAGE REUSED FOR VIRTUAL CARD MESSAGE
071509     05 VIRTUAL-CARD-NOT-ALLOWED-N    PIC S9(5) COMP-3 VALUE +19.
071509     05 VIRTUAL-CARD-NOT-ALLOWED      PIC X(40) VALUE
071509        'VIRTUAL CARD NOT ALLOWED'.

           05 TERMINAL-FUEL-NOT-ALLOWED-N   PIC S9(5) COMP-3 VALUE +449.
           05 TERMINAL-FUEL-NOT-ALLOWED     PIC X(40) VALUE
              'TERMINAL FUEL NOT ALLOWED'.

           05 TRIP-ALLOW-EXCEEDED-N         PIC S9(5) COMP-3 VALUE +20.
           05 TRIP-ALLOW-EXCEEDED.
              10 FILLER                     PIC X(40) VALUE
                 'CONTACT SUPERVISOR:'.
              10 FILLER                     PIC X(80) VALUE
                 'TRIP ALLOWANCE HAS BEEN EXCEEDED'.

           05 DRIVER-MAY-NOT-FUEL-HERE-N    PIC S9(5) COMP-3 VALUE +21.
           05 DRIVER-MAY-NOT-FUEL-HERE      PIC X(40) VALUE
              'DRIVER MAY NOT FUEL HERE'.

           05 DRIVER-MAY-NOT-FUEL-CNET.
              10 FILLER                     PIC X(40) VALUE
                 'DRIVER MAY NOT FUEL HERE'.
              10 FILLER                     PIC X(80) VALUE
                 'USING LIMITED NETWORK BY CARD'.

           05 CHECK-NR-BIGGER-N             PIC S9(5) COMP-3 VALUE +22.
           05 CHECK-NR-BIGGER.
              10 FILLER                     PIC X(40) VALUE
                 'BEFORE YOU MAY MOVE ON TO "BIGGER AND'.
              10 FILLER                     PIC X(80) VALUE
                 'BETTER" THINGS, YOU MUST ENTER THE CHECK'.

           05 YOU-ARE-RELEASED-N            PIC S9(5) COMP-3 VALUE +23.
           05 YOU-ARE-RELEASED              PIC X(40) VALUE
              'YOU ARE RELEASED'.

           05 INVALID-RESP-MSG-QUERY-N      PIC S9(5) COMP-3 VALUE +24.
           05 INVALID-RESP-MSG-QUERY.
              10 FILLER                     PIC X(40) VALUE
                 'INVALID RESPONSE TO MESSAGE QUERY'.
              10 FILLER                     PIC X(80) VALUE
                 'CORRECT AND RETRY'.

           05 INVOICE-NR-REQUIRED-N         PIC S9(5) COMP-3 VALUE +25.
           05 INVOICE-NR-REQUIRED           PIC X(40) VALUE
              'INVOICE NR REQUIRED'.

           05 INVOICE-NR-INVALID-N          PIC S9(5) COMP-3 VALUE +25.
           05 INVOICE-NR-INVALID            PIC X(40) VALUE
              'INVOICE NR MUST BE NUMERIC'.

           05 CC-INVOICE-NR-INVALID-N       PIC S9(5) COMP-3 VALUE +25.
           05 CC-INVOICE-NR-INVALID         PIC X(40) VALUE
              'INVOICE NR IS DUPLICATE OF LAST TRANS.'.
           05 FILLER                        PIC X(20) VALUE
              'REFER TO CONTROL #: '.
           05 CC-INVOICE-NR-CTL             PIC 9(7).

           05 FUEL-NOT-ALLOWED-N            PIC S9(5) COMP-3 VALUE +26.
           05 FUEL-NOT-ALLOWED              PIC X(40) VALUE
              'FUEL NOT ALLOWED AT THIS LOCATION'.
           05 FUEL-NOT-ALLOWED2             PIC X(40) VALUE
              'FUEL NOT ALLOWED'.

           05 OIL-NOT-ALLOWED-N             PIC S9(5) COMP-3 VALUE +27.
           05 OIL-NOT-ALLOWED               PIC X(40) VALUE
              'OIL NOT ALLOWED AT THIS LOCATION'.
           05 OIL-NOT-ALLOWED2              PIC X(40) VALUE
              'OIL NOT ALLOWED'.

           05 CASH-NOT-ALLOWED-N            PIC S9(5) COMP-3 VALUE +28.
           05 CASH-NOT-ALLOWED              PIC X(40) VALUE
              'CASH NOT ALLOWED AT THIS LOCATION'.
           05 CASH-NOT-ALLOWED2             PIC X(40) VALUE
              'CASH NOT ALLOWED'.

           05 PROD-NOT-ALLOWED-N            PIC S9(5) COMP-3 VALUE +29.
           05 PROD-NOT-ALLOWED              PIC X(40) VALUE
              'PRODUCTS NOT ALLOWED AT THIS LOCATION'.
           05 PROD-NOT-ALLOWED2             PIC X(40) VALUE
              'PRODUCTS NOT ALLOWED'.

           05 TRIP-NR-REQUIRED-N            PIC S9(5) COMP-3 VALUE +30.
           05 TRIP-NR-REQUIRED              PIC X(40) VALUE
              'TRIP NR IS REQUIRED TO PROCEED'.

           05 TRIP-NR-INVALID-N             PIC S9(5) COMP-3 VALUE +31.
           05 TRIP-NR-INVALID               PIC X(40) VALUE
              'TRIP NR IS INVALID'.

           05 INVALID-CHAR-IN-NAME-N        PIC S9(5) COMP-3 VALUE +32.
           05 INVALID-CHAR-IN-NAME          PIC X(40) VALUE
              'INVALID CHARACTER IN DRIVER NAME'.

           05 MAX-PURC-MNX-DRIVER-N         PIC S9(5) COMP-3 VALUE +33.
           05 MAX-PURC-MNX-DRIVER.
              10 FILLER                     PIC X(40) VALUE
                 'CONTACT SUPERVISOR: MAXIMUM PURCHASE'.
              10 FILLER                     PIC X(80) VALUE
                 'AMOUUNT FOR MNX DRIVER EXCEEDED'.

           05 NEW-MAX-PURC-MNX-DRIVER       PIC X(40) VALUE
              'MNX DRIVER MAY ONLY HAVE A $60 PURCHASE '.

           05 INVOICE-TOTAL-ERROR-N         PIC S9(5) COMP-3 VALUE +34.
           05 INVOICE-TOTAL-ERROR.
              10 FILLER                     PIC X(40) VALUE
                 'INVOICE DETAIL AMOUNTS DOES NOT'.
              10 FILLER                     PIC X(80) VALUE
                 'MATCH EXPECTED TOTAL'.

           05 INVALID-RATE-CODE-N           PIC S9(5) COMP-3 VALUE +35.
           05 INVALID-RATE-CODE             PIC X(40) VALUE
              'INVALID RATE CODE'.

           05 CTL-NR-MAX-N                  PIC S9(5) COMP-3 VALUE +36.
           05 CTL-NR-MAX                    PIC X(40) VALUE
              'CTL # EXCEEDES MAXIMUM'.

           05 INVALID-CANCEL-REQ-N          PIC S9(5) COMP-3 VALUE +37.
           05 INVALID-CANCEL-REQ            PIC X(40) VALUE
              'INVALID CANCEL REQUEST'.

           05 INVALID-ID-NR-N               PIC S9(5) COMP-3 VALUE +38.
           05 INVALID-ID-NR                 PIC X(40) VALUE
              'INVALID ID NR'.

CP1011     05 CALL-TO-CANCEL-N            PIC S9(5) COMP-3 VALUE +1165.
CP1011     05 CALL-TO-CANCEL              PIC X(40) VALUE
CP1011        'PLEASE CALL COMDATA FOR CANCELLATION'.

           05 TRANS-ALREADY-CANCELLED-N     PIC S9(5) COMP-3 VALUE +39.
           05 TRANS-ALREADY-CANCELLED       PIC X(40) VALUE
              'THIS TRANS ALREADY CANCELLED'.

           05 RECORD-MISMATCH-N             PIC S9(5) COMP-3 VALUE +40.
           05 RECORD-MISMATCH               PIC X(40) VALUE
              'RECORD MISMATCH: CANCEL NOT POSSIBLE'.

           05 INVALID-TRANS-NR-N            PIC S9(5) COMP-3 VALUE +41.
           05 INVALID-TRANS-NR              PIC X(40) VALUE
              'INVALID TRANS NR'.

           05 INVALID-TRANS-NR-TS-N         PIC S9(5) COMP-3 VALUE +42.
           05 INVALID-TRANS-NR-TS           PIC X(40) VALUE
              'INVALID TRANS NR / TSCODE'.

           05 TRANSACTION-PURGED-N          PIC S9(5) COMP-3 VALUE +43.
           05 TRANSACTION-PURGED            PIC X(40) VALUE
              'TRANSACTION PURGED'.

           05 FUNCTION-COMPLETE-N           PIC S9(5) COMP-3 VALUE +44.
           05 FUNCTION-COMPLETE             PIC X(40) VALUE
              'FUNCTION COMPLETE'.

           05 INACTIVE-CARD-N               PIC S9(5) COMP-3 VALUE +45.
           05 INACTIVE-CARD                 PIC X(40) VALUE
              'INACTIVE CARD'.

           05 MUST-USE-IN-STATION-N         PIC S9(5) COMP-3 VALUE +46.
           05 MUST-USE-IN-STATION           PIC X(40) VALUE
              'MUST USE IN-STATION CARD'.

           05 INVALID-DL-N                  PIC S9(5) COMP-3 VALUE +47.
           05 INVALID-DL                    PIC X(40) VALUE
              'INVALID DL#'.

           05 NOT-INSTATION-N               PIC S9(5) COMP-3 VALUE +48.
           05 NOT-INSTATION                 PIC X(40) VALUE
              'NOT IN-STATION CARD'.
           05 NEW-NOT-INSTATION1            PIC X(40) VALUE
              'CONTACT SUPERVISTOR                     '.
           05 NEW-NOT-INSTATION2.
              10  FILLER                    PIC X(40) VALUE
              'IN-STATION CARD FLAGGED WRONG           '.
              10  FILLER                    PIC X(39) VALUE SPACES.

           05 IN-STATION-PURC-NOT-ALLOWED-N PIC S9(5) COMP-3 VALUE +49.
           05 IN-STATION-PURC-NOT-ALLOWED   PIC X(40) VALUE
              'IN STATION CARD - PURCHASE NOT ALLOWED'.

           05 CUST-NOT-ACTIVE-N             PIC S9(5) COMP-3 VALUE +50.
           05 CUST-NOT-ACTIVE               PIC X(40) VALUE
              'CUSTOMER NOT ACTIVE'.

           05 INVALID-UNIT-NR-N             PIC S9(5) COMP-3 VALUE +51.
           05 INVALID-UNIT-NR               PIC X(40) VALUE
              'INVALID UNIT NR'.

           05 INVALID-UNIT-NR-LEN-N         PIC S9(5) COMP-3 VALUE +51.
           05 INVALID-UNIT-NR-LEN           PIC X(40) VALUE
              'INVALID UNIT NR - INVALID LENGTH'.

           05 CUST-NOT-ON-FUEL-N            PIC S9(5) COMP-3 VALUE +52.
           05 CUST-NOT-ON-FUEL              PIC X(40) VALUE
              'CUSTOMER NOT SET UP FOR FUEL PROGRAM'.

           05 CARD-NOT-ON-FUEL-N            PIC S9(5) COMP-3 VALUE +52.
           05 CARD-NOT-ON-FUEL              PIC X(40) VALUE
              'CARD IS NOT SET UP FOR FUEL PROGRAM'.

           05 NEW-CUST-NOT-ON-FUEL1         PIC X(40) VALUE
              'PLEASE CALL VOICE RESPONSE              '.
           05 NEW-CUST-NOT-ON-FUEL2.
              10 FILLER                     PIC X(23) VALUE
              '- GIVE THE PHONE NUMBER'.
              10 FILLER                     PIC X(56) VALUE SPACES.

           05 NEW-CARD-NOT-ON-FUEL1         PIC X(40) VALUE
              'PLEASE CALL VOICE RESPONSE              '.
           05 NEW-CARD-NOT-ON-FUEL2.
              10 FILLER                     PIC X(23) VALUE
              '- GIVE THE PHONE NUMBER'.
              10 FILLER                     PIC X(56) VALUE SPACES.

           05 CUST-RECORD-NOT-FOUND-N       PIC S9(5) COMP-3 VALUE +53.
           05 CUST-RECORD-NOT-FOUND         PIC X(40) VALUE
              'CUSTOMER RECORD NOT FOUND'.

           05 INACTIVE-DRIVER-N             PIC S9(5) COMP-3 VALUE +54.
           05 INACTIVE-DRIVER               PIC X(40) VALUE
              'INACTIVE DRIVER'.

           05 ENTER-PROPER-TS-PHONE-N       PIC S9(5) COMP-3 VALUE +55.
           05 ENTER-PROPER-TS-PHONE         PIC X(40) VALUE
              'ENTER PROPER T/S PHONE NR'.

           05 INACTIVE-LOCATION-N           PIC S9(5) COMP-3 VALUE +464.
           05 INACTIVE-LOCATION             PIC X(40) VALUE
              'THIS LOCATION IS NOT ACTIVE'.

           05 UNAUTHORIZED-TERM-N           PIC S9(5) COMP-3 VALUE +56.
           05 UNAUTHORIZED-TERM             PIC X(40) VALUE
              'UNAUTHORIZED TERMINAL'.

           05 THIS-CARD-MUST-CALL-N         PIC S9(5) COMP-3 VALUE +57.
           05 THIS-CARD-MUST-CALL           PIC X(40) VALUE
              'THIS CARD MUST CALL'.

           05 CANCEL-MUST-CALL-N            PIC S9(5) COMP-3 VALUE +603.
           05 CANCEL-MUST-CALL              PIC X(40) VALUE
              'CAN NOT CANCEL XTN AFTER 2 HOURS'.

           05 DAILY-LIMIT-EXCEEDED-N        PIC S9(5) COMP-3 VALUE +58.
           05 DAILY-LIMIT-EXCEEDED          PIC X(40) VALUE
              'DAILY LIMIT EXCEEDED'.

           05 CASH-ADVANCE-NOT-AVAIL-N      PIC S9(5) COMP-3 VALUE +59.
           05 CASH-ADVANCE-NOT-AVAIL        PIC X(40) VALUE
              'CASH ADVANCE NOT AVAILABLE'.

           05 NO-OIL-THIS-UNIT-N            PIC S9(5) COMP-3 VALUE +60.
           05 NO-OIL-THIS-UNIT              PIC X(40) VALUE
              'NO OIL THIS UNIT'.

           05 PROD-CODES-NOT-ALLOWED-N      PIC S9(5) COMP-3 VALUE +61.
           05 PROD-CODES-NOT-ALLOWED        PIC X(40) VALUE
              'PRODUCT CODES NOT ALLOWED'.

           05 AUTO-DIAL-DOWN-N              PIC S9(5) COMP-3 VALUE +62.
           05 AUTO-DIAL-DOWN                PIC X(40) VALUE
              'AUTO DIAL IS DOWN'.

           05 FUEL-PRICE-ERR-N              PIC S9(5) COMP-3 VALUE +63.
           05 FUEL-PRICE-ERR                PIC X(40) VALUE
              'FUEL PRICE ERROR'.

           05 FUEL-PRICE-ERR-CREDIT-N       PIC S9(5) COMP-3 VALUE +621.
           05 FUEL-PRICE-ERR-CREDIT         PIC X(40) VALUE
              'FUEL PRICE ERROR, USE CREDIT PRICE'.

           05 NEW-FUEL-PRICE-ERR1           PIC X(17) VALUE
              'FUEL PRICE ERROR '.
           05 NEW-FUEL-PRICE-TYPE           PIC X(23) VALUE '(CASH)'.
           05 NEW-FUEL-PRICE-ERR2.
              10 FILLER                     PIC X(42) VALUE
              'PRESS "F5" TO UPDATE T/S, RE-ENTER ORDER, '.
              10 FILLER                     PIC X(22) VALUE
              'PRESS "F7" TO OVERRIDE'.
              10 FILLER                     PIC X(15) VALUE SPACES.

           05 ZERO-OR-NEG-N                 PIC S9(5) COMP-3 VALUE +64.
           05 ZERO-OR-NEG                   PIC X(40) VALUE
              'ZERO OR NEGATIVE AMT ENTERED'.

           05 UNIT-NR-REQ-N                 PIC S9(5) COMP-3 VALUE +65.
           05 UNIT-NR-REQ                   PIC X(40) VALUE
              'UNIT NR IS REQUIRED TO PROCEED'.

           05 OTHER-FUEL-NOT-ALLOWED-N      PIC S9(5) COMP-3 VALUE +66.
           05 OTHER-FUEL-NOT-ALLOWED        PIC X(40) VALUE
              'OTHER FUEL NOT ALLOWED THIS COMP'.

           05 NR1-FUEL-NOT-ALLOWED-N        PIC S9(5) COMP-3 VALUE +66.
           05 NR1-FUEL-NOT-ALLOWED          PIC X(40) VALUE
              'NR1 FUEL NOT ALLOWED THIS COMP'.

           05 NO-REFER-PURC-N               PIC S9(5) COMP-3 VALUE +67.
           05 NO-REFER-PURC                 PIC X(40) VALUE
              'NO REFER PURCHASE ALLOWED THIS UNIT'.

           05 PRICE-EXCEEDS-MAX-N           PIC S9(5) COMP-3 VALUE +68.
           05 PRICE-EXCEEDS-MAX.
              10 FILLER                     PIC X(40) VALUE
                 'FUEL PRICE OUT OF RANGE'.
              10 FILLER                     PIC X(05) VALUE
                 'MAX: '.
              10 PRICE-EXCEEDS-MAX-MAX      PIC Z.999.
              10 FILLER                     PIC X(06) VALUE
                 ' MIN: '.
              10 PRICE-EXCEEDS-MAX-MIN      PIC Z.999.

           05 EXCESSIVE-OIL-REQUEST-N       PIC S9(5) COMP-3 VALUE +69.
           05 EXCESSIVE-OIL-REQUEST.
              10 FILLER                     PIC X(40) VALUE
                'OIL REQUEST EXCEEDS AVAILABLE. '.
              10 FILLER                     PIC X(05) VALUE 'ONLY '.
              10 XCS-OIL-REQ                PIC ZZ9.
              10 XCS-OIL-REQ-MSG            PIC X(6).
              10 FILLER                     PIC X(76) VALUE
                ' ARE ALLOWED PER TRANSACTION'.

           05 OIL-EXCEEDS-MAX-N             PIC S9(5) COMP-3 VALUE +69.
           05 OIL-EXCEEDS-MAX.
              10 FILLER                     PIC X(40) VALUE
                 'OIL REQUEST EXCEEDS AVAILABLE. '.
              10 OIL-EXCEEDS-MAX-QTY        PIC ---9.
              10 FILLER                     PIC X(1) VALUE ' '.
              10 OIL-EXCEEDS-MAX-QTY-MSG    PIC X(6).
              10 FILLER                     PIC X(5) VALUE ' AND '.
              10 OIL-EXCEEDS-MAX-DOL        PIC ---9.99.
              10 FILLER                     PIC X(25) VALUE
                 ' DOLLARS ARE AVAILABLE'.

           05 EXCESSIVE-BALANCE-REQUEST-N   PIC S9(5) COMP-3 VALUE +70.
           05 EXCESSIVE-BALANCE-REQUEST.
              10 FILLER                     PIC X(40) VALUE
                'EXPENSE BALANCE HAS BEEN EXCEEDED.'.
              10 XCS-BAL-REQ-AMT            PIC ZZZ,ZZZ.99-.
              10 FILLER                     PIC X(70) VALUE
                'IS AVAILABLE.'.

           05 NEW-EXCESSIVE-BALANCE-REQUEST PIC X(40) VALUE
              'EXPENSE BALANCE HAS BEEN EXCEEDED       '.

           05 CHECK-ADJUSTMENT-MSG.
              10 FILLER                     PIC X(40) VALUE
                 'NOTIFY SERVICE CENTER OF PROCESSING FEE'.
              10 FILLER                     PIC X(18) VALUE
                 'CHECK AMT WILL BE '.
              10 CHECK-ADJUSTMENT-AMT       PIC ZZZZ.99.
              10 FILLER                     PIC X(08) VALUE
                 ' FP FEE '.
              10 CHECK-ADJUSTMENT-FEE       PIC ZZ.99.
              10 FILLER                     PIC X(12) VALUE
                 ' OTHER FEES '.
              10 CHECK-ADJUSTMENT-OT-FEE    PIC ZZZ.99.

           05 MULTIPLY-ERROR-MESSAGE.
              10 FILLER                     PIC X(40) VALUE
                 'TOTAL PRICE DOES NOT EQUAL NR OF GLLNS'.
              10 FILLER                     PIC X(80) VALUE
                 'TIMES PRICE PER GALLON'.

           05 CHECK-DIGIT-ERROR-MESSAGE-N   PIC S9(5) COMP-3 VALUE +73.
           05 CHECK-DIGIT-ERROR-MESSAGE.
              10 FILLER                     PIC X(40) VALUE
                 'ID NR IS MISSING OR INVALID..'.

           05 SRVC-TYPE-ERROR-MESSAGE-N     PIC S9(5) COMP-3 VALUE +74.
           05 SRVC-TYPE-ERROR-MESSAGE.
              10 FILLER                     PIC X(40) VALUE
                 'FULL/SELF SERVICE CODE INVALID, OR'.
              10 FILLER                     PIC X(80) VALUE
                 'DRIVER MAY NOT USE THIS SERVICE.'.

           05 NO-MSG-N                      PIC S9(5) COMP-3 VALUE +75.
           05 NO-MSG.
              10 FILLER                     PIC X(4) VALUE 'NO  '.
              10 NO-TYPE                    PIC X(1) VALUE ' '.
              10 ERR-AMT                    PIC ZZZ,ZZZ.99-.
              10 FILLER                     PIC X(10) VALUE SPACES.
              10 ERR-SML-NAM                PIC X(7).
           05 CREDIT-HARD-HALT-MSG-N        PIC S9(5) COMP-3 VALUE +75.
           05 CREDIT-HARD-HALT-MSG.
              10 FILLER                     PIC X(40) VALUE
                 'PLEASE HAVE THE DRIVERS COMPANY CALL'.
              10 FILLER                     PIC X(40) VALUE
                 'THE COMDATA CREDIT DEPARTMENT'.

           05 MINIMUM-GALLON-MESSAGE-N      PIC S9(5) COMP-3 VALUE +76.
           05 MINIMUM-GALLON-MESSAGE.
              10 FILLER                     PIC X(21) VALUE
                 'DRIVER MUST PURCHASE'.
              10 MINIMUM-GALLON-NR          PIC ZZZ.ZZ.
              10 MINIMUM-GALLON-MSG         PIC X(16) VALUE
                 ' GALLONS'.
              10 FILLER                     PIC X(80) VALUE
                 'OF FUEL FOR CASH ADVANCE'.

           05 MINIMUM-GALLON-MESSAGE2-N     PIC S9(5) COMP-3 VALUE +76.
           05 MINIMUM-GALLON-MESSAGE2.
              10 FILLER                     PIC X(21) VALUE
                 'DRIVER MUST PURCHASE'.
              10 MINIMUM-GALLON-NR2         PIC ZZZ.ZZ.
              10 MINIMUM-GALLON-MSG2        PIC X(16) VALUE
                 ' GALLONS'.
              10 FILLER                    PIC X(80) VALUE
                 'OF FUEL FOR OIL PURCHASE'.

           05 MAXIMUM-GALLON-MESSAGE-N      PIC S9(5) COMP-3 VALUE +76.
           05 MAXIMUM-GALLON-MESSAGE.
              10 FILLER                     PIC X(25) VALUE
                 'DRIVER MAY ONLY PURCHASE '.
              10 MAXIMUM-GALLON-NR          PIC ZZ9-.
              10 MAXIMUM-GALLON-MSG         PIC X(11) VALUE
                 ' GALLONS OF'.
              10 FILLER                    PIC X(80) VALUE
                 'FUEL AT THIS LOCATION.  SEE FMRM 02.'.
           05 MAXIMUM-GALLON-MESSAGE2.
              10 FILLER                     PIC X(40) VALUE
                 'COMPANY MAY ONLY PURCHASE 263 GALLONS'.
              10 FILLER                    PIC X(80) VALUE
                 'OF FUEL AT THIS LOCATION.  (CONVERSION PROBLEM)'.
           05 MAXIMUM-GALLON-MESSAGE3.
              10 FILLER                     PIC X(20) VALUE
                 'DRIVER MAY ONLY GET '.
              10 MAXIMUM-GALLON-NR3         PIC ZZZZ9-.
              10 MAXIMUM-GALLON-MSG3        PIC X(14) VALUE
                 ' GALLONS OF   '.
              10 MAXIMUM-GALLON-MSG3T       PIC X(08) VALUE
                 ' DIESEL '.
              10 FILLER                     PIC X(30) VALUE
                 'FUEL, DUE TO COMPANY LIMITS.'.

           05 EXCESSIVE-ADVANCE-REQUEST-N   PIC S9(5) COMP-3 VALUE +77.
           05 EXCESSIVE-ADVANCE-REQUEST.
              10 FILLER                     PIC X(40) VALUE
                 'ADVANCE REQUEST AMT EXCEEDS AVAILABLE'.
              10 FILLER                     PIC X(07) VALUE
                 'FUNDS. '.
              10 XCS-ADV-REQ-AMT            PIC ZZ,ZZZ.99-.
              10 FILLER                     PIC X(63) VALUE
                 'IS AVAILABLE.'.
           05 EXCESSIVE-ADVANCE-REQUEST1    PIC X(40) VALUE
              'ADVANCE AMOUNT CAN NOT EXCEED 999.99   '.
           05 EXCESSIVE-ADVANCE-REQUEST2.
              10 FILLER                     PIC X(40) VALUE
                 'DUE TO CONVERSION RATES THIS COMPANY MAY'.
              10 FILLER                     PIC X(13) VALUE
                 'ONLY RECEIVE '.
              10 XCS-ADV-REQ-AMT2           PIC ZZZ.99.
              10 FILLER                     PIC X(61) VALUE
                 ' DOLLARS IN CASH'.

           05 NEW-EXCESSIVE-ADVANCE-REQUEST PIC X(40) VALUE
              'ADV REQUEST AMT EXCEEDS AVAILABLE FUNDS '.

           05 CARD-PURCHASE-EXCEEDED-N      PIC S9(5) COMP-3 VALUE +78.
           05 CARD-PURCHASE-EXCEEDED.
              10 FILLER                     PIC X(40) VALUE
                 'PREMIER CARD PURCHASE LIMIT EXCEEDED'.
              10 XCS-PURC-REQ               PIC ZZ,ZZZ.99-.
              10 FILLER                     PIC X(70) VALUE
                 'IS AVAILABLE.'.

SB0217     05 COMCHEK-MOB-LIMIT-EXCEEDED-N  PIC S9(5) COMP-3
SB0217                                                VALUE +1443.
SB0217     05 COMCHEK-MOB-LIMIT-EXCEEDED.
SB0217        10 FILLER                     PIC X(46) VALUE
SB0217           'COMCHEK MOBILE FUEL WITHDRAWAL LIMIT EXCEEDED '.
SB0217        10 CMCKMOB-AVAIL-AMT          PIC ZZ,ZZZ.99-.
SB0217        10 FILLER                     PIC X(70) VALUE
SB0217           'IS AVAILABLE.'.

           05 FUEL-PRICE-ERROR-N            PIC S9(5) COMP-3 VALUE +79.
           05 FUEL-PRICE-ERROR.
              10 FILLER                     PIC X(05) VALUE
                 'FUEL '.
              10 PRICE-ERROR-TYPE           PIC X(07) VALUE 'CASH'.
              10 FILLER                     PIC X(19) VALUE
                 'PRICE ERROR: AS OF '.
              10 PRICE-ERROR-DATE           PIC X(8).
              10 FILLER                     PIC X(1) VALUE SPACES.

              10 FILLER                     PIC X(21) VALUE
                 'WE SHOW THE PRICE AS '.
              10 PRICE-ERROR-AMT            PIC ZZ.999.
              10 FILLER                     PIC X(1)  VALUE SPACES.
              10 PRICE-ERROR-OVER-FLAG      PIC X(12) VALUE SPACES.
              10 PRICE-ERROR-TAX-MSG        PIC X(40) VALUE SPACES.

           05 FUEL-PRICE-ERROR-TAX-N        PIC S9(5) COMP-3 VALUE +79.
           05 FUEL-PRICE-ERROR-TAX.
              10 FILLER                     PIC X(05) VALUE
                 'FUEL '.
              10 PRICE-ERROR-TYPE-TAX       PIC X(07) VALUE 'CASH'.
              10 FILLER                     PIC X(19) VALUE
                 'PRICE ERROR: AS OF '.
              10 PRICE-ERROR-DATE-TAX       PIC X(8).
              10 FILLER                     PIC X(1) VALUE SPACES.

              10 FILLER                     PIC X(22) VALUE
                 'WE SHOW PRICE W/TAX AS'.
              10 PRICE-ERROR-AMT-TAX        PIC ZZ.999.
              10 FILLER                     PIC X(1)  VALUE SPACES.
              10 PRICE-ERROR-OVER-FLAG-TAX  PIC X(12) VALUE SPACES.
              10 PRICE-ERROR-TAX-MSG-TAX    PIC X(39) VALUE SPACES.

           05 FP-CALC-ERR-MESSAGE-N         PIC S9(5) COMP-3 VALUE +80.
           05 FP-CALC-ERR-MESSAGE.
              10 FILLER                     PIC X(40) VALUE
                 'CALCULATION ERROR. VERIFY ALL FIGURES.'.
              10 FILLER                     PIC X(80) VALUE
                 'VERIFY THAT ALL PRICES ARE CASH PRICES. '.

           05 FP-CALC-ERR-MESSAGE2.
              10 FILLER                     PIC X(40) VALUE
                 'CALCULATION ERROR. VERIFY ALL FIGURES.'.
              10 FILLER                     PIC X(18) VALUE
                 'SUGGESTED COST IS '.
              10 CALC-ERROR-SUGGESTED       PIC Z.ZZZ.
              10 FILLER                     PIC X(16) VALUE
                 ' PER GALLON.'.

           05 FP-CALC-ERR-MESSAGE3.
              10 FILLER                     PIC X(40) VALUE
                 'CALCULATION ERROR. VERIFY ALL FIGURES.'.
              10 FILLER                     PIC X(18) VALUE
                 'SUGGESTED COST IS '.
              10 CALC-ERROR-SUGGESTED-3     PIC Z.ZZZ.
              10 FILLER                     PIC X(16) VALUE
                 ' PER LITER.'.

           05 DUPLICATE-MESSAGE-N           PIC S9(5) COMP-3 VALUE +82.
           05 DUPLICATE-MESSAGE.
              10 DUP-MESSAGE-LINE-1         PIC X(40) VALUE
                 '2ND TRANSACTION IN 2 HRS:'.
              10 FILLER                     PIC X(14) VALUE
                 'REFER TO CTL#'.
              10 DUPLICATE-TRANSACTION      PIC 9(07).

           05 DUPLICATE-NATS-PRE-AUTH-N     PIC S9(5) COMP-3 VALUE +594.
           05 DUPLICATE-NATS-PRE-AUTH       PIC X(40) VALUE
              'DUPLICATE NATS PRE-AUTH REQUEST'.

           05 NEW-DUPLICATE-MESSAGE1        PIC X(40) VALUE
              '2ND TRANSACTION IN 1 HOUR               '.
           05 NEW-DUPLICATE-MESSAGE2.
              10 FILLER                     PIC X(17) VALUE
              'TRANSACTION NBR: '.
              10 NEW-DUPLICATE-TRANSACTION  PIC 9(7)  VALUE ZEROS.
              10 FILLER                     PIC X(9)  VALUE
              ' AT T/S: '.
              10 NEW-DUPLICATE-TS           PIC X(5)  VALUE SPACES.
              10 FILLER                     PIC X(51) VALUE SPACES.

           05 HUB-MESSAGE-N                 PIC S9(5) COMP-3 VALUE +83.
           05 HUB-MESSAGE.
              10 FILLER                     PIC X(12) VALUE
                 'HUB READING '.
              10 HUB-ERROR                  PIC X(28).

           05 PURC-MAX-MESSAGE-N            PIC S9(5) COMP-3 VALUE +84.
           05 PURC-MAX-MESSAGE.
              10 FILLER                     PIC X(40) VALUE
                 'MAXIMUM DAILY PURCHASE LIMIT EXCEEDED'.
              10 FILLER                     PIC X(04) VALUE 'MAX-'.
              10 PURC-MAX-NR                PIC ZZZ9.99.
              10 FILLER                     PIC X(05) VALUE ' VAR-'.
              10 PURC-VAR-NR                PIC Z9.
              10 FILLER                     PIC X(08) VALUE '% AVAIL-'.
              10 PURC-TOTAL-NR              PIC ZZZ9.99.
              10 FILLER                     PIC X(06) VALUE ' USED-'.
              10 PURC-USED-NR               PIC ZZZ9.99.
              10 PURC-DIFF-HD               PIC X(06) VALUE ' OVER-'.
              10 PURC-DIFF-NR               PIC ZZZ9.99.

           05 NEW-PURC-MAX-MESSAGE1         PIC X(40) VALUE
              'MAXIMUM DAILY PURCHASE LIMIT EXCEEDED,  '.
           05 NEW-PURC-MAX-MESSAGE2.
              10 FILLER                     PIC X(06) VALUE ' OVER-'.
              10 NEW-PURC-DIFF-NBR          PIC ZZZ9.99.
              10 FILLER                     PIC X(66) VALUE SPACES.

           05 INQUIRY-MESSAGE-N            PIC S9(5) COMP-3 VALUE +85.
           05 INQUIRY-MESSAGE.
              10 FILLER                     PIC X(40) VALUE
                 '*OK.. SYSTEM IS UNDER INQUIRY.'.
              10 FILLER                     PIC X(80) VALUE
                 'WRITE THIS ORDER UP'.

           05 INVALID-MONEY-SERVICE-N       PIC S9(5) COMP-3 VALUE +88.
           05 INVALID-MONEY-SERVICE         PIC X(40) VALUE
              'INVALID MONEY SERVICE FLAG'.

           05 MUST-USE-MMVC-N               PIC S9(5) COMP-3 VALUE +522.
           05 MUST-USE-MMVC                 PIC X(40) VALUE
              'THIS CUSTOMER MUST USE "MMVC"'.

           05 INVALID-IN-STATION-N          PIC S9(5) COMP-3 VALUE +89.
           05 INVALID-IN-STATION            PIC X(40) VALUE
              'INVALID IN-STATION FLAG'.

           05 CARD-NOT-PRM-EXPENSE-ACCT-N   PIC S9(5) COMP-3 VALUE +91.
           05 CARD-NOT-PRM-EXPENSE-ACCT     PIC X(40) VALUE
              'CARD NOT PREMIER EXPENSE ACCOUNT'.

           05 INVALID-PICKUP-RATE-N         PIC S9(5) COMP-3 VALUE +92.
           05 INVALID-PICKUP-RATE           PIC X(40) VALUE
              'INVALID PICKUP RATE (NOT NUMERIC)'.

           05 INVALID-CASH-ON-CARD-N        PIC S9(5) COMP-3 VALUE +93.
           05 INVALID-CASH-ON-CARD          PIC X(40) VALUE
              'INVALID CASH ON CARD FLAG'.

           05 TRAILER-NR-REQUIRED-N         PIC S9(5) COMP-3 VALUE +434.
           05 TRAILER-NR-REQUIRED           PIC X(40) VALUE
              'TRAILER NUMBER REQUIRED'.

           05 TRAILER-NR-INVALID-N          PIC S9(5) COMP-3 VALUE +435.
           05 TRAILER-NR-INVALID            PIC X(40) VALUE
              'TRAILER NUMBER INVALID'.

           05 TRAILER-HUB-REQUIRED-N        PIC S9(5) COMP-3 VALUE +436.
           05 TRAILER-HUB-REQUIRED          PIC X(40) VALUE
              'TRAILER HUB READING REQUIRED'.

           05 TRAILER-HUB-INVALID-N         PIC S9(5) COMP-3 VALUE +437.
           05 TRAILER-HUB-INVALID           PIC X(40) VALUE
              'TRAILER HUB READING INVALID'.

           05 TRAILER-HR-REQUIRED-N         PIC S9(5) COMP-3 VALUE +589.
           05 TRAILER-HR-REQUIRED           PIC X(40) VALUE
              'TRAILER HOURS REQUIRED'.

           05 TRAILER-HR-INVALID-N          PIC S9(5) COMP-3 VALUE +590.
           05 TRAILER-HR-INVALID            PIC X(40) VALUE
              'TRAILER HOURS INVALID'.

           05 CANADIAN-TAX-AMT-REQ-N        PIC S9(5) COMP-3 VALUE +677.
           05 CANADIAN-TAX-AMT-REQ          PIC X(40) VALUE
              'CANADIAN GOODS & SVCS TAX AMT IS REQ'.

           05 CANADIAN-TAX-AMT-NOT-REQ-N    PIC S9(5) COMP-3 VALUE +678.
           05 CANADIAN-TAX-AMT-NOT-REQ      PIC X(40) VALUE
              'CANADIAN GOODS & SVCS TAX AMT NOT REQ'.

           05 PURCHASE-ORDER-REQUIRED-N     PIC S9(5) COMP-3 VALUE +438.
           05 PURCHASE-ORDER-REQUIRED       PIC X(40) VALUE
              'PURCHASE ORDER NR REQUIRED'.

           05 PURCHASE-ORDER-INVALID-N      PIC S9(5) COMP-3 VALUE +439.
           05 PURCHASE-ORDER-INVALID        PIC X(40) VALUE
              'PURCHASE ORDER NR INVALID'.

           05 PO-NOT-VALID-HERE-N           PIC S9(5) COMP-3 VALUE +440.
           05 PO-NOT-VALID-HERE             PIC X(40) VALUE
              'P.O. MAY NOT BE USED AT THIS LOCATION'.

           05 PO-NOT-VALID-FOR-CARD-N       PIC S9(5) COMP-3 VALUE +441.
           05 PO-NOT-VALID-FOR-CARD         PIC X(40) VALUE
              'P.O. MAY NOT BE USED BY THIS CARDHOLDER'.

           05 PO-LIMIT-EXCEEDED-N           PIC S9(5) COMP-3 VALUE +442.
           05 PO-LIMIT-EXCEEDED             PIC X(40) VALUE
              'REQUEST EXCEEDS PURCHASE ORDER LIMITS'.

           05 PO-REQUIRED-TO-FUEL-HERE-N    PIC S9(5) COMP-3 VALUE +443.
           05 PO-REQUIRED-TO-FUEL-HERE      PIC X(40) VALUE
              'P.O. NUMBER REQUIRED TO FUEL HERE'.

CP0298     05 MUST-BE-AT-A-CREDIT-LOC-N     PIC S9(5) COMP-3 VALUE +772.
  ||       05 MUST-BE-AT-A-CREDIT-LOC.
  ||          10 FILLER                     PIC X(40) VALUE
CP0298           'DRIVER MUST FUEL AT CREDIT LOCATION'.

           05 ACCT-BR000-MUST-BE-BRIDGE-N   PIC S9(5) COMP-3 VALUE +999.
           05 ACCT-BR000-MUST-BE-BRIDGE     PIC X(40) VALUE
              'ACCT BR000 MUST BE BRIDGE TRANSACTION  '.

           05 FUNDED-NOT-ALLOWED-N          PIC S9(5) COMP-3 VALUE +999.
           05 FUNDED-NOT-ALLOWED            PIC X(40) VALUE
              'ACCT BR000 NOT ALLOWED FUNDED PRODUCTS'.

           05 BRIDGE-LIMIT-EXCEEDED-N       PIC S9(5) COMP-3 VALUE +999.
           05 BRIDGE-LIMIT-EXCEEDED         PIC X(40) VALUE
              'BRIDGE LIMIT EXCEEDED'.
           05 BRIDGE-LIMIT-EXCEEDED-2       PIC X(40) VALUE
              'PRESS F4 TO RETRY TRANSACTION AS FUNDED'.

           05 DIRECT-LIMIT-EXCEEDED-N       PIC S9(5) COMP-3 VALUE +999.
           05 DIRECT-LIMIT-EXCEEDED         PIC X(40) VALUE
              'DIRECT BILL LIMIT EXCEEDED'.
           05 DIRECT-LIMIT-EXCEEDED-2       PIC X(40) VALUE
              'PRESS F4 TO RETRY TRANSACTION AS FUNDED'.

           05 INVALID-DRIVER-NR-N        PIC S9(5) COMP-3 VALUE +445.
           05 INVALID-DRIVER-NR             PIC X(40) VALUE
              'INVALID EMPLOYEE NUMBER'.
           05 INVALID-DRIVER-NR-VEHICLE     PIC X(40) VALUE
              'INVALID EMPLOYEE NUMBER (VEHICLE CARD)'.

           05 OIL-AMOUNT-TOO-LARGE-N     PIC S9(5) COMP-3 VALUE +999.
           05 OIL-AMOUNT-TOO-LARGE          PIC X(40) VALUE
              'OIL AMOUNT TOO LARGE. MAX IS 99.99'.

           05 CARD-IN-USE-N                 PIC S9(5) COMP-3 VALUE +453.
           05 CARD-IN-USE                   PIC X(40) VALUE
              'CARD ALREADY IN USE, PLEASE RETRY'.

           05 SC-IN-USE-N                   PIC S9(5) COMP-3 VALUE +453.
           05 SC-IN-USE                     PIC X(40) VALUE
              'SC ALREADY IN USE, PLEASE RETRY'.

           05 WS-CC-FUNDED-CREDIT-ERR-N     PIC S9(5) COMP-3 VALUE +516.
           05 WS-CC-FUNDED-CREDIT-ERR.
              10 FILLER                     PIC X(33) VALUE
                 'CALL CREDIT, NO RECOURSE AVAIL - '.
              10 WS-CC-FUNDED-CREDIT-ACCT   PIC X(07).
              10 FILLER                     PIC X(79)  VALUE
               'IF NO CREDIT IS AVAILABLE, T/S MUST CALL TRUCK COMPANY'.


           05 WS-CC-RELATION-CREDIT-ERR-N   PIC S9(5) COMP-3 VALUE +517.
           05 WS-CC-RELATION-CREDIT-ERR.
              10 FILLER                     PIC X(40) VALUE
                 'THE T/S HAS SET A RELATIONSHIP LIMIT FOR'.
              10 FILLER                     PIC X(70) VALUE
                 'THIS TRUCK COMPANY THIS LIMIT HAS BEEN EXCEEDED'.

           05 WS-CC-RELATION-CREDIT-ERR2-N  PIC S9(5) COMP-3 VALUE +519.
           05 WS-CC-RELATION-CREDIT-ERR2.
              10 FILLER                     PIC X(40) VALUE
                 'THE T/S HAS SET A RELATIONSHIP LIMIT FOR'.
              10 FILLER                     PIC X(70) VALUE
                 'THIS TRUCK COMPANY THIS LIMIT HAS BEEN EXCEEDED REFER'.

           05 WS-CC-SC-CREDIT-ERR-N         PIC S9(5) COMP-3 VALUE +518.
           05 WS-CC-SC-CREDIT-ERR.
              10 FILLER                     PIC X(40) VALUE
                 'THE T/S HAS REACHED ITS CREDIT LIMIT FOR'.
              10 FILLER                     PIC X(30) VALUE
                 'RECOURSE XTNS.  CALL CREDIT - '.
              10 WS-CC-SC-CREDIT-ACCT       PIC X(05).

           05 WS-CC-RECOURSE-SECURITY-REQ-N PIC S9(5) COMP-3 VALUE +515.
           05 WS-CC-RECOURSE-SECURITY-REQ   PIC X(100) VALUE
              'INFORM THE ATTENDANT THAT THE CUSTOMERS CREDIT HAS BEEN '.

           05 SECURITY-CARD-IS-INVALID      PIC X(40) VALUE
              'SECURITY CARD IS INVALID'.
           05 SECURITY-CARD-IS-INVALID-N    PIC S9(5) COMP-3 VALUE +508.
           05 SECURITY-CARD-NOT-ACTIVE      PIC X(40) VALUE
              'SECURITY CARD IS NOT ACTIVE'.
           05 SECURITY-CARD-IS-REQUIRED     PIC X(40) VALUE
              'SECURITY CARD IS REQUIRED'.
           05 SECURITY-CARD-IS-REQUIRED-N   PIC S9(5) COMP-3 VALUE +508.

           05 SECURITY-PIN-IS-INVALID       PIC X(40) VALUE
              'SECURITY PIN IS INVALID'.
           05 SECURITY-PIN-IS-INVALID-N     PIC S9(5) COMP-3 VALUE +508.
           05 SECURITY-PIN-EXCESSIVE        PIC X(40) VALUE
              'EXCESSIVE PIN TRIES    '.
           05 SECURITY-PIN-EXCESSIVE-N      PIC S9(5) COMP-3 VALUE +591.
           05 INVALID-ATM-NETWORK           PIC X(40) VALUE
              'CARD USED ON WRONG NETWORK'.
           05 INVALID-ATM-NETWORK-N         PIC S9(5) COMP-3 VALUE +665.

           05 SETTLEMENT-DETAIL-NOT-FOUND-N PIC S9(5) COMP-3 VALUE +000.
           05 SETTLEMENT-DETAIL-NOT-FOUND   PIC X(40) VALUE
              'SETTLEMENT DETAIL NOT FOUND'.
           05 SETTLEMENT-ALREADY-PAID-N     PIC S9(5) COMP-3 VALUE +613.
           05 SETTLEMENT-ALREADY-PAID       PIC X(40) VALUE
              'TRANSACTION ALREADY PAID - ADJ REQUIRED'.
           05 UNATTENDED-CANCEL-MSG         PIC X(40) VALUE
              'AN UNATTENDED XTN CAN NOT BE CANCELLED'.
           05 CANCEL-SETTLE-MSG             PIC X(40) VALUE
              'VERIFY SETTLEMENT IS ACTIVE & PRESS PF3.'.

JS0699     05 TAX-NOT-ALLOWED-N             PIC S9(5) COMP-3 VALUE +678.
JS0699     05 TAX-NOT-ALLOWED               PIC X(40) VALUE
JS0699        'TAX AMT NOT ALLOWED.'.
JS1199     05 CARD-IS-OFF-HOURS             PIC X(40) VALUE
JS1199        'CARD IS BEING USED OFF HOURS'.
JS1199     05 CARD-IS-OFF-HOURS-N           PIC S9(5) COMP-3 VALUE +783.
JS1199     05 CARD-HAS-EXPIRED-N            PIC S9(5) COMP-3 VALUE +784.
JS1199     05 CARD-HAS-EXPIRED              PIC X(40) VALUE
JS1199        'CARD HAS EXPIRED'.
102810***** EDITS FOR ERRORS 785 - 790 MOVED TO PGM TSFMO0LP
102810***** EDITS FOR ERRORS 1146 - 1149 ADDED TO PGM TSFMO0LP
JS1199***  05 FLEET-LIMITS-NOT-AVAIL-N      PIC S9(5) COMP-3 VALUE +790.
JS1199***  05 FLEET-LIMITS-NOT-AVAIL        PIC X(40) VALUE
JS1199***     'FLEET PURCHASE NOT AVAILABLE'.
JS1199***  05 FLEET-XTN-AMT-EXCEEDED-N      PIC S9(5) COMP-3 VALUE +785.
JS1199***  05 FLEET-XTN-AMT-EXCEEDED        PIC X(40) VALUE
JS1199***     'FLEET XTN AMOUNT EXCEEDED'.
JS1199***  05 FLEET-DAY-AMT-EXCEEDED-N      PIC S9(5) COMP-3 VALUE +786.
JS1199***  05 FLEET-DAY-AMT-EXCEEDED        PIC X(40) VALUE
JS1199***     'FLEET DAILY AMOUNT EXCEEDED'.
JS1199***  05 FLEET-CYC-AMT-EXCEEDED-N      PIC S9(5) COMP-3 VALUE +787.
JS1199***  05 FLEET-CYC-AMT-EXCEEDED        PIC X(40) VALUE
JS1199***     'FLEET CYCLE AMOUNT EXCEEDED'.
JS1199***  05 FLEET-DAY-XTN-EXCEEDED-N      PIC S9(5) COMP-3 VALUE +788.
JS1199***  05 FLEET-DAY-XTN-EXCEEDED        PIC X(40) VALUE
JS1199***     'FLEET DAILY XTNS EXCEEDED'.
JS1199***  05 FLEET-CYC-XTN-EXCEEDED-N      PIC S9(5) COMP-3 VALUE +789.
JS1199***  05 FLEET-CYC-XTN-EXCEEDED        PIC X(40) VALUE
JS1199***     'FLEET CYCLE XTNS EXCEEDED'.
MP0800     05 INVALID-ATM-TRANS-N           PIC S9(5) COMP-3 VALUE +830.
MP0800     05 INVALID-ATM-TRANS             PIC X(40) VALUE
MP0800        'INVALID ATM TRANSACTION'.
MP0600     05 PETRO-CANADA-RESTRICTED-N     PIC S9(5) COMP-3 VALUE +831.
MP0600     05 PETRO-CANADA-RESTRICTED       PIC X(40) VALUE
MP0600        'CUSTOMER MAY NOT FUEL AT PETRO CANADA'.
MP0800     05 ATM-BLOCKED-CARD-N            PIC S9(5) COMP-3 VALUE +832.
MP0800     05 ATM-BLOCKED-CARD              PIC X(40) VALUE
MP0800        'ATM CARD BLOCKED'.

JS1101     05 WS-E-EXP-DATE-N           PIC 9(05) VALUE 784.
JS1101     05 WS-E-EXP-DATE             PIC X(80) VALUE
JS1101        'INVALID EXPIRATION DATE (FORMAT MMYY)'.
JS1101
JS1101     05 WS-E-EXP-DATE1-N          PIC 9(05) VALUE 784.
JS1101     05 WS-E-EXP-DATE1            PIC X(80) VALUE
JS1101        'INVALID EXPIRATION DATE (EXPIRED)'.
JS1101
JS1101     05 WS-E-EXP-DATE2-N          PIC 9(05) VALUE 784.
JS1101     05 WS-E-EXP-DATE2            PIC X(80) VALUE
JS1101        'INVALID EXPIRATION DATE (MISMATCH)'.
JS1101
JS1101     05 WS-E-EXP-DATE3-N          PIC 9(05) VALUE 784.
JS1101     05 WS-E-EXP-DATE3            PIC X(80) VALUE
JS1101        'INVALID EXPIRATION DATE (RENEWAL)'.

CP0406     05 INVALID-PROD-9-TYPE          PIC S9(5) COMP-3 VALUE +1086.
CC0502     05 INVALID-PROD-9-TYPE-MSG       PIC X(40) VALUE
CC0502        'INVALID PRODUCT 9 TYPE'.

CP0406     05 INVALID-OTHER-FUEL-TYPE      PIC S9(5) COMP-3 VALUE +1087.
CC0502     05 INVALID-OTHER-FUEL-TYPE-MSG   PIC X(40) VALUE
CC0502        'INVALID OTHER FUEL TYPE'.

CP0406     05 OTHER-FUEL-TYPE-REQUIRED     PIC S9(5) COMP-3 VALUE +1079.
CP0406     05 OTHER-FUEL-TYPE-REQUIRED-MSG PIC X(40) VALUE
CP0406        'OTHER FUEL PROD CODE REQUIRED'.

CP0406     05 INVALID-REEFER-SUB-PROD      PIC S9(5) COMP-3 VALUE +1080.
CP0406     05 INVALID-REEFER-SUB-PROD-MSG  PIC X(40) VALUE
CP0406        'INVALID REEFER SUB PROD CODE'.

CP0406     05 REEFER-SUB-PROD-REQUIRED     PIC S9(5) COMP-3 VALUE +1081.
CP0406     05 REEFER-SUB-PROD-REQUIRED-MSG PIC X(40) VALUE
CP0406        'REEFER SUB PROD CODE REQUIRED'.

CP0406     05 INVALID-NR1-SUB-PROD         PIC S9(5) COMP-3 VALUE +1082.
CP0406     05 INVALID-NR1-SUB-PROD-MSG     PIC X(40) VALUE
CP0406        'INVALID NR1 DIESEL SUB PROD CODE'.

CP0406     05 NR1-SUB-PROD-REQUIRED        PIC S9(5) COMP-3 VALUE +1083.
CP0406     05 NR1-SUB-PROD-REQUIRED-MSG    PIC X(40) VALUE
CP0406        'NR1 DIESEL SUB PROD CODE REQUIRED'.

CP0406     05 INVALID-NR2-SUB-PROD         PIC S9(5) COMP-3 VALUE +1084.
CP0406     05 INVALID-NR2-SUB-PROD-MSG     PIC X(40) VALUE
CP0406        'INVALID NR2 DIESEL SUB PROD CODE'.

CP0406     05 NR2-SUB-PROD-REQUIRED        PIC S9(5) COMP-3 VALUE +1085.
CP0406     05 NR2-SUB-PROD-REQUIRED-MSG    PIC X(40) VALUE
CP0406        'NR2 DIESEL SUB PROD CODE REQUIRED'.

040606     05 NR2-FUEL-NOT-ALLOWED-N       PIC S9(5) COMP-3 VALUE +1078.
040606     05 NR2-FUEL-NOT-ALLOWED         PIC X(40) VALUE
040606        'NR2 FUEL NOT ALLOWED THIS COMPANY'.

080210     05 WS-E-IRIS-DENIED-N           PIC S9(5) COMP-3 VALUE +1100.
080210     05 WS-E-IRIS-DENIED             PIC X(80) VALUE
080210        'TRANSACTION DENIED - PLEASE CALL YOUR COMPANY'.

021908     05 INACTIVE-NODE-ID-N           PIC S9(5) COMP-3 VALUE +1103.
021908     05 INACTIVE-NODE-ID             PIC X(40) VALUE
021908        'INACTIVE NODE ID FOR THIS CARD   '.

021908     05 NODE-ID-NOT-FOUND-N          PIC S9(5) COMP-3 VALUE +1104.
021908     05 NODE-ID-NOT-FOUND            PIC X(40) VALUE
021908        'NODE ID NOT FOUND FOR THIS CARD  '.

021908     05 HIER-ID-NOT-FOUND-N          PIC S9(5) COMP-3 VALUE +1105.
021908     05 HIER-ID-NOT-FOUND            PIC X(40) VALUE
021908        'HIERARCHY ID NOT FOUND FOR THIS CARD  '.

072811     05 INVALID-CARD-CNTRY-CD-N      PIC S9(5) COMP-3 VALUE +1161.
072811     05 INVALID-CARD-CNTRY-CD        PIC X(40) VALUE
072811        'INVALID CARD FOR COUNTRY CODE'.

041112     05 INVALID-RFID-NBR-N           PIC S9(5) COMP-3 VALUE +1187.
041112     05 INVALID-RFID-NBR             PIC X(40) VALUE
041112        'RFID TAG NOT FOUND, PLEASE SWIPE CARD'.

SB0614     05 SURCHARGE-LOCATION-ERR-N     PIC S9(5) COMP-3 VALUE +1298.
SB0614     05 SURCHARGE-LOCATION-ERR       PIC X(40) VALUE
SB0614        'TRANS EXCEEDS 2 PRODUCTS @ SURCHARGE LOC'.

           02 FIELD-LENGTH         PIC S99 COMP SYNC VALUE +0.

      *----------------------------------------------------------------*
      *    LETTER TRANSLATION TABLES                                   *
      *----------------------------------------------------------------*

         01 TAB-LTR.
      *  DATA FORMAT IS  LTR/DRVN PTR
           03 TAB-A                PIC X(3) VALUE 'A01'.
           03 TAB-B                PIC X(3) VALUE 'B02'.
           03 TAB-C                PIC X(3) VALUE 'C03'.
           03 TAB-D                PIC X(3) VALUE 'D04'.
           03 TAB-E                PIC X(3) VALUE 'E05'.
           03 TAB-F                PIC X(3) VALUE 'F06'.
           03 TAB-G                PIC X(3) VALUE 'G07'.
           03 TAB-H                PIC X(3) VALUE 'H08'.
           03 TAB-I                PIC X(3) VALUE 'I09'.
           03 TAB-J                PIC X(3) VALUE 'J10'.
           03 TAB-K                PIC X(3) VALUE 'K11'.
           03 TAB-L                PIC X(3) VALUE 'L12'.
           03 TAB-M                PIC X(3) VALUE 'M13'.
           03 TAB-N                PIC X(3) VALUE 'N14'.
           03 TAB-O                PIC X(3) VALUE 'O15'.
           03 TAB-P                PIC X(3) VALUE 'P16'.
           03 TAB-Q                PIC X(3) VALUE 'Q17'.
           03 TAB-R                PIC X(3) VALUE 'R18'.
           03 TAB-S                PIC X(3) VALUE 'S19'.
           03 TAB-T                PIC X(3) VALUE 'T20'.
           03 TAB-U                PIC X(3) VALUE 'U21'.
           03 TAB-V                PIC X(3) VALUE 'V22'.
           03 TAB-W                PIC X(3) VALUE 'W23'.
           03 TAB-X                PIC X(3) VALUE 'X24'.
           03 TAB-Y                PIC X(3) VALUE 'Y25'.
           03 TAB-Z                PIC X(3) VALUE 'Z26'.

         01 TAB-LTR-R REDEFINES TAB-LTR.
           03 TABLTR               OCCURS 26 TIMES INDEXED BY LTR-INDX.
             05 LTR-SRCH           PIC X.
             05 TABNBR             PIC 99.

         01 DATA-CAPTURE-TABLE.
           03 FILLER               PIC X(10) VALUE '06155SPEC'.
           03 FILLER               PIC X(10) VALUE '02077SPEC'.
           03 FILLER               PIC X(10) VALUE HIGH-VALUES.
         01 DATA-CAPTURE-TABLE-R   REDEFINES DATA-CAPTURE-TABLE.
           03 DCT-ENTRY            OCCURS 3 TIMES
                                   INDEXED BY DCT-INDX.
              05 DCT-FUEL-CODE     PIC X(5).
              05 DCT-FUEL-TYPE     PIC X(5).

       01  FILLER.
      **** (RELATIONSHIP-MANAGEMENT-FLDS) ****
           02  WS-LIMITED-NETWORK-PRODUCTS.
               03  WS-PUR-OPTIONS.
                   04  WS-PUR-OPT-AREA     PIC X OCCURS 3 TIMES.
               03  WS-PROD-OPT-AREA        PIC X(36).
           02  WS-DIRECT-BILL-PRODUCTS.
               03  WS-DB-PRODUCTS          PIC X(36).
               03  WS-DB-PURCHASE          PIC X OCCURS 3 TIMES.
           02  RMR-FOUND-SW                PIC 9        VALUE 0.
               88  RMR-RECORD-FOUND                     VALUE 1.
           02  RMR-CREDIT-SW               PIC 9        VALUE 0.
           02  RMR-MASTER-CODE-1           PIC 9(4).
           02  RMR-MASTER-CODE-2           PIC 9(5).
           02  CONTINUE-WORK-FIELDS.
              05  CONTINUE-NETWORK-READ-SW    PIC 9        VALUE 0.
                  88  CONTINUE-NETWORK-READ                VALUE 0.
              05  CONTINUE-DIRECT-BILLING-SW  PIC 9        VALUE 0.
                  88  CONTINUE-DIRECT-BILLING              VALUE 0.
              05  CONTINUE-MAXIMUM-GALLONS-SW PIC 9        VALUE 0.
                  88  CONTINUE-MAXIMUM-GALLONS             VALUE 0.
              05  CONTINUE-CUSTOM-FEE-SW PIC 9             VALUE 0.
                  88  CONTINUE-CUSTOM-FEE                  VALUE 0.
              05  CONTINUE-BRIDGE-CUSTOMER-SW PIC 9        VALUE 0.
                  88  CONTINUE-BRIDGE-CUSTOMER             VALUE 0.
              05  CONTINUE-COMDATA-COMPLETE-SW PIC 9       VALUE 0.
                  88  CONTINUE-COMDATA-COMPLETE            VALUE 0.
              05  CONTINUE-NEG-PRICE-SW       PIC 9        VALUE 0.
                  88  CONTINUE-NEG-PRICE                   VALUE 0.
              05  CONTINUE-BULK-FUEL-SW       PIC 9        VALUE 0.
                  88  CONTINUE-BULK-FUEL                   VALUE 0.
              05  CONTINUE-COST-PLUS-SW       PIC 9        VALUE 0.
                  88  CONTINUE-COST-PLUS                   VALUE 0.
              05  CONTINUE-TERM-FUEL-SW       PIC 9        VALUE 0.
                  88  CONTINUE-TERM-FUEL                   VALUE 0.
              05  CONTINUE-SPECIAL-SETTLEMENT-SW PIC 9     VALUE 0.
                  88  CONTINUE-SPECIAL-SETTLEMENT          VALUE 0.
              05  CONTINUE-KEYED-CARD-SW      PIC 9        VALUE 0.
                  88  CONTINUE-KEYED-CARD                  VALUE 0.
              05  CONTINUE-COMFUEL-SW         PIC 9        VALUE 0.
                  88  CONTINUE-COMFUEL                     VALUE 0.
091411        05  CONTINUE-NET-PRICING-SW     PIC 9        VALUE 0.
091411            88  CONTINUE-NET-PRICING                 VALUE 0.
SB0513        05  CONTINUE-MAX-GALLONS-RFR-SW PIC 9        VALUE 0.
SB0513            88  CONTINUE-MAX-GALLONS-RFR             VALUE 0.
SB0513        05  CONTINUE-MAX-GALLONS-OTH-SW PIC 9        VALUE 0.
SB0513            88  CONTINUE-MAX-GALLONS-OTH             VALUE 0.
DR0317
DR0317* WS-PRICING-FILE-AREA
DR0422     COPY TSFMW260 IN CPYREL.

           COPY DFHAID.
           COPY DFHBMSCA.

      *------------------------------
      * WORK DFHCOMMAREA.
      *------------------------------
BW0211 01  WS-DFHCOMMAREA.
           05 FILLER                    PIC X(01) OCCURS 2500 TIMES
                                              DEPENDING ON EIBCALEN.
      *------------------------------
        LINKAGE SECTION.
      *------------------------------
BW0211 01  DFHCOMMAREA.
           05 FILLER                    PIC X(01) OCCURS 2500 TIMES
                                              DEPENDING ON EIBCALEN.
      *==============================
       PROCEDURE DIVISION.
      *==============================
           PERFORM 00100-STARTUP
           PERFORM 00200-CHECK-FOR-POS.

      **** (RECEIVE THE SCREEN INTO THE UNFORMATTED AREA) ****
           PERFORM 00300-GET-INFO-TO-PROCESS.
           PERFORM 00310-CHECK-FOR-STORE-REQ.

      **** (SETUP THE COMMON AREA) ****
           MOVE DFHCOMMAREA    TO WS-DFHCOMMAREA
           MOVE WS-DFHCOMMAREA TO FP-COMMON-AREA

CP1098     PERFORM 00320-CHECK-ADJ-OVERRIDE.

      **** (CHECK FOR FIRST TIME INTO PROGRAM) ****
           IF EIBCALEN = ZEROES
              PERFORM 01000-FIRST-TIME
           END-IF

      **** (SEE WHICH SCREEN USER IS ON                      ) ****
      **** (COM-STAGE = 1 IS ON 1ST ENTRY SCREEN             ) ****
      **** (COM-STAGE = 2 IS ON THE MAIN ENTRY SCREEN        ) ****
      **** (COM-STAGE = 3 IS ON THE TEMP CODE ENTRY SCREEN   ) ****
      **** (COM-STAGE = 500 ENTER PRESSED AFTER COMPLETED XTN) ****
           EVALUATE COM-STAGE
              WHEN +1
                 PERFORM PROCESS-INITIAL-MAP
                 PERFORM FP-0000
              WHEN +2
                 MOVE 'Y' TO WS-LOOP-FP-0100
                 PERFORM FP-0100
                    UNTIL WS-LOOP-FP-0100 = 'N'
              WHEN +3
                 PERFORM TN999-UNKNOWN-STOP
                 PERFORM FP-0000
              WHEN 500
                 MOVE SPACES TO UNFORMATTED-AREA
                 PERFORM 01000-FIRST-TIME
                 PERFORM FP-0000
           END-EVALUATE.

           PERFORM FP-PROGRAM-LOGIC-ERROR.

      *===============================
       FP-PROGRAM-LOGIC-ERROR.
      *===============================
DR0422     MOVE 'FP-PROGRAM-LOGIC-ERROR'    TO CXUTS0ML-PARAGRAPH.
           MOVE 'PROGRAM LOGIC ERROR - 1A' TO UNFORMATTED-AREA
           EXEC CICS SEND
                FROM   (UNFORMATTED-AREA)
                LENGTH (80)
                ERASE
           END-EXEC
           PERFORM CHECK-FOR-NORMAL-EIBRESP
           PERFORM EXEC-CICS-RETURN.

      *=================================
       00100-STARTUP.
      *=================================
           PERFORM CHECK-FOR-STANDIN.
           PERFORM COPY-CXISP001.
           PERFORM 90010-GET-SYSTEM-DATE.
           PERFORM 90015-GET-CURRENT-DATE.
           PERFORM ORDRFIL-RECD-INIT THRU ORINIT-9999
           IF OPACSFL-SUFFIX NOT = SPACES
              MOVE OPACSFL-SUFFIX TO OPACSFL-SFX
           END-IF
           MOVE FF-PERCENTAGES TO SAVE-PCTUP.

      **** (THE FOLLOWING INIT IS TO PREVENT ASRA ABENDS) ****
JS1199     INITIALIZE FUEL-MANAGEMENT-DAILY-LOG-RECD.
JS0503     INITIALIZE WS-USER-INPUT-WORK-AREA.
JS0206     INITIALIZE WS-PRD-FEE-SC-WORK-AREA.
MP0606     INITIALIZE WS-SUB-PROD-WORK-FIELDS.
SB0814     INITIALIZE CANADIAN-TAX-LINK-AREA.
BG0418     INITIALIZE WS-DNET-CP-COMPONENTS(1).
BG0418     INITIALIZE WS-DNET-CP-COMPONENTS(2).
BG0418     INITIALIZE WS-DNET-CP-COMPONENTS(3).
BG0418     INITIALIZE WS-DNET-CP-COMPONENTS(4).
PJ0122     INITIALIZE WS-PD-PROD-DISC-INFO(1).
PJ0122     INITIALIZE WS-PD-PROD-DISC-INFO(2).
PJ0122     INITIALIZE WS-PD-PROD-DISC-INFO(3).
PJ0122     INITIALIZE WS-PD-PROD-DISC-INFO(4).

      *=================================
       00200-CHECK-FOR-POS.
      *=================================
      **** (CHECK FOR POS OR SETTLEMENT REQUEST) ****
           IF EIBTRNID = 'POS'  OR
                         'FMSS' OR
                         'FMST' OR
                         'PS32' OR
                         'PSNR' OR
MP0398                   'PSNC' OR
                         'XCAT' OR
                         'PS42' OR
MP0903                   'PS51' OR
MP0303                   'PS92' OR
                         'ITP2' OR
JS1199                   'XCMP' OR
JS1002                   'MCMP' OR
MP1001                   'FMED' OR
CC0502                   'FMBP' OR
MP0303                   'PSA1' OR
CC0803                   'FMMP' OR
MP0105                   'PSD1' OR
CP0207                   'ITTF' OR
ED0914        EIBTRNID (1:2) = 'RS' OR
ED0914        EIBTRNID (1:2) = 'WS'
              MOVE 'Y'                    TO WS-POS-FLAG
              MOVE DFHCOMMAREA            TO WS-DFHCOMMAREA
              MOVE WS-DFHCOMMAREA         TO UNFORMATTED-AREA
              PERFORM FORMAT-INPUT-AREA
      ******** 'TEMPORARILY' COMMENTED OUT ON 5/10/2012
041112********PERFORM CHK-RFID-LAST-USE-FLDS
              MOVE INP-SETTLE-PRINTER-FLAG TO WS-SAVE-PRINTER-FLAG
              PERFORM 01000-FIRST-TIME
              MOVE 'Y' TO WS-LOOP-FP-0100
              PERFORM FP-0100
                 UNTIL WS-LOOP-FP-0100 = 'N'
              PERFORM FP-PROGRAM-LOGIC-ERROR
           END-IF.

      *=================================
       00300-GET-INFO-TO-PROCESS.
      *=================================
DR0422     MOVE '00300-GET-INFO-TO-PROCESS' TO CXUTS0ML-PARAGRAPH.
           MOVE SPACES TO UNFORMATTED-AREA
           MOVE 3270-SBA-1 TO 3270-SBA
           MOVE LOW-VALUES TO 3270-SBA-1
           MOVE LOW-VALUES TO FP2MAPO, FPMAP1O, FPMAPBO.

           IF INITIATED-VIA-START
              EXEC CICS RETRIEVE
                   INTO   (UNFORMATTED-AREA)
                   LENGTH (LEN)
                   RESP   (EIBRESP)
              END-EXEC
              PERFORM CHECK-FOR-NORMAL-EIBRESP
           ELSE
              IF WS-POS-FLAG NOT = 'Y'
                 EXEC CICS RECEIVE
                      INTO   (UNFORMATTED-AREA)
                      LENGTH (UNFORMATTED-LENG)
                      RESP   (EIBRESP)
                 END-EXEC
                 PERFORM CHECK-FOR-NORMAL-EIBRESP
              END-IF
           END-IF
           IF EIBCALEN = ZEROES
              IF UNFORMATTED-AREA (1:2) NOT = 'FP'
                 MOVE UNFORMATTED-AREA (4: ) TO WS-WORK-FIELD
                 MOVE WS-WORK-FIELD          TO UNFORMATTED-AREA
              END-IF
JS0503        PERFORM FORMAT-INPUT-AREA
           END-IF.

      *=================================
       00310-CHECK-FOR-STORE-REQ.
      *=================================
           IF NOT THIS-BE-A-RESTORE-REQUEST
              EXEC CICS DELETEQ TS
                   QUEUE (QUEUE-ID-AREA)
                   RESP  (EIBRESP)
              END-EXEC.

           IF EIBCALEN > ZEROES AND
              EIBAID = DFHPF6
              MOVE EIBTRMID TO QID-TRMID
              EXEC CICS DELETEQ TS
                   QUEUE (QUEUE-ID-AREA)
                   RESP  (EIBRESP)
              END-EXEC
              MOVE DFHCOMMAREA      TO WS-DFHCOMMAREA
              MOVE WS-DFHCOMMAREA   TO WS-Q-COMMAREA
              MOVE UNFORMATTED-AREA TO WS-Q-UNFORMATTED
              MOVE LEN              TO WS-Q-MAPLEN
              EXEC CICS WRITEQ TS
                   FROM   (WS-Q-AREA)
                   QUEUE  (QUEUE-ID-AREA)
092009             LENGTH (LENGTH OF WS-Q-AREA)
                   ITEM   (WS-ITEM)
              END-EXEC
              MOVE 'XTN SAVED, KEY "FP =" TO RESTORE' TO OUT-COMENT
              EXEC CICS SEND
                   FROM (OUT-COMENT)
                   LENGTH (32)
                   ERASE
              END-EXEC
              PERFORM EXEC-CICS-RETURN.

CP1098*=================================
 " "   00320-CHECK-ADJ-OVERRIDE.
 " "  *=================================
 " "       IF EIBCALEN > ZEROES AND
 " "          EIBAID = DFHPF4   AND
 " "          COM-ADJ-OVERRIDE-FL = 'N'
 " "             MOVE 'Y' TO COM-ADJ-OVERRIDE-FL
 " "             PERFORM PROCESS-INITIAL-MAP
 " "             PERFORM FP-0000.

      *=================================
       01000-FIRST-TIME.
      *=================================
           INITIALIZE FP-COMMON-AREA.
091614     MOVE WS-DEFAULT-MAX-QTY TO COM-MAXIMUM-GALLONS
091614                                COM-MAX-RFR-GALLONS
091614                                COM-MAX-OTH-GALLONS
091614                                COM-RMR-MAXIMUM-GALLONS
091614                                COM-RMR-MAX-RFR-GALLONS
091614                                COM-RMR-MAX-OTH-GALLONS
091614                                COM-MAX-NR2-GALLONS
091614                                COM-MAX-NR1-GALLONS.

           MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO.
           EVALUATE TRUE
              WHEN FPM-REBUILD
                   MOVE 'N' TO NON-PROD-FLAG
                   PERFORM FP-7000
              WHEN FPM-OPEN
                   MOVE 'N' TO NON-PROD-FLAG
                   PERFORM FP-7000
              WHEN THIS-IS-A-CANCEL-REQ
                   MOVE 'N' TO NON-PROD-FLAG
                   PERFORM FP-5000
              WHEN THIS-BE-A-CANCEL-REQUEST
                   MOVE 'N'                TO NON-PROD-FLAG
                   MOVE INP-CANCEL-AREA    TO WS-CANCEL-AREA
                   MOVE 'Y'                TO WS-PC-CANCEL-FLAG
                   MOVE SPACES             TO WS-INP-FP-CANCEL
                   MOVE 'CANCEL'           TO FP-CANCEL-REQ
MB1012             IF WS-CANCEL-CARD-NR > SPACES AND
MB1012                WS-CANCEL-CARD-NR NOT NUMERIC
MB1012                MOVE WS-CANCEL-CARD-NR  TO WS-UIWA-CRD-TOKEN
MB1012                PERFORM FIA-GET-CARD-NBR-FROM-TOKEN
MB1012                IF WS-UIWA-CARD-NR NUMERIC
MB1012                   MOVE WS-UIWA-CARD-NR-10 TO FP-CANCEL-COMMON
MB1012                ELSE
MB1012                   MOVE ZEROES             TO FP-CANCEL-COMMON
MB1012                END-IF
MB1012             ELSE
                      MOVE WS-CANCEL-CARD-NR  TO FP-CANCEL-COMMON
MB1012             END-IF
CP1011             IF WS-CNL-TRANS-NR-N NUMERIC
CP1011                MOVE WS-CNL-TRANS-NR-N TO FPCR-CTL-7
CP1011                MOVE FP-CANCEL-COMMON  TO FPCR-CTL7-CARD
CP1011             ELSE
CP1011                MOVE WS-CNL-TRANS-NR-6 TO FPCR-CTL-6X
CP1011                MOVE FP-CANCEL-COMMON  TO FPCR-CTL6-CARD
CP1011             END-IF
                   PERFORM FP-5000
              WHEN THIS-BE-AN-ATM-CANCEL
                   PERFORM FP-ATM-CANCEL
              WHEN THIS-BE-A-SETTLEMENT-REQUEST
                   MOVE 'N'                   TO NON-PROD-FLAG
                   MOVE INP-SETTLE-TS-CODE    TO WS-UIWA-SC-CODE
                   MOVE INP-SETTLE-TS-CODE    TO COM-FP-SC-CODE
                   PERFORM SETTLEMENT-REQUEST
                   MOVE SETTLE-NOT-POSSIBLE   TO OUT-COMENT-1
                   IF ERROR-FLAG = 'S'
                      MOVE 'USE FMST 01'      TO OUT-COMENT-1
                   END-IF
                   MOVE SETTLE-NOT-POSSIBLE-N TO POS-ERROR-NUMBER
ED0810             MOVE 'N'                   TO WS-NOTIFY-IRIS-FL
                   PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
              WHEN THIS-BE-A-RESTORE-REQUEST
                   PERFORM PROCESS-RESTORE-REQUEST
              WHEN OTHER
                   PERFORM FP-0000
           END-EVALUATE.

      *====================================
       PROCESS-RESTORE-REQUEST.
      *====================================
           MOVE EIBTRMID TO QID-TRMID
           EXEC CICS READQ TS
                QUEUE  (QUEUE-ID-AREA)
                INTO   (WS-Q-AREA)
092009          LENGTH (LENGTH OF WS-Q-AREA)
                ITEM   (WS-ITEM)
                RESP   (EIBRESP)
           END-EXEC
           IF EIBRESP NOT = DFHRESP(NORMAL)
              MOVE 'NO SAVED DATA - RESTORE TERMINATED' TO OUT-COMENT
              EXEC CICS SEND
                   FROM   (OUT-COMENT)
                   LENGTH (40)
                   ERASE
                   RESP   (EIBRESP)
              END-EXEC
              PERFORM EXEC-CICS-RETURN.

           MOVE 'Y' TO WS-THIS-BE-A-RESTORE
JS0604     MOVE 1090 TO EIBCALEN
           EXEC CICS DELETEQ TS
                QUEUE (QUEUE-ID-AREA)
                RESP  (EIBRESP)
           END-EXEC
           MOVE WS-Q-COMMAREA    TO FP-COMMON-AREA
           MOVE WS-Q-UNFORMATTED TO UNFORMATTED-AREA
082008     MOVE +1200            TO UNFORMATTED-LENG
           MOVE WS-Q-MAPLEN      TO LEN
           IF COM-STAGE = 1
              PERFORM PROCESS-INITIAL-MAP
              PERFORM FP-0000
           ELSE
              MOVE 'Y' TO WS-LOOP-FP-0100
              PERFORM FP-0100
                 UNTIL WS-LOOP-FP-0100 = 'N'.

      *====================================
       FP-0000.
      *====================================
           PERFORM 10100-CHECK-FOR-EXIT.
           IF THIS-BE-A-PC-REQUEST
              PERFORM SETUP-PC-REQUEST
           ELSE
              PERFORM FP-0000-PROCESS-ENTRY
           END-IF.

      *====================================
       FP-0000-PROCESS-ENTRY.
      *====================================
      **** (IF NOT 1ST TIME AND THE CARD NR HAS NOT CHANGED) ****
      **** (SKIP THE CARD NUMBER FORMAT ROUTINE            ) ****
           IF COM-STAGE      = +1 AND
              ERROR-FLAG NOT = 'F'
              CONTINUE
           ELSE
              PERFORM 10200-FORMAT-CARD-NUMBER
           END-IF

      **** (ASSUME ALL SERVICE AVAILABLE) ****
JS0604     MOVE '1' TO COM-PUR-OPTIONS-FUEL,
JS0604                 COM-PUR-OPTIONS-OIL,
JS0604                 COM-PUR-OPTIONS-CASH,
JS0604                 COM-PUR-OPTIONS-PROD.
           MOVE '0' TO COM-PO-REQUIRED-FOR-FUEL
                       COM-PO-REQUIRED-FOR-OIL
                       COM-PO-REQUIRED-FOR-CASH
                       COM-PO-REQUIRED-FOR-PROD.
           MOVE ALL 'I' TO COM-PROD-OPT-AREA.

      **** (SETUP MISC STUFF) ****
CP0807     MOVE WS-ID-NR    TO COM-FP-ID-NR.
           MOVE INP-CO-CODE TO COM-FP-CO-CODE.
           MOVE SPACES      TO COM-PRM-NETWORKING
           MOVE ALL ZEROS   TO COM-DIRECT-BILL-CONTROL.

      **** (PROCESS THE SERVICE CENTER INFO) ****
           PERFORM 10300-SEE-IF-TEMP-SC-KEYED.
           PERFORM 10310-CHECK-FOR-INVALID-SC.
           PERFORM 10320-CHECK-FOR-CASH-ONLY-SC.
           PERFORM 10330-CHECK-FOR-UNKNOWN-SC.
           PERFORM 10340-READ-SCMSTR.

      **** (PROCESS THE OTHER INFORMATION) ****
           IF COM-STAGE = ZEROES
              CONTINUE
           ELSE
              PERFORM READ-CDNCUST
              PERFORM 10410-VALIDATE-UNIT-DATA
              PERFORM 10420-VALIDATE-MAX-PURC
              PERFORM 10430-VALIDATE-TRIP-ALLOW
              PERFORM 10440-VALIDATE-EXP-BALANCE
              PERFORM 10450-VALIDATE-CARD-PURC
              PERFORM 10500-CHECK-FOR-MNX-XTN
              PERFORM 10600-GET-NETWORK-BY-CARD-INFO
              PERFORM 10610-GET-NETWORK-INFO
              PERFORM 10620-CHECK-NETWORK-ERROR
              PERFORM 10630-CHECK-CARD-OFFNET-USED
062209***** THIS CHK NO LONGER DONE HERE; DO NOT YET KNOW
062209***** WHAT WAS PURCHASED
062209*****   PERFORM TIME-LIMIT-CHECK
              PERFORM 10700-CHECK-FOR-TERM-FUEL
JS0798        PERFORM 10710-CHECK-FOR-CREDIT-LOC
              PERFORM 10750-CHECK-CREDIT-HARD-HALT
              PERFORM 10800-CHECK-CREDIT
              PERFORM 10850-CHECK-FOR-FDIS-CARD
           END-IF.
           PERFORM 10900-SETUP-SEND-INITIAL-SCN.
           PERFORM 11000-VALIDATE-PHONE-NR.
           PERFORM 11100-CHECK-IF-OIL-AVAIL.
           PERFORM 11200-CHECK-IF-CASH-AVAIL1.
           PERFORM 11300-CHECK-IF-CASH-AVAIL2.
           PERFORM 11400-CHECK-IF-CASH-ONLY-SC.
           PERFORM 11500-CHECK-FOR-PO-OVERRIDE.
           PERFORM 11550-CHECK-CARD-OFFNET.
           PERFORM 11600-CHECK-IF-PURCH-AVAIL.

           PERFORM 12000-SETUP-MAIN-SCRN-NAME.
           PERFORM 12000-SETUP-MAIN-SCRN-OTHER.
           PERFORM SETUP-SEND-MAIN-ENTRY-SCREEN.
           PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN.

      *------------------------------
       10100-CHECK-FOR-EXIT.
      *------------------------------
           IF EIBAID = DFHCLEAR OR DFHPA1 OR DFHPA2 OR DFHPA3
              IF NOT INITIATED-VIA-START
                 PERFORM CLEAR-AND-EXIT-TO-CICS
              END-IF
           END-IF.

      *-------------------------------
       10200-FORMAT-CARD-NUMBER.
      *-------------------------------
CP0807** VARIABLES CHANGED AND GOLD CARD LOGIC REMOVED FOR FPMASTR **
CP0807** REPLACEMENT                                               **
CP0807     MOVE WS-UIWA-SC-CODE                TO FP1TSCDI.
CP0807     MOVE WS-UIWA-SC-PHONE               TO FP1PHNI.

CP0807     IF WS-UIWA-CARD-NR-16 NOT NUMERIC
CP0807        MOVE ZEROS                       TO WS-UIWA-CARD-NR-16
CP0807     END-IF.

CP0807     MOVE WS-UIWA-CARD-NR-16             TO WS-PRM-CARD
CP0807*    MOVE WS-UIWA-CARD-NR-16 (7:)        TO FP1CARDI
CP0807*                                           COM-PREVIOUS-CARD
AA0921     MOVE WS-UIWA-CARD-NR-16             TO FP1CARDI
AA0921                                            COM-PREVIOUS-CARD.
CP0807     PERFORM PREMIER-INITIAL-INTERFACE THRU PII-9999.

      *------------------------------
       10300-SEE-IF-TEMP-SC-KEYED.
      *------------------------------
      **** (ENSURE A TEMP CODE WAS NOT KEYED IN) ****
           IF COM-STAGE = ZERO AND
              FP1TSCDI  > 'XT999'
              MOVE TS-IS-INVALID-N  TO POS-ERROR-NUMBER
              MOVE YCODE-IS-INVALID TO OUT-COMENT
              PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
           END-IF.

      **** (SEE IF COMING FROM THE TEMP CODE SCREEN) ****
           IF COM-STAGE = 999
              MOVE COM-FP-SC-CODE TO WS-UIWA-SC-CODE,  FP1TSCDI
              MOVE COM-PHONE-1    TO WS-UIWA-SC-PHONE, FP1PHNI
              MOVE 0 TO COM-STAGE
           END-IF.

      *------------------------------------
       10310-CHECK-FOR-INVALID-SC.
      *------------------------------------
           IF WS-UIWA-SC-CODE = SPACES  OR
              WS-UIWA-SC-CODE = 'TN000' OR
              WS-UIWA-SC-CODE = 'TN225'
              MOVE TS-IS-INVALID   TO OUT-COMENT
              MOVE TS-IS-INVALID-N TO POS-ERROR-NUMBER
              PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
           END-IF.

      *------------------------------------
       10320-CHECK-FOR-CASH-ONLY-SC.
      *------------------------------------
           MOVE WS-UIWA-SC-CODE TO SCMSTR-KEY,
                                   COM-FP-SC-CODE.

      **** (IF LOCATION IS ??000 - TURN OFF FUEL/OIL) ****
           IF SCM-KEY-NUM = '000' OR
              SCMSTR-KEY  = 'TN333'
JS0604        MOVE '0' TO COM-PUR-OPTIONS-FUEL,
JS0604                    COM-PUR-OPTIONS-OIL
           END-IF.

      **** (SEE IF CASH IS ALLOWED AT NON COMCHEK LOCATIONS) ****
           IF CDN-RESTRICT-CASH-LOCATIONS = 'Y'
              IF SCM-KEY-NUM = '000'   OR
                 SCM-KEY-NUM = '999'   OR
                 SCMSTR-KEY  = 'TN333' OR
                 SCMSTR-KEY  = 'CN225' OR
                 SCMSTR-KEY  = 'US225' OR
                 SCMSTR-KEY  > 'XT999'
JS0604           MOVE '0' TO COM-PUR-OPTIONS-CASH.

      *------------------------------------
       10330-CHECK-FOR-UNKNOWN-SC.
      *------------------------------------
      **** (SEND PHONE NUMBER SCREEN IF LOCATION IS ??999) ****
           IF SCM-KEY-NUM = '999'   OR
              SCMSTR-KEY  = 'CN225' OR
              SCMSTR-KEY  = 'US225'
              PERFORM TN999-SETUP-INITIAL-MAP
           END-IF.

      *------------------------------------
       10340-READ-SCMSTR.
      *------------------------------------
DR0422     MOVE '10340-READ-SCMSTR'         TO CXUTS0ML-PARAGRAPH.

           EXEC CICS READ
                DATASET ('SCMSTR')
                INTO    (SERVICE-CENTER-MASTER-RECORD)
                RIDFLD  (SCMSTR-KEY)
                RESP    (EIBRESP)
           END-EXEC
DR0422     MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND
           PERFORM CHECK-FOR-NOTFND-EIBRESP
           IF EIBRESP = DFHRESP(NOTFND)
              MOVE TS-IS-INVALID   TO OUT-COMENT
              MOVE TS-IS-INVALID-N TO POS-ERROR-NUMBER
              PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
           END-IF
           MOVE SCMSTR-KEY TO WS-LAST-SCMM-READ
           PERFORM 60200-CHECK-SCMSTR-NUMERICS
           MOVE SCM-KEY    TO  SCMSTR-KEY.

      **** (BE SURE LOCATION IS ACTIVE) ****
           IF SCM-STATUS IS NOT = 'A'
              MOVE INACTIVE-LOCATION   TO OUT-COMENT
              MOVE INACTIVE-LOCATION-N TO POS-ERROR-NUMBER
              PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
           END-IF.
           MOVE SCM-PHONE-NUMBER       TO  COM-PHONE-1.
           MOVE SCM-LOCATION-NAME      TO  COM-TS-NAME, FP1TSNMO.
           IF (SCM-KEY-NUM = '000' OR SCM-KEY = 'TN333') AND
              (COM-TS-STATE NOT = '??')
              NEXT SENTENCE
           ELSE
              MOVE SCM-LOCATION-CITY      TO  COM-TS-CITY
              MOVE SCM-LOCATION-STATE     TO  COM-TS-STATE.
           MOVE COM-TS-CITY               TO FP1TSCTO.
           MOVE SCM-MANUAL-CALL-FEE       TO COM-SCM-MANUAL-CALL-FEE
           MOVE SCM-AUTOMATED-CALL-FEE    TO COM-SCM-AUTO-CALL-FEE.

           MOVE SCM-PREMIER-LEVEL TO COM-PREMIER-LEVEL.
           IF SCM-PREMIER-LEVEL < '1' OR
              SCM-PREMIER-LEVEL > '5'
              MOVE '1' TO COM-PREMIER-LEVEL
           END-IF.

      *---------------------------
JS0206 10345-READ-PRDSCMM.
      *---------------------------
DR0422     MOVE '10345-READ-PRDSCMM'        TO CXUTS0ML-PARAGRAPH.

           INITIALIZE PRDSCMM-RECORD
JS0107     MOVE 'Y'                      TO WS-PRDSCMM-HAS-BEEN-READ
           MOVE 'SC'                     TO PRDSCM-LOCATION-TYPE
           MOVE SCMSTR-KEY               TO PRDSCM-LOCATION-CODE
           EXEC CICS READ
                DATASET ('PRDSCMM')
                INTO    (PRDSCMM-RECORD)
                RIDFLD  (PRDSCM-KEY)
                RESP    (EIBRESP)
           END-EXEC.
DR0422     MOVE PRDSCM-KEY        TO CXUTS0ML-COMMAND
           PERFORM CHECK-FOR-NOTFND-EIBRESP
           IF EIBRESP = DFHRESP(NOTFND)
              MOVE 'CH'                     TO PRDSCM-LOCATION-TYPE
              MOVE SCM-CHAIN-CODE           TO PRDSCM-LOCATION-CODE
              EXEC CICS READ
                   DATASET ('PRDSCMM')
                   INTO    (PRDSCMM-RECORD)
                   RIDFLD  (PRDSCM-KEY)
                   RESP    (EIBRESP)
              END-EXEC
DR0422        MOVE PRDSCM-KEY        TO CXUTS0ML-COMMAND
              PERFORM CHECK-FOR-NOTFND-EIBRESP
           END-IF.
           IF EIBRESP = DFHRESP(NOTFND)
              MOVE 'CO'                     TO PRDSCM-LOCATION-TYPE
              MOVE SCM-CORPORATE-CODE       TO PRDSCM-LOCATION-CODE
              EXEC CICS READ
                   DATASET ('PRDSCMM')
                   INTO    (PRDSCMM-RECORD)
                   RIDFLD  (PRDSCM-KEY)
                   RESP    (EIBRESP)
              END-EXEC
DR0422        MOVE PRDSCM-KEY        TO CXUTS0ML-COMMAND
              PERFORM CHECK-FOR-NOTFND-EIBRESP
           END-IF.

      *----------------------------
       10410-VALIDATE-UNIT-DATA.
      *----------------------------
           IF NO-MORE-ORDERS-ALLOWED
              MOVE DO-NOT-HONOR      TO OUT-COMENT
              MOVE DO-NOT-HONOR-N    TO POS-ERROR-NUMBER
              MOVE CARD-BLOCKED-NBR  TO NEW-DO-NOT-HONOR-NBR
              MOVE NEW-DO-NOT-HONOR1 TO NEW-OUT-MSG1
              MOVE NEW-DO-NOT-HONOR2 TO NEW-OUT-MSG2
              MOVE 'Y'               TO VCWS-ERROR-IND
              PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
           END-IF.

      *----------------------------
       10420-VALIDATE-MAX-PURC.
      *----------------------------
CP0807** CHANGED VARIABLES FOR FPMASTR REPLACMENT **
      **** (CHECK CARD LIMITS TO SEE IF DRIVER CAN USE CARD) ****
CP0807     MULTIPLY WS-RFL-MAX-PURC-VARIANCE-R BY
CP0807              WS-RFL-MAX-PURC-DLY-FUEL
                GIVING WS-EXTRA-AMT ROUNDED.
CP0807     ADD WS-RFL-MAX-PURC-DLY-FUEL   TO WS-EXTRA-AMT.
CP0807     IF WS-RFL-MAX-PURC-DLY-FUEL   > 0 AND
CP0807        UNITMST-DATE-LAST-XTN = WS-CURRENT-DATE-YYDDD
CP0807        COMPUTE WS-WORK-AMOUNT = UNITMST-CURR-DAY-OIL-COST +
CP0807                                 UNITMST-CURR-DAY-REQ-AMT   +
CP0807                                 UNITMST-CURR-DAY-AMT-REF
              IF WS-WORK-AMOUNT > WS-EXTRA-AMT
CP0807           MOVE WS-RFL-MAX-PURC-DLY-FUEL   TO PURC-MAX-NR
CP0807           MOVE WS-RFL-MAX-PURC-VARIANCE   TO PURC-VAR-NR
                 MOVE WS-EXTRA-AMT               TO PURC-TOTAL-NR
CP0807           COMPUTE WS-EXTRA-AMT = UNITMST-CURR-DAY-OIL-COST +
CP0807                                  UNITMST-CURR-DAY-REQ-AMT   +
CP0807                                  UNITMST-CURR-DAY-AMT-REF
                 MOVE WS-EXTRA-AMT               TO PURC-USED-NR
                 MOVE SPACES                     TO PURC-DIFF-HD
                 MOVE PURC-MAX-MESSAGE           TO OUT-COMENT
                 MOVE PURC-MAX-MESSAGE-N TO POS-ERROR-NUMBER
                 IF LIMITS-ALTERED-FOR-PO = 'Y'
                    MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
                    MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
                 END-IF
                 PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
              END-IF
           END-IF.

      *----------------------------
       10430-VALIDATE-TRIP-ALLOW.
      *----------------------------
CP0807** CHANGED VARIABLES FOR FPMASTR REPLACEMENT **
CP0807     IF TRIP-ALLOWANCE-SET                AND
CP0807        UNITMST-INIT-TRIP-ALLOW       > 0 AND
CP0807        UNITMST-INIT-TRIP-ALLOW   NOT > UNITMST-TRIP-ALLOW-USED
              MOVE TRIP-ALLOW-EXCEEDED     TO OUT-COMENT
              MOVE TRIP-ALLOW-EXCEEDED-N   TO POS-ERROR-NUMBER
              MOVE TRIP-ALLOW-EXCEEDED-NBR TO CALL-COMPANY-NBR
              MOVE CALL-COMPANY-MSG        TO NEW-OUT-MESSAGE
              MOVE 'Y'                     TO VCWS-ERROR-IND
              IF LIMITS-ALTERED-FOR-PO = 'Y'
                 MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
                 MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
              END-IF
              PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
           END-IF.

      *----------------------------
       10440-VALIDATE-EXP-BALANCE.
      *----------------------------
JS1199     PERFORM DETERMINE-IF-BALANCE-BASED
JS1199     IF WS-BALANCE-BASED   AND
              PRM-EXPENSE-BALANCE < .01
              MOVE PRM-EXPENSE-BALANCE           TO XCS-BAL-REQ-AMT
              MOVE EXCESSIVE-BALANCE-REQUEST     TO OUT-COMENT
              MOVE EXCESSIVE-BALANCE-REQUEST-N   TO POS-ERROR-NUMBER
              MOVE NEW-EXCESSIVE-BALANCE-REQUEST TO NEW-OUT-MESSAGE
              MOVE 'Y'                           TO VCWS-ERROR-IND
              IF LIMITS-ALTERED-FOR-PO = 'Y'
                 MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
                 MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
              END-IF
              PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
           END-IF.

      *----------------------------
       10450-VALIDATE-CARD-PURC.
      *----------------------------
CP1098     IF CSR-PURC-LIMIT-ON-CARD
              IF PRM-PURC-INITIAL NOT > PRM-PURC-USED
                 IF CDN-PURCHASE-ORDER-POOL-LIMIT
                    MOVE '1' TO COM-PO-REQUIRED-FOR-FUEL
                    MOVE '1' TO COM-PO-REQUIRED-FOR-OIL
                 ELSE
JS0604              MOVE '0' TO COM-PUR-OPTIONS-FUEL
JS0604              MOVE '0' TO COM-PUR-OPTIONS-OIL.

      *-------------------------------------
       10500-CHECK-FOR-MNX-XTN.
      *-------------------------------------
           MOVE '*' TO MNX-TRANSACTION-FLAG.
           MOVE 'Y' TO WS-LOOP-FLAG

           PERFORM
             VARYING DCT-INDX FROM 1 BY 1
             UNTIL WS-LOOP-FLAG = 'N' OR
                   DCT-FUEL-CODE (DCT-INDX) = HIGH-VALUES
CP0698          IF DCT-FUEL-CODE (DCT-INDX) = COM-FP-CO-CODE
                   MOVE 'S' TO MNX-TRANSACTION-FLAG
                   IF DCT-FUEL-TYPE (DCT-INDX) = SCM-FUEL-BRAND-1ST-5
                      MOVE 'M' TO MNX-TRANSACTION-FLAG
JS0604                MOVE '1' TO COM-DIRECT-BILLING-OIL
JS0604                            COM-DIRECT-BILLING-FUEL
                      MOVE 'N' TO WS-LOOP-FLAG
                   END-IF
                END-IF
             END-PERFORM.

      *------------------------------
       10600-GET-NETWORK-BY-CARD-INFO.
      *------------------------------
           MOVE ' ' TO ERROR-FLAG.
           MOVE ' ' TO ADF-NETWORK-FLAG.
           MOVE 'N' TO COM-NETWORK-BY-CARD

      **** (IF ON LIMITED NETW BY CARD - CHECK NETWORK) ****
      **** (TURN OFF NETWORK OPTION ON CUSTOMER LEVEL) ****
           IF CDN-LIM-NETW-BY-CARD = 'Y' AND
              PRM-LIM-NETW-BY-CARD = 'Y'
              PERFORM CHECK-LIM-NETW-BY-CARD
           END-IF.
      *------------------------------
       10610-GET-NETWORK-INFO.
      *------------------------------
      **** (THE TERMINAL FUEL FLAG MAY BE ALTERED BY THE NETWORK) ****
      **** (THE FOLLOWING MOVE INITILIZES IT BEFORE THE NETWORK ) ****
           MOVE 'N' TO COM-RMR-TERM-FUEL-FLAG.
           IF SCM-IS-A-TERMINAL-FUEL-LOC
              MOVE 'Y' TO COM-RMR-TERM-FUEL-FLAG
           END-IF.

      **** (SEE IF THE CUSTOMER HAS RELATIONSHIPS SETUP) ****
           IF CDN-RELATIONSHIP-FLAG = 'Y'
JS0299       OR SC-ON-LIMITED-NETWORK
091411       OR SCM-NET-PRICING-FL-YES
              PERFORM 70000-CHECK-RMS-LOCATION.

      *------------------------------
       10620-CHECK-NETWORK-ERROR.
      *------------------------------
           MOVE ' ' TO COM-PO-REQUIRED
           IF THERE-WAS-AN-ERROR
              EVALUATE TRUE
                 WHEN CDN-OVERRIDE-LIMITED-NETWORK = 'Y' AND
                      CDN-PURCHASE-ORDER           > SPACES
                    MOVE 'Y' TO COM-PO-REQUIRED
                    MOVE '*' TO ADF-NETWORK-FLAG
                 WHEN PRM-FUEL-OFFNET-FLAG = 'Y'
                    MOVE 'Y' TO COM-CARD-OFFNET-USED
                    MOVE '*' TO ADF-NETWORK-FLAG
                 WHEN OTHER
                    MOVE DRIVER-MAY-NOT-FUEL-HERE   TO OUT-COMENT
                    MOVE DRIVER-MAY-NOT-FUEL-HERE-N TO POS-ERROR-NUMBER
                    MOVE FUEL-NOT-ALLOWED-NBR       TO CALL-COMPANY-NBR
                    MOVE CALL-COMPANY-MSG           TO NEW-OUT-MESSAGE
                    MOVE 'Y'                        TO VCWS-ERROR-IND
                    PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
              END-EVALUATE.
           MOVE ' ' TO ERROR-FLAG.
           MOVE 'Y' TO WS-NETW-OK.

      *------------------------------
       10630-CHECK-CARD-OFFNET-USED.
      *------------------------------
      **** (IF ONE TIME CARD OFF NETW FLAG ON THEN ALWAYS USE IT) ****
           IF PRM-FUEL-OFFNET-FLAG = 'Y'
              MOVE 'Y' TO COM-CARD-OFFNET-USED.

      *-------------------------------------
       10700-CHECK-FOR-TERM-FUEL.
      *-------------------------------------
      **** (IF TERMINAL FUEL, PAY AT LOAD IS NOT ALLOWED) ****
JS1199     PERFORM DETERMINE-IF-BALANCE-BASED
           IF COM-THIS-IS-A-TERM-FUEL-XTN AND
JS1199        WS-BALANCE-BASED       AND
              CDN-BILL-AT-LOAD
              MOVE TERMINAL-FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
              MOVE TERMINAL-FUEL-NOT-ALLOWED   TO OUT-COMENT
              PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
           END-IF.

      *-------------------------------
JS0798 10710-CHECK-FOR-CREDIT-LOC.
      *-------------------------------
           IF CDN-CREDIT-PRICED-TEXACO
              IF NOT SCM-CREDIT-PROGRAM-YES
                 MOVE MUST-BE-AT-A-CREDIT-LOC-N TO POS-ERROR-NUMBER
                 MOVE MUST-BE-AT-A-CREDIT-LOC   TO OUT-COMENT
JS0798                                             3270-OUTPUT-DATA
                 PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.

JS0798     IF CDN-CREDIT-PRICED-GENERIC
SB0315     OR CDN-CREDIT-PRICED-FUELUP
JS0798        IF NOT SCM-CREDIT-PROGRAM-NORMAL
JS0798           MOVE MUST-BE-AT-A-CREDIT-LOC-N TO POS-ERROR-NUMBER
JS0798           MOVE MUST-BE-AT-A-CREDIT-LOC   TO OUT-COMENT
JS0798                                             3270-OUTPUT-DATA
JS0798           PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.

      *-------------------------------
       10750-CHECK-CREDIT-HARD-HALT.
      *-------------------------------
DR0422     MOVE '10750-CHECK-CREDIT-HARD-HALT' TO CXUTS0ML-PARAGRAPH.
      ***** (GET THE CREDIT RECORD) ****
091509     MOVE CDN-CUST-ACCT-CODE TO CL-CO-CD OF DCREDITL
MP0404     IF WS-BALANCE-BASED  AND
MP0404        CDN-BILL-AT-LOAD
MP0404        CONTINUE
MP0404     ELSE
           IF (CDN-CUST-ACCT-CODE NOT = 'BR000')
              INITIALIZE   CREDIT-CHECK-LINK-AREA
              MOVE +4                     TO CCL-FUNC-RTC
091509        MOVE CL-CO-CD OF DCREDITL   TO CCL-CREDITL (1:5)
              MOVE WS-CICS-CONTROL-RECORD TO CCL-ONLNDF
091509        EXEC CICS LINK
091509             PROGRAM  ('CXACO0LD')
091509             COMMAREA (CREDIT-CHECK-LINK-AREA)
091509             LENGTH   (LENGTH OF CREDIT-CHECK-LINK-AREA)
091509             RESP     (EIBRESP)
091509        END-EXEC
              PERFORM CHECK-FOR-NORMAL-EIBRESP
              IF CCL-FUNC-RTC = +99999
                 MOVE CREDIT-HARD-HALT-MSG   TO OUT-COMENT
                 MOVE CREDIT-HARD-HALT-MSG-N TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
ED0914        ELSE
ED0914           IF CDN-COMCASH-FLAG NOT = 'Y'
ED0914              MOVE 'N'              TO CDN-COMCASH-FLAG
ED0914           END-IF
ED0914           MOVE CCL-CREDITL         TO DCREDITL
ED0914           IF CL-XMIT-LMT = ZERO
ED0914           AND CDN-COMCASH-FLAG = 'N'
ED0914              MOVE CREDIT-HARD-HALT-MSG   TO OUT-COMENT
ED0914              MOVE CREDIT-HARD-HALT-MSG-N TO POS-ERROR-NUMBER
ED0914              PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
ED0914        END-IF.

      *----------------------------
       10800-CHECK-CREDIT.
      *----------------------------
      **** (CREDIT LIMIT CHECK) ****
           IF COM-CC-FUNDED-OVERRIDE
              MOVE 'F' TO COM-COMDATA-COMPLETE-STATUS
           END-IF.
091509     INITIALIZE DCREDITL
           IF (COM-COMDATA-COMPLETE-FLAG  = 'Y') AND
              (COM-CC-FUNDED OR COM-CC-RECOURSE OR COM-CC-NON-FUNDED)
              MOVE 'N' TO WS-EXIT-FLAG
              PERFORM 10810-GET-CC-CREDIT
              PERFORM 10811-CHECK-CC-OVERRIDE
              PERFORM 10812-CHECK-CC-CREDIT1
              PERFORM 10812-CHECK-CC-CREDIT2
              IF WS-EXIT-FLAG = 'N'
                 PERFORM 10820-CHECK-CREDIT-NORMAL
              END-IF
           ELSE
              PERFORM 10820-CHECK-CREDIT-NORMAL
           END-IF.

      *--------------------------------
       10810-GET-CC-CREDIT.
      *--------------------------------
           MOVE 'N'    TO WS-LOOP-FLAG.
           MOVE SCM-COMDATA-COMPLETE-ACCT   TO COM-CC-SCM-ACCT-CODE.
           EVALUATE TRUE
              WHEN COM-CC-FUNDED
                 MOVE CDN-COMDATA-CMPLT-ACCT-CODE
091509             TO CL-CO-CD OF DCREDITL
              WHEN COM-CC-RECOURSE
                 MOVE SCM-COMDATA-COMPLETE-ACCT
091509             TO CL-CO-CD OF DCREDITL
              WHEN COM-CC-NON-FUNDED
                 CONTINUE
              WHEN OTHER
                 MOVE SPACES TO COM-COMDATA-COMPLETE-STATUS
                 MOVE CDN-CUST-ACCT-CODE
091509             TO CL-CO-CD OF DCREDITL
           END-EVALUATE.
           IF COM-CC-NON-FUNDED
              MOVE COM-COMDATA-COMPLETE-LIMIT TO WS-CC-AVAIL
           ELSE
091509        MOVE 'A' TO WS-CREDITL-READ-SW
091509        PERFORM READ-CREDITL
091509        IF WS-CREDIT-LIMIT = ZEROES
                 MOVE 'Y'    TO WS-CC-CUT-OFF1
                 MOVE ZEROES TO WS-CC-AVAIL
              ELSE
                 MOVE 'N'    TO WS-CC-CUT-OFF1
091509           COMPUTE WS-CC-AVAIL =
091509                WS-CREDIT-LIMIT
091509            - ((WS-UPDATE-OR-AR-BAL
091509              - WS-CASH-RECEIVED)
091509              + WS-CURRENT-DAY)
091509           END-COMPUTE
              END-IF
           END-IF.

      *--------------------------------
       10811-CHECK-CC-OVERRIDE.
      *--------------------------------
      **** (IF FUNDED AND NO LIMIT CHECK RECOURSE OVERRIDE) ****
           IF (COM-CC-FUNDED             ) AND
              (WS-CC-AVAIL NOT > ZERO    ) AND
              (CDN-COMDATA-COMPLETE-HARD ) AND
              (SCM-RECOURSE-FLAG-AVAIL   )
              MOVE 'O' TO COM-COMDATA-COMPLETE-STATUS
              PERFORM 10810-GET-CC-CREDIT
           END-IF.

      *--------------------------------
       10812-CHECK-CC-CREDIT1.
      *--------------------------------
      **** (SET UP THE COMDATA COMPLETE AVAILABLE) ****
           EVALUATE TRUE
              WHEN COM-CC-RECOURSE
                 IF WS-CC-AVAIL > ZEROES AND
                    COM-COMDATA-COMPLETE-LIMIT > ZEROES
                    CONTINUE
                 ELSE
                    MOVE ZEROES TO WS-CC-AVAIL
                 END-IF
           END-EVALUATE.

      **** (IF THE COMDATA COMPLETE ACCT HAS CREDIT SKIP THE CDN) ****
      **** (CREDIT LIMIT VALIDATION.                            ) ****
           IF WS-CC-AVAIL > ZEROES
              MOVE 'Y' TO WS-EXIT-FLAG
           END-IF.

      *--------------------------------
       10812-CHECK-CC-CREDIT2.
      *--------------------------------
      **** (IF SOFT LIMITS ARE USED AND THE RELATIONSHIP HAS NO ) ****
      **** (CREDIT, WE DO NOT CARE SO TURN OFF THE CUT OFF2 FLAG) ****
      **** (WE ONLY CARE IF THEY ARE NOT FUNDED                 ) ****
           IF (CDN-COMDATA-COMPLETE-SOFT) AND
              (COM-CC-CUT-OFF2 = 'Y')     AND
              (COM-CC-FUNDED)             AND
              (WS-EXIT-FLAG = 'N')
              MOVE 'N' TO COM-CC-CUT-OFF2
           END-IF.

      **** (IF SOFT LIMITS ARE USED, SEE IF ACCOUNT IS CUT OFF) ****
           IF (CDN-COMDATA-COMPLETE-SOFT) AND
              (WS-CC-CUT-OFF1  = 'N'    ) AND
              (COM-CC-CUT-OFF2 = 'N'    )
              MOVE 'Y' TO WS-EXIT-FLAG
           END-IF.

      *--------------------------------
       10820-CHECK-CREDIT-NORMAL.
      *--------------------------------
091509     MOVE CDN-CUST-ACCT-CODE TO CL-CO-CD OF DCREDITL

      **** (IF BRIDGE, CUST HAS NOT CREDIT, DUMMY IT UP) ****
           IF CDN-CUST-ACCT-CODE = 'BR000'
091509        MOVE +1 TO WS-CREDIT-LIMIT
                         WS-AVAIL
           ELSE
091509        MOVE 'B' TO WS-CREDITL-READ-SW
091509        PERFORM READ-CREDITL
080210        MOVE CL-CO-CD OF DCREDITL TO WS-CL-CO-CD
091509        PERFORM GET-WS-AVAIL-AMOUNT
080210        MOVE CCL-AVL-CRD-AMT      TO WS-AVAIL
           END-IF.

JS1199     PERFORM DETERMINE-IF-BALANCE-BASED
JS1199     IF WS-BALANCE-BASED  AND
              CDN-BILL-AT-LOAD  AND
091509        WS-CREDIT-LIMIT = ZEROES
091509        MOVE +1 TO WS-CREDIT-LIMIT
                         WS-AVAIL
           END-IF.

      **** (SEE IF THE CUSTOMER HAS CREDIT) ****
091509     IF WS-CREDIT-LIMIT         > 0  OR
              WS-AVAIL                > 0  OR
091509        CL-OVRD-CD OF DCREDITL = 'O' OR
091509        CL-FP-OVRD OF DCREDITL = 'O'
              CONTINUE
           ELSE
              PERFORM 10821-CREDIT-EXCEEDED
           END-IF.

      *----------------------------
       10821-CREDIT-EXCEEDED.
      *----------------------------
           MOVE NO-MSG-NBR       TO CALL-COMPANY-NBR.
           MOVE CALL-COMPANY-MSG TO NEW-OUT-MESSAGE.
           MOVE 'Y'              TO VCWS-ERROR-IND.
           MOVE '1'              TO VR-TRANS-FLAG.

      **** (SEE WHICH CREDIT WAS EXCEEDED) ****
           IF COM-COMDATA-COMPLETE-FLAG = 'Y'
              PERFORM 10822-CC-CREDIT-EXCEEDED-FUND
              PERFORM 10822-CC-CREDIT-EXCEEDED-NON
              PERFORM 10823-CDN-CREDIT-EXCEEDED
           ELSE
              PERFORM 10823-CDN-CREDIT-EXCEEDED
           END-IF.

      *------------------------------
       10822-CC-CREDIT-EXCEEDED-FUND.
      *------------------------------
      **** (COMDATA COMPLETE CREDIT EXCEEDED) ****
           IF COM-CC-FUNDED-OVERRIDE
              MOVE 'F' TO COM-COMDATA-COMPLETE-STATUS.

           IF COM-CC-FUNDED
              EVALUATE TRUE
                 WHEN COM-COMDATA-COMPLETE-LIMIT = ZEROES
                    MOVE CDN-COMDATA-CMPLT-ACCT-CODE TO
                         WS-CC-FUNDED-CREDIT-ACCT
                    MOVE WS-CC-FUNDED-CREDIT-ERR-N TO POS-ERROR-NUMBER
                    MOVE WS-CC-FUNDED-CREDIT-ERR   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
                 WHEN SCM-RECOURSE-FLAG-NOT-AVAIL
                    MOVE CDN-COMDATA-CMPLT-ACCT-CODE TO
                         WS-CC-FUNDED-CREDIT-ACCT
                    MOVE WS-CC-FUNDED-CREDIT-ERR-N TO POS-ERROR-NUMBER
                    MOVE WS-CC-FUNDED-CREDIT-ERR   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
                 WHEN COM-COMDATA-COMPLETE-LIMIT > ZEROES
                    MOVE WS-CC-RELATION-CREDIT-ERR-N TO POS-ERROR-NUMBER
                    MOVE WS-CC-RELATION-CREDIT-ERR   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
                 WHEN OTHER
                    MOVE SCM-COMDATA-COMPLETE-ACCT TO
                         WS-CC-SC-CREDIT-ACCT
                    MOVE WS-CC-SC-CREDIT-ERR-N TO POS-ERROR-NUMBER
                    MOVE WS-CC-SC-CREDIT-ERR   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
              END-EVALUATE.

      *------------------------------
       10822-CC-CREDIT-EXCEEDED-NON.
      *------------------------------
           IF COM-CC-RECOURSE
              EVALUATE TRUE
                 WHEN COM-COMDATA-COMPLETE-LIMIT = ZEROES
                    MOVE WS-CC-RELATION-CREDIT-ERR-N TO POS-ERROR-NUMBER
                    MOVE WS-CC-RELATION-CREDIT-ERR   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
                 WHEN OTHER
                    MOVE SCM-COMDATA-COMPLETE-ACCT TO
                         WS-CC-SC-CREDIT-ACCT
                    MOVE WS-CC-SC-CREDIT-ERR-N TO POS-ERROR-NUMBER
                    MOVE WS-CC-SC-CREDIT-ERR   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
              END-EVALUATE.
           IF COM-CC-NON-FUNDED
              MOVE WS-CC-RELATION-CREDIT-ERR2-N TO POS-ERROR-NUMBER
              MOVE WS-CC-RELATION-CREDIT-ERR2   TO OUT-COMENT
              PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.

      **** (NO COMDATA COMPLETE XTN SHOULD FALL THRU HERE) ****
           MOVE COM-COMDATA-COMPLETE-STATUS TO NO-TYPE.

      *------------------------------
       10823-CDN-CREDIT-EXCEEDED.
      *------------------------------
      **** (COMPANY HAS NO CREDIT DISPLAY AN ERROR) ****
           MOVE 0 TO ERR-AMT.
CP0807     MOVE CUST-RGE-SMLNM   TO ERR-SML-NAM.
           MOVE NO-MSG           TO OUT-COMENT.
           MOVE NO-MSG-N         TO POS-ERROR-NUMBER
           MOVE NO-MSG-NBR       TO CALL-COMPANY-NBR.
           MOVE CALL-COMPANY-MSG TO NEW-OUT-MESSAGE.
           MOVE 'Y'              TO VCWS-ERROR-IND.
           MOVE '1'              TO VR-TRANS-FLAG.
           PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN.

      *-------------------------------
       10850-CHECK-FOR-FDIS-CARD.
      *-------------------------------
           IF (PRM-CARD-NUMB-R > 139999999 AND < 141000000) AND
              (THIS-IS-NOT-A-POS-TRANS)
             PERFORM 10852-CHECK-FOR-TRENDAR-EQUIP
             EVALUATE TRUE
                WHEN WS-TRENDAR-EQUIP-FOUND = 'N'
                   CONTINUE
                WHEN COM-FDIS-MESSAGE-FLAG = 'Y' AND
                     EIBAID                = DFHPF3
                   CONTINUE
                WHEN OTHER
                   MOVE 'Y' TO COM-FDIS-MESSAGE-FLAG
                   MOVE 'THIS IS A COMCHEK/FDIS CARD'  TO OUT-COMENT-1
                   MOVE 'SEE IF ATTENDANT RAN THE XTN THRU THE TRENDAR
      -                  'EQUIP - PRESS PF3 TO CONTINUE'
                        TO OUT-COMENT-2
                   PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
             END-EVALUATE.

      *-------------------------------
       10852-CHECK-FOR-TRENDAR-EQUIP.
      *-------------------------------
DR0422     MOVE '10852-CHECK-FOR-TRENDAR-EQUIP' TO CXUTS0ML-PARAGRAPH.

           MOVE LOW-VALUES TO CER-KEY.
           MOVE 'SC'       TO CER-CUSTOMER-TYPE.
           MOVE SCM-KEY    TO CER-CUSTOMER-CODE
           EXEC CICS STARTBR
                DATASET ('CDEQUIP')
                RIDFLD  (CER-KEY)
                GTEQ
                RESP    (EIBRESP)
           END-EXEC
DR0422     MOVE CER-KEY TO CXUTS0ML-COMMAND
           PERFORM CHECK-FOR-NOTFND-EIBRESP
           PERFORM
              UNTIL SCM-KEY                   NOT = CER-CUSTOMER-CODE OR
                    CER-DEVICE-IDENTIFICATION(1:3) = 'TRT'            OR
                    EIBRESP               NOT = DFHRESP(NORMAL)
                 EXEC CICS READNEXT
                      DATASET  ('CDEQUIP')
                      INTO     (COMDATA-EQUIPMENT-RECORD)
                      RIDFLD   (CER-KEY)
                      RESP     (EIBRESP)
                 END-EXEC
DR0422           MOVE CER-KEY TO CXUTS0ML-COMMAND
                 PERFORM CHECK-FOR-NOTFND-EIBRESP
           END-PERFORM.
           EXEC CICS ENDBR
                DATASET ('CDEQUIP')
                RESP    (EIBRESP)
           END-EXEC.

           MOVE 'N' TO WS-TRENDAR-EQUIP-FOUND.
           IF SCM-KEY = CER-CUSTOMER-CODE        AND
              CER-DEVICE-IDENTIFICATION(1:3) = 'TRT'
              MOVE 'Y' TO WS-TRENDAR-EQUIP-FOUND.

      *-------------------------------
       10900-SETUP-SEND-INITIAL-SCN.
      *-------------------------------
           PERFORM 10910-SIS-INIT-FIELDS.
           PERFORM 10920-SIS-LOST-CARD.
           PERFORM 10925-SIS-NO-FEE.
           PERFORM 10930-SIS-LICENSE-INFO
JS1101     PERFORM 10935-SIS-CHECK-EXP-DATE.
           PERFORM 10940-SIS-CHECK-FOR-MAP-SEND.
           PERFORM 10950-SIS-CHECK-FOR-RESTORE.

      *-------------------------------
       10910-SIS-INIT-FIELDS.
      *-------------------------------
091211***** CALL TO ROUTINE CXUTS200 REMOVED
MP1004     MOVE PRM-SUB-ACCT-NUMB  TO FP1FCO
           MOVE CDN-CUST-NAME      TO FP1ANAMO
           MOVE CDN-CUST-ACCT-CODE TO FP1ACODO.
      *-------------------------------
       10920-SIS-LOST-CARD.
      *-------------------------------
           IF NOT PRM-LOST-CARD         AND
              NOT PRM-CARD-LOST         AND
JS1199        NOT CSR-DRIVER-NR-VERIFY  AND
JS1199        NOT CSR-DRIVER-NR-CAPTURE AND
JS1199        NOT CSR-DRIVER-NR-VEHICLE
              MOVE ATTR-ASKIP-DRK TO FP1DNRA, FP1LCDA, FP1HD4A
           ELSE
              MOVE SPACES TO FP1LCDO
              IF PRM-LOST-CARD
                 MOVE 'REPLACEMENT CARD...DRIVER WILL NOT HAVE CARD' TO
                  FP1LCDO
              END-IF
              IF PRM-CARD-LOST
                 MOVE 'REPLACEMENT CARD...DRIVER WILL NOT HAVE CARD' TO
                  FP1LCDO
              END-IF
           END-IF.

      *------------------------------
JS1098 10925-SIS-NO-FEE.
      *------------------------------
DR0422     MOVE '10925-SIS-NO-FEE'          TO CXUTS0ML-PARAGRAPH.

           MOVE OPACSFL-SUFFIX TO OPACSFL-SFX
           MOVE WS-OPERID TO OPCKEY-OPID
           MOVE 'FMST'    TO OPCKEY-SECURITY-DATA.
           EXEC CICS READ
                DATASET  (OPACSFL)
                INTO     (OPC-DETAIL-RECD)
                RIDFLD   (OPACSFL-KEY)
                RESP     (EIBRESP)
           END-EXEC.
DR0422     MOVE OPACSFL-KEY       TO CXUTS0ML-COMMAND.
           PERFORM CHECK-FOR-NOTFND-EIBRESP.
           EVALUATE TRUE
              WHEN EIBRESP = DFHRESP (NOTFND)
                 MOVE ATTR-ASKIP-DRK      TO FP1ADJHA
                 MOVE ATTR-ASKIP-DRK-FSET TO FP1ADJA
                 MOVE 'N'                 TO FP1ADJO
              WHEN OPAC-UPDATING-ALLOWED
                 MOVE ATTR-ASKIP          TO FP1ADJHA
                 MOVE ATTR-UNPROT-FSET    TO FP1ADJA
              WHEN OTHER
                 MOVE ATTR-ASKIP-DRK      TO FP1ADJHA
                 MOVE ATTR-ASKIP-DRK-FSET TO FP1ADJA
                 MOVE 'N'                 TO FP1ADJO
           END-EVALUATE.

      *-------------------------------
       10930-SIS-LICENSE-INFO.
      *-------------------------------
           IF PRM-IN-STATION-CARD OR PRM-IN-STATION-PROGRAM OR
CP1098        CDN-LICENSE-CAPTURE OR
CP1098        COM-DL-OPTION = 'Y'
              NEXT SENTENCE
           ELSE
              IF NOT CDN-CUST-LICENSE-YES
                 MOVE ATTR-ASKIP-DRK TO FP1DLNRA, FP1DLSTA,
                                        FP1HD2A,  FP1HD3A.

      *-------------------------------
JS1101 10935-SIS-CHECK-EXP-DATE.
      *-------------------------------
ED0906     IF  (S007-MASTERCARD-CARD = 'Y')
              MOVE ATTR-ASKIP       TO FP1EXPHA
              MOVE ATTR-UNPROT-FSET TO FP1EXPA
           ELSE
              MOVE ATTR-ASKIP-DRK   TO FP1EXPHA, FP1EXPA
           END-IF.

      *-------------------------------
       10940-SIS-CHECK-FOR-MAP-SEND.
      *-------------------------------
           MOVE ATTR-ASKIP-DRK TO FP1DMHA, FP1DMDA.
           IF FP1TSCDI > 'XT999'
              MOVE ATTR-ASKIP-DRK-FSET TO FP1TSCDA
           END-IF
           IF COM-STAGE = 0
              MOVE 'N' TO FP1DOWNO
              MOVE 'N' TO FP1BATO
              MOVE ' ' TO FP1BATDO,
CC0502                    FP1BATTO
CP1098        MOVE ' ' TO ORIDATO, ORIXTNO
JS1098        MOVE 'N' TO FP1ADJO
              MOVE 1 TO COM-STAGE
              MOVE WS-UIWA-SC-CODE TO COM-FP-SC-CODE
              MOVE 'VERIFY ALL INFO, AND PRESS ENTER TO PROCEED' TO
                   FP1MSG1O
              EXEC CICS SEND
                   MAP    ('FPMAP1')
                   MAPSET ('USISET')
                   ERASE
                   RESP   (EIBRESP)
              END-EXEC
              PERFORM CHECK-FOR-NORMAL-EIBRESP
              PERFORM EXIT-FUEL-PGM-RETURN.

      *-------------------------------
       10950-SIS-CHECK-FOR-RESTORE.
      *-------------------------------
           IF COM-STAGE = 1 AND
              WS-THIS-BE-A-RESTORE = 'Y'
              MOVE 'N' TO FP1DOWNO
              MOVE 'N' TO FP1BATO
              MOVE ' ' TO FP1BATDO,
CC0502                    FP1BATTO
CP1098        MOVE ' ' TO ORIDATO, ORIXTNO
JS1098        MOVE 'N' TO FP1ADJO
              MOVE 'RESTORE COMPLETE, VERIFY INFO AND PRESS ENTER'
                   TO FP1MSG1O, OUT-COMENT
              EXEC CICS SEND
                   MAP    ('FPMAP1')
                   MAPSET ('USISET')
                   ERASE
                   RESP   (EIBRESP)
              END-EXEC
              PERFORM CHECK-FOR-NORMAL-EIBRESP
              PERFORM EXIT-FUEL-PGM-RETURN.

      *--------------------------
       11000-VALIDATE-PHONE-NR.
      *--------------------------
           MOVE SPACES TO COM-PHONE-FLAG.
      **** (CHANGED TO VALIDATE PH# IN ALL CASES EXCEPT BRIDGE) ****
           IF SCM-KEY              = 'US225' OR
              SCM-KEY              = 'CN225' OR
              COM-PNET-BRIDGE-FLAG = 'X'
              NEXT SENTENCE
           ELSE
              IF SCM-KEY              = 'TN333' OR
                 SCM-KEY-NUM          = '000'
                 PERFORM PHONE-VERIFY2
              ELSE
                 PERFORM PHONE-VERIFY.

      *------------------------------
       11100-CHECK-IF-OIL-AVAIL.
      *------------------------------
      **** (SEE IF DRIVER HAS AN OIL BLOCK) ****
           IF NO-OIL-PURCHASE-ALLOWED-THIS-U
JS0604        MOVE '0' TO COM-PUR-OPTIONS-OIL
           END-IF.
CP1098     IF CSR-OIL-FLAG = 'Y'
              PERFORM PREMIER-CARD-OIL-LIMIT.

      *------------------------------
       11200-CHECK-IF-CASH-AVAIL1.
      *------------------------------
CP0807     IF WS-FL-CASH-ADV-FLAG = 'A'
              PERFORM ACCUM-CASH-TOTALS
           END-IF.
102810     IF CDN-FLEET-LIMIT-FLAG = 'Y'
MB1013       AND WS-PROPRIETARY-CARD = 'Y'
102810       AND WS-FLEET-LIMIT-CSH-AVAIL NOT > SPACE
102810        PERFORM GET-FLEET-CASH-LIMIT
102810     END-IF
CP1098     IF CSR-CASH-IS-ON-THE-CARD
102810       OR WS-FLEET-LIMIT-CSH-AVAIL > SPACE
              PERFORM PREMIER-CARD-CASH-LIMIT
           END-IF.
      *=======================================
102810 GET-FLEET-CASH-LIMIT.
      *=======================================
           PERFORM PII-SETUP-FMLP-FLDS-I
           MOVE 'E'   TO FMLP-LIM-PROCESS-IND
           MOVE 41001 TO FMLP-FLEET-PROD
           PERFORM LINK-TO-TSFMO0LP
           IF FMLP-ERROR
              MOVE 'N'                    TO WS-FLEET-LIMIT-CSH-AVAIL
              MOVE ZERO                   TO WS-FLEET-LIMIT-CSH-AMT
           ELSE
              MOVE 'Y'                    TO WS-FLEET-LIMIT-CSH-AVAIL
              MOVE FMLP-FLEET-LIMIT-AVAIL TO WS-FLEET-LIMIT-CSH-AMT
           END-IF.
      *------------------------------
       11300-CHECK-IF-CASH-AVAIL2.
      *------------------------------
CP0807** VARIABLES CHANGED FOR FPMASTR REPLACEMENT **
      **** (SEE IF DRIVER HAS A CASH LIMIT) ****
CP0807     IF (WS-FL-CASH-ADV-FLAG      NOT = 'U'       AND
CP0807        (WS-FL-CASH-ADV-STATUS    NOT > '0'       OR
CP0807        (UNITMST-DATE-LAST-XTN = WS-CURRENT-DATE-YYDDD AND
CP0807         CASH-ADV-DAILY-SET                  AND
CP0807         WS-RFL-CASH-ADV-INIT-DLY > 0        AND
CP0807         WS-FL-CASH-ADV-USED-DLY NOT < WS-RFL-CASH-ADV-INIT-DLY)))
               IF CDN-PURCHASE-ORDER-POOL-LIMIT
                  MOVE '1' TO COM-PO-REQUIRED-FOR-CASH
               ELSE
JS0604            MOVE '0' TO COM-PUR-OPTIONS-CASH
CP1098            IF CSR-CASH-PER-GALLON-FLAG = 'Y' AND
                     PRM-CASH-PER-GALLON-LIMIT > 0
JS0604                   MOVE '1' TO COM-PUR-OPTIONS-CASH
                  END-IF
               END-IF
            END-IF.

      *------------------------------
       11400-CHECK-IF-CASH-ONLY-SC.
      *------------------------------
           IF SCM-KEY-NUM = '000'
JS0604        MOVE '0' TO COM-PUR-OPTIONS-FUEL
JS0604        MOVE '0' TO COM-PUR-OPTIONS-OIL
           END-IF.

      **** (SEE IF CASH IS ALLOWED AT NON COMCHEK LOCATIONS) ****
           IF CDN-RESTRICT-CASH-LOCATIONS = 'Y'
              IF SCM-KEY-NUM = '000'   OR
                 SCM-KEY-NUM = '999'   OR
                 SCMSTR-KEY  = 'TN333' OR
                 SCMSTR-KEY  = 'CN225' OR
                 SCMSTR-KEY  = 'US225' OR
                 SCMSTR-KEY  > 'XT999'
JS0604           MOVE '0' TO COM-PUR-OPTIONS-CASH.

      *------------------------------
       11500-CHECK-FOR-PO-OVERRIDE.
      *------------------------------
      **** (IF PO OVER-RIDE IS ON TURN ON ALL PRODUCTS) ****
      **** (EXCEPT AT LOCATIONS '??000' OR 'TN333'    ) ****
           IF (WS-NETW-OK                   = 'Y')        AND
              (CDN-PURCHASE-ORDER-POOL-LIMIT)             AND
              (CDN-OVERRIDE-LIMITED-NETWORK = 'Y')        AND
              (SCMSTR-KEY               NOT = 'TN333')
              MOVE COM-PUR-OPTIONS-AREA  TO COM-PO-PUR-OPTIONS-AREA
JS0299        MOVE COM-PROD-OPT-AREA     TO COM-PO-PROD-OPT-AREA
              INSPECT COM-PUR-OPTIONS-AREA  REPLACING ALL '0' BY '1'
              INSPECT COM-PUR-OPTIONS-AREA  REPLACING ALL '3' BY '1'
              INSPECT COM-PROD-OPT-AREA REPLACING ALL 'E' BY 'I'
           ELSE
              MOVE SPACES TO COM-PO-PUR-OPTIONS-AREA
              MOVE SPACES TO COM-PO-PROD-OPT-AREA
           END-IF.

      *------------------------------
       11550-CHECK-CARD-OFFNET.
      *------------------------------
      **** (TURN ON ALL PRODUCTS IF ONE TIME OFF NETW XTN) ****
           IF (COM-CARD-OFFNET-USED         = 'Y')
              INSPECT COM-PUR-OPTIONS-AREA  REPLACING ALL '0' BY '1'
              INSPECT COM-PUR-OPTIONS-AREA  REPLACING ALL '3' BY '1'
              INSPECT COM-PROD-OPT-AREA REPLACING ALL 'E' BY 'I'.

      *-----------------------------
       11600-CHECK-IF-PURCH-AVAIL.
      *-----------------------------
JS0604     IF (COM-PUR-OPTIONS-FUEL = '0') AND
JS0604        (COM-PUR-OPTIONS-OIL  = '0') AND
JS0604        (COM-PUR-OPTIONS-CASH = '0') AND
JS0604        (COM-PUR-OPTIONS-PROD = '0')
              MOVE DRIVER-MAY-NOT-FUEL-NO-PROD   TO OUT-COMENT
              MOVE DRIVER-MAY-NOT-FUEL-NO-PROD-N TO POS-ERROR-NUMBER
              MOVE FUEL-NOT-ALLOWED-NBR          TO CALL-COMPANY-NBR
              MOVE CALL-COMPANY-MSG              TO NEW-OUT-MESSAGE
              MOVE 'Y'                           TO VCWS-ERROR-IND
              MOVE 'Y'                           TO ERROR-FLAG
              PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
           END-IF.

      *-------------------------------
       12000-SETUP-MAIN-SCRN-NAME.
      *-------------------------------
           IF CO-INPUTS-DRIVER-NAME
              MOVE -1  TO FPFSL
              MOVE '/' TO FPNAMEA
           ELSE
              MOVE -1  TO FPNAMEL.
           IF PRM-LAST-NAME  > SPACES
              MOVE 20 TO INDX
              MOVE 15 TO INDX-1
              MOVE 24 TO INDX-2
091211        MOVE 'YYN'          TO WS-CXUTSJON-OPTIONS
CP1011        CALL 'CXUTSJON' USING INDX,   PRM-LAST-NAME,
CP1011                              INDX-1, PRM-FIRST-NAME,
CP1011                              INDX-2, UNITMST-DRVR-NAME,
CP1011                              WS-CXUTSJON-OPTIONS.
CP0807     MOVE UNITMST-DRVR-NAME TO FPNAMEO.

      *-------------------------------
       12000-SETUP-MAIN-SCRN-OTHER.
      *-------------------------------
           MOVE WS-UNIT-NR           TO FPUNITO (01:10)
           MOVE '.'                  TO FPUNITO (11:1)
           MOVE 11 TO FIELD-LENGTH.
CP1011     CALL 'CXUTSSPL' USING FIELD-LENGTH, FPUNITO, FILL-CHAR.

CP0406**** (POPULATE DEFAULT SUB-PROD CODES) ****
CP0406     PERFORM 87500-GET-ALL-DEF-SUB-PROD.

      **** (SETUP THE FUEL PRICE INFORMATION) ****
           PERFORM SPR-SETUP-FUEL-PRICES.
082008     MOVE ZERO TO INP-F-SRVC-DISC
082008                  INP-S-SRVC-DISC.
           MOVE INP-DISC TO COM-FP-PRCNTAGES.
           MOVE LOW-VALUES TO OUT-COMENT.

           MOVE ' '                    TO  COM-FP-PRNT-FLAG.
           IF SCM-ALL-OUTPUT-IS-ACTIVE OR SCM-OUTPUT-PARTIALLY-ACTIVE
               MOVE 'P'                TO  COM-FP-PRNT-FLAG.
           IF COM-FP-PRNT-FLAG IS EQUAL TO 'T'
              MOVE SPACES TO COM-FP-PRNT-FLAG.
           MOVE SPACE                  TO  COM-FP-SCRAMBLER-FLAG.
           MOVE SPACE                  TO  COM-TS-GOLD-FLAG.

      **** (SETUP IOL PPL IF NEEDED) ****
           MOVE 'N'                    TO COM-MANUAL-IOL-XTN-FLAG
           IF SCM-IOL-XREF-LOCATION > SPACES AND
              SCM-IOL-RCP           > ZEROES
              MOVE 'Y'                 TO COM-MANUAL-IOL-XTN-FLAG
              MOVE 'IOL'               TO FPXPAMTI
              MOVE SCM-IOL-RCP         TO OUT-PRICE-GALLON
              MOVE OUT-PRICE-GALLON    TO FPCOSTO
              MOVE 'IOL'               TO FPTTLO
              MOVE 'IOL'               TO CTAXI.

      *==============================
       FP-0100.
      *==============================
           MOVE 'N' TO WS-LOOP-FP-0100.
DR0121
DR0121     EVALUATE TRUE
DR0121     WHEN THIS-BE-AN-ATM-XTN
SD0621         IF NOT TSXCO0AT-TRAN-TYPE-STANDIN
SD0621            PERFORM 20846-VALIDATE-CVC-ATM
SD0621         END-IF
MP0221     WHEN WS-UIWA-SWIPED-KEYED = 'S'
MP0221     WHEN WS-UIWA-SWIPED-KEYED = 'M'
MP0221     WHEN WS-UIWA-SWIPED-KEYED = 'C'
DR0121         MOVE WS-AXIA-SWIPE-DATA TO WS-SWIPED-DATA
SD0421         IF SWIPED-TRANSACTION
DR0121            PERFORM 20847-VALIDATE-CVC-POS
SD0421         END-IF
DR0121     END-EVALUATE
DR0121
           IF NOT THIS-BE-A-PC-REQUEST
              PERFORM 20010-CHECK-FOR-EXIT
              PERFORM 20020-RECEIVE-MAP
JS0603        PERFORM 20215-SETUP-USER-WORK-AREA
              PERFORM 20030-CHECK-FOR-DRAFT-ENTRY
              PERFORM 20040-GET-CONVERSION-RATES
              PERFORM 20050-GET-SC-INFO
              PERFORM 20060-GET-CARD-CUST-INFO
              PERFORM 20070-GET-CASH
JS0699        PERFORM 20080-GET-PRODUCT
              PERFORM 20090-SETUP-DRIVER-NAME
              PERFORM 20100-SETUP-TRIP-NUMBER
              PERFORM 20110-SETUP-INP-AREA
              PERFORM 20120-GET-TRACTOR-FUEL
              PERFORM 20130-GET-OTHER-FUEL
              PERFORM 20140-GET-TRAILER-FUEL
              PERFORM 20150-GET-NR1-FUEL
CP0406        PERFORM 20156-CHK-CP-SUB-PROD

SB0814* CALL TSFMO0GD FOR SUB PRODUCT CODE LIMITS
SB0814        IF CDN-RELATIONSHIP-FLAG = 'Y'
SB0814          OR SC-ON-LIMITED-NETWORK
SB0814          OR SCM-NET-PRICING-FL-YES
SB0814           MOVE 'L' TO PDLA-REQ-TYPE
SB0814           PERFORM 70000-CHECK-RMS-LOCATION
SB0814        END-IF
              PERFORM 20160-GET-OIL
              PERFORM 20170-GET-TAX
              PERFORM 20180-GET-EXPECTED-AMT
              PERFORM 20200-GET-HUB-INFO
              PERFORM 20210-CHECK-FOR-MESSAGE
102810        IF CDN-FLEET-LIMIT-FLAG = 'Y'
102810           PERFORM PII-SETUP-FLEET-LIMITS
              END-IF
           END-IF.
102810     PERFORM PRE-AUTH-TBL-UPDT
JS0699     PERFORM 20630-GET-PRICE-CONTROL-INFO.
MP0800     PERFORM 20848-VALIDATE-ATM-NETWORK.
MP0800     PERFORM 20845-VALIDATE-ATM-PIN.
JS0598     PERFORM 20190-GET-TRAILER-INFO
           PERFORM 20307-CHECK-RMF.
           PERFORM 20310-CHECK-COST-PLUS-USE.
JS0501     PERFORM 20315-CHECK-PAC-PRIDE.
           PERFORM 20320-CHECK-CASH-AMT-9999.
           PERFORM 20305-CHECK-FOR-MANUAL-IOL.
JS1220     IF NOT THIS-BE-A-PC-REQUEST
JS0699        PERFORM 20306-CHECK-CANADIAN-TAX
JS1220     END-IF.
JS0699     PERFORM 20081-CHECK-PRODUCTS
CP0499     PERFORM 20350-CALC-COST-FOR-TERM-FUEL.
062209*****MOVED TO LATER IN ROUTINE
JF1203*****IF THIS-BE-A-PC-REQUEST
JF1203*****   PERFORM TIME-LIMIT-CHECK
JF1203*****END-IF.
           PERFORM 20330-ADJUST-AMTS-REBLD-SCN.
SB0514*FOLLOWING PARAGRAPH MOVE HERE PRIOR TO CANADIAN TAX CALCULATION
SB0514     PERFORM 20919-GET-NETWORK-PRICING
SB0114     PERFORM 20306-CALC-CANADIAN-TAX.
           PERFORM 20300-CHECK-CASH-AVAIL-BY-GAL.
           PERFORM 20340-CHECK-FOR-MNX-XTN.
           PERFORM 20360-CHECK-INVOICE-NR.
           PERFORM 20370-CHECK-INVOICE-NR-FOR-CC.
           PERFORM 20380-CHECK-DRAFT-NR.
           PERFORM 20390-SET-FUEL-FLAG.
           PERFORM 20400-CHECK-OTHER-FUEL-BLOCK.
           PERFORM 20410-CHECK-NR1-FUEL-BLOCK.
           PERFORM 20420-CHECK-REEFER-FUEL-BLOCK.
040606     PERFORM 20425-CHECK-NR2-FUEL-BLOCK.
062209*****DONE HERE FOR BOTH PC REQUEST AND FP SCREEN ENTRY
062209     PERFORM TIME-LIMIT-CHECK.
           PERFORM 20430-SET-OIL-FLAG.
           PERFORM 20440-CHECK-OIL-LIMITS.
           PERFORM 20445-CHECK-OIL-XTN-LIMIT.
           PERFORM 20450-CHECK-OIL-COST-LIMIT.
           PERFORM 20460-CHECK-MAX-FUEL-GALLONS.
MB1013     PERFORM 20461-CHECK-MAX-RFR-GALLONS.
MB1013     PERFORM 20462-CHECK-MAX-OTH-GALLONS.
           PERFORM 20470-CHECK-FUEL-CONVERSION.
           PERFORM 20480-CHECK-OIL-WITH-FUEL-LIM.
           PERFORM 20490-CHECK-FUEL-GALLON-LIM.
           PERFORM 20500-CHECK-REEFER-GALLON-LIM.
SB0413     PERFORM 20505-CHECK-OTHER-GALLON-LIM.
           PERFORM 20510-CHECK-PURCHASE-FLAGS.
           PERFORM 20520-CHECK-PO-OVERRIDE.
           PERFORM 20530-CHECK-PO-REQUIRED.
           PERFORM 20540-CHECK-CASH-LIMITS.
           PERFORM 20555-CHECK-CAROLINA-MOTORS.
           PERFORM 20560-CHECK-TRIP-NUMBER.
           PERFORM 20570-CHECK-TRAILER-NR.
MB1112     IF WS-UIWA-RFID-TAG-TYP (1:1) = 'U' AND
MB1112        SCM-LIMIT-RFID-PROMPTS-FL-YES
MB1112        CONTINUE
MB1112     ELSE
MB1112        PERFORM 20580-CHECK-TRAILER-HUB
MB1112     END-IF.
           PERFORM 20590-CHECK-GST-TAX.
           PERFORM 20600-CHECK-PO-NUMBER.
102810     PERFORM 20605-CHECK-SUB-PRODS
           PERFORM 20610-CHECK-HUB.
           PERFORM 20620-VALIDATE-PRICE-INFO
           PERFORM 20740-CHECK-LIMIT-FOR-CRD-NETW
           PERFORM 20750-COMPUTE-BILLABLE-AND-NON.
           PERFORM 20755-SET-BILLABLE-FLAGS.
           PERFORM 20757-CHECK-FOR-ZERO-AMT.
           PERFORM 20760-CHECK-AUTO-PRINT-FLAG.
           PERFORM 20770-CHECK-DRAFT-ENTRY.
           PERFORM 20780-VALIDATE-DRIVER-NAME.
           PERFORM TIM-0010
           PERFORM 20790-CHECK-CARD-PURC-LIMIT
JS1199     PERFORM 20795-CHECK-FLEET-LIMITS
           PERFORM 20800-CHECK-UNIT-LIMITS.
SB0217     PERFORM 20805-CHECK-COMCHEK-FUEL-LMTS.
           PERFORM 20810-CHECK-BRIDGE-ACCT.
           PERFORM 10750-CHECK-CREDIT-HARD-HALT.
           PERFORM 20820-CHECK-CREDIT.
           PERFORM 20830-SEE-IF-RECOURSE-REQ
           PERFORM 20840-VALIDATE-RECOURSE.
           PERFORM 20850-CHECK-FOR-INQUIRY.
           PERFORM 20860-CHECK-CREDIT-AUTO-APPROV.
           PERFORM 20870-GET-FEES.
           PERFORM 20900-CHECK-FOR-VRU-FEE
           PERFORM 20905-CHECK-FOR-FREEBIE
           PERFORM 20910-CHECK-BRIDGE-FEES
           PERFORM 21020-COMPUTE-MANUAL-FEE
           PERFORM 21025-ADJUST-MANUAL-FEE
SB0514*FOLLOWING PARAGRAPH MOVED UP ABOVE 20306-CALC-CANADIAN-TAX
SB0514*    PERFORM 20919-GET-NETWORK-PRICING
PM0517     IF WS-FMRM-05-POF NOT = 'Y'
PM0517        PERFORM 20920-GET-DISCOUNT-INFO
PM0517     END-IF
SB0614     PERFORM 20925-CHECK-MERCHANT-SURCHARGE
           PERFORM 20930-ADD-IN-MANUAL-CALL-FEE.
           PERFORM 20940-ADD-IN-COST-PLUS-FEE.
           PERFORM 20945-ADD-IN-NATS-FEE.
           PERFORM 20950-ADJ-COMDATA-COMPLETE-FEE.
           PERFORM 20955-CHECK-ATM-FEES.
           PERFORM 20957-CHECK-REDUCE-CO-FEES.
JS0200     PERFORM 20959-CHECK-FLEET-FEE.
JS0400     PERFORM 20959-CHECK-PAM-FEE
           PERFORM 209XX-COMPLETE-FEE-PROCESS.
           PERFORM 20960-CHECK-DEDUCT-FEE.
           PERFORM 20970-CHECK-BALANCE.
           PERFORM 20980-CHECK-DB-LIMIT.
           PERFORM 20985-CHECK-GUAR-DISC-AVAIL.
041112     PERFORM 20989-GET-RFID-UNIT-TRLR
SD0620     PERFORM 20992-FUEL-PROXIMITY-CHECK
080210     MOVE 'Y'    TO WS-CIX-RESP-REQUESTED
080210     MOVE '0200' TO WS-CIX-MESSAGE-TYPE
080210     PERFORM IRIS-CHECK-AND-NOTIFY
080210     PERFORM IRIS-REJECT-CHECK
      **** (THIS EXIT WILL CAUSE THIS ROUTINE TO EXECUTE AGAIN. ) ****
      **** (THIS IS FOR BRIDGE           - IF THE FUNDED/DB INFO) ****
      **** (HAS CHANGED IT MUST LOOP BACK THRU THE FP-0100 RTN  ) ****
      **** (TO RECHECK LIMITS                                   ) ****
           IF WS-LOOP-FP-0100 NOT = 'Y'
              PERFORM FP-0100-COMPLETE-XTN.

      *---------------------------------
       FP-0100-COMPLETE-XTN.
      *---------------------------------
           PERFORM 20990-COMPUTE-WS-CURXMN
           PERFORM 20991-MOVE-WS-CURXMN
           PERFORM 21010-CHECK-UNATTENDED-EXIT.
           PERFORM 21030-SEND-MANUAL-FEE-MESSAGE
           PERFORM 21040-CHECK-FOR-RESTORE
           PERFORM 21045-CHECK-FOR-NATS-PRE-AUTH.
           PERFORM 21047-CHECK-FOR-ATM.

SB0315     IF CDN-CREDIT-PRICED-FLAG = 'F'
SB0315     AND WS-NATS-PRE-AUTH-FLAG NOT = 'Y'
SB0315        PERFORM 21048-CHECK-FOR-FUELUP
SB0315     END-IF

      **** (UPDATES START HERE) ****
           PERFORM CREATE-LOG-FILES-AND-EXIT.

      *---------------------------------
       CREATE-LOG-FILES-AND-EXIT.
      *---------------------------------
082008     PERFORM LTI-SAVE-OFF-FILE-VALUES
082008     IF WS-NO-TRANS-SPLIT-FLAG NOT = 'Y'
082008        PERFORM LTI-CHECK-FOR-TRX-SPLIT
082008     END-IF
082008     IF WS-LARGE-TRANS-SPLITS
052311     OR WS-LARGE-TRANS-SPLITS-TAX
082008        PERFORM CREATE-LOG-FILES-LRG-TRAN
082008     ELSE
082008        PERFORM CREATE-LOG-FILES-NORMAL
082008     END-IF
MB1012     IF WS-UIWA-RFID-NBR > SPACES
MB1012        PERFORM UPDT-RFID-XREF-BUILD
MB1012        PERFORM UPDT-RFID-XREF-UPDATE
MB1012     END-IF.

ED0406     IF WS-ENQ-CARD-NR > ZEROES
ED0406        PERFORM DEQ-CARD-NUMBER
ED0406     END-IF.

JS0802     EXEC CICS SYNCPOINT
JS0802          NOHANDLE
JS0802     END-EXEC

      **** (SETUP DB AND TERM FUEL RESP - TERM FUEL WILL EXIT HERE) ****
           PERFORM 21210-SETUP-DB-TF-RESPONSE.

           PERFORM 21240-CHECK-MANUAL-FEE-EXIT
           PERFORM 21250-CHECK-DB-EXIT.
           PERFORM 21260-CHECK-SETTLE-EXIT.
           PERFORM 21270-CHECK-ATTACHED-PRNT-EXIT.
           PERFORM 21280-GET-SC-INFO.
082008     IF NOT WS-LARGE-TRANS-SPLITS
              PERFORM 21290-LOAD-TO-SENDING-QUE
082008     ELSE
082008        IF THIS-IS-A-SETTLEMENT-ITEM
082008          AND SCM-SETTLE-LOC-STATUS = 'Y'
082008           CONTINUE
082008        ELSE
082008           PERFORM 85070-CHECK-FOR-TEMP-LOCATION
082008        END-IF
082008     END-IF

      **** (NOTHING SHOULD FALL INTO HERE) ****
           PERFORM FP-PROGRAM-LOGIC-ERROR.

      *---------------------------------
082008 LTI-SAVE-OFF-FILE-VALUES.
      *---------------------------------
      ***** FIELDS IN THIS PARAGRAPH ARE VALUES ON CDNCUST, SCMSTR, ETC.
      ***** THAT NEED TO BE ALTERED DURING LARGE TRANSACTION SPLIT
      ***** PROCESSING WITHOUT ALTERING THE ORIGINAL VALUE ON THE FILE
           MOVE CDN-GUAR-YN             TO WS-CDN-GUAR-YN
           MOVE CDN-ALL-HANDLING-ADD-ON TO WS-CDN-ALL-HANDLING-ADD-ON
           MOVE CDN-ALL-HANDLING-ADD-ON-ALTCUR
                                        TO WS-CDN-ALL-HANDLING-ADD-ON-AC
           MOVE CDN-MANUAL-ADD-ON       TO WS-CDN-MANUAL-ADD-ON
           MOVE CDN-COST-PLUS-ADD-ON    TO WS-CDN-COST-PLUS-ADD-ON
           MOVE CDN-COST-PLUS-ADD-ON-ALTCUR
                                        TO WS-CDN-COST-PLUS-ADD-ON-AC
           MOVE SCM-CORP-REBATE-LOCATION
                                        TO WS-SCM-CORP-REBATE-LOCATION
           MOVE SCM-CORP-REBATE-FLAG    TO WS-SCM-CORP-REBATE-FLAG
           MOVE SCPM-PP-PAC-MARKUP      TO WS-SCPM-PP-PAC-MARKUP
           CONTINUE.
      *---------------------------------
082008 LTI-CHECK-FOR-TRX-SPLIT.
      *---------------------------------
      ***** SINCE NR1 DIESEL AND NR2 DIESEL ARE COMBINED INTO ONE
      ***** ENTITY IN BATCH PROCESSING (TSFMB010), THEY WILL BE
      ***** TREATED AS ONE ENTITY FOR LARGE TRANSACTION SPLITS

           IF (WS-UIWA-NR2-COST-SC + WS-UIWA-NR1-COST-SC)
              > (WS-UIWA-NR2-COST + WS-UIWA-NR1-COST)
                MOVE 'S' TO WS-LTI-SW2
           END-IF

ED0113     IF (WS-UIWA-NR2-COST-SC + WS-UIWA-NR1-COST-SC
ED0113                             + WS-UIWA-OTH-COST-SC)
ED0113        > (WS-UIWA-NR2-COST + WS-UIWA-NR1-COST
ED0113                            + WS-UIWA-OTH-COST)
ED0113          MOVE 'S' TO WS-LTI-SW2
ED0113     END-IF

           IF WS-UIWA-REF-COST-SC > WS-UIWA-REF-COST
                MOVE 'S' TO WS-LTI-SW2
           END-IF

           IF WS-UIWA-OTH-COST-SC > WS-UIWA-OTH-COST
                MOVE 'S' TO WS-LTI-SW2
           END-IF

MN0413     IF CDN-ACCT-IS-MIXED-CURRENCY
MN0413         MOVE 'S'                TO WS-LTI-SW2
MN0413     END-IF

SB0715     IF SCM-IS-IN-CANADA       AND
SB0715        SCM-AUTO-CALC-TAX-YES  AND
SB0715        SCPM-AUTO-CALC-TAX-YES
SB0715        PERFORM LTI-CHECK-999-WITH-AUTO-CALC
SB0715     ELSE
071009        PERFORM LTI-CHECK-AGAINST-999
SB0715     END-IF

052311*****IF FUEL WAS PURCHASED AND TAX AMT > 99.99, SPLIT THE
052311*****XTN FOR TAX
052311     IF (WS-UIWA-NR1-COST + WS-UIWA-NR2-COST +
052311         WS-UIWA-REF-COST + WS-UIWA-OTH-COST > 0)
052311     OR (WS-UIWA-NR1-COST-SC + WS-UIWA-NR2-COST-SC +
052311         WS-UIWA-REF-COST-SC + WS-UIWA-OTH-COST-SC > 0)
MN0313         MOVE SPACES             TO WS-LTI-TAX-SW
MN0313         IF CDN-ACCT-IS-BASE-CURRENCY
MN0313             IF WS-UIWA-TAX-AMT > 99.99
MN0313                 MOVE 'Y'            TO WS-LTI-TAX-SW
MN0313             END-IF
MN0313         ELSE
MN0313             IF WS-UIWA-TAX-AMT-SC > 99.99
MN0313                 MOVE 'Y'       TO WS-LTI-TAX-SW
MN0313             END-IF
MN0313         END-IF
052311     END-IF.
           CONTINUE.

      *---------------------------------
071009 LTI-CHECK-AGAINST-999.
      *---------------------------------
      ***** REWRITTEN TO INCLUDE CANADIAN GST (UIWA-TAX-AMT)
           IF WS-LTI-SC-CURRENCY
              COMPUTE WS-LTI-WORK-AMT2 =
                 WS-UIWA-NR2-COST-SC
                 + WS-UIWA-NR1-COST-SC
                 + WS-UIWA-TAX-AMT-SC
              END-COMPUTE
              IF WS-LTI-WORK-AMT2 > 999.99
                 MOVE 'Y' TO WS-LTI-SW
              END-IF
ED0113        IF WS-LTI-SW NOT = 'Y'
ED0113           COMPUTE WS-LTI-WORK-AMT2 =
ED0113              WS-UIWA-NR2-COST-SC
ED0113              + WS-UIWA-NR1-COST-SC
ED0113              + WS-UIWA-OTH-COST-SC
ED0113              + WS-UIWA-TAX-AMT-SC
ED0113           END-COMPUTE
ED0113           IF WS-LTI-WORK-AMT2 > 999.99
ED0113              MOVE 'Y' TO WS-LTI-SW
ED0113           END-IF
ED0113        END-IF
              IF WS-LTI-SW NOT = 'Y'
                 COMPUTE WS-LTI-WORK-AMT2 =
                    WS-UIWA-REF-COST-SC
                    + WS-UIWA-TAX-AMT-SC
                 END-COMPUTE
                 IF WS-LTI-WORK-AMT2 > 999.99
                    MOVE 'Y' TO WS-LTI-SW
                 END-IF
              END-IF
              IF WS-LTI-SW NOT = 'Y'
                 COMPUTE WS-LTI-WORK-AMT2 =
                    WS-UIWA-OTH-COST-SC
                    + WS-UIWA-TAX-AMT-SC
                 END-COMPUTE
                 IF WS-LTI-WORK-AMT2 > 999.99
                    MOVE 'Y' TO WS-LTI-SW
                 END-IF
              END-IF
           ELSE
              COMPUTE WS-LTI-WORK-AMT2 =
                 WS-UIWA-NR2-COST
                 + WS-UIWA-NR1-COST
                 + WS-UIWA-TAX-AMT
              END-COMPUTE
              IF WS-LTI-WORK-AMT2 > 999.99
                 MOVE 'Y' TO WS-LTI-SW
              END-IF
ED0113        IF WS-LTI-SW NOT = 'Y'
ED0113           COMPUTE WS-LTI-WORK-AMT2 =
ED0113              WS-UIWA-NR2-COST
ED0113              + WS-UIWA-NR1-COST
ED0113              + WS-UIWA-OTH-COST
ED0113              + WS-UIWA-TAX-AMT
ED0113           END-COMPUTE
ED0113           IF WS-LTI-WORK-AMT2 > 999.99
ED0113              MOVE 'Y' TO WS-LTI-SW
ED0113           END-IF
ED0113        END-IF
              IF WS-LTI-SW NOT = 'Y'
                 COMPUTE WS-LTI-WORK-AMT2 =
                    WS-UIWA-REF-COST
                    + WS-UIWA-TAX-AMT
                 END-COMPUTE
                 IF WS-LTI-WORK-AMT2 > 999.99
                    MOVE 'Y' TO WS-LTI-SW
                 END-IF
              END-IF
              IF WS-LTI-SW NOT = 'Y'
                 COMPUTE WS-LTI-WORK-AMT2 =
                    WS-UIWA-OTH-COST
                    + WS-UIWA-TAX-AMT
                 END-COMPUTE
                 IF WS-LTI-WORK-AMT2 > 999.99
                    MOVE 'Y' TO WS-LTI-SW
                 END-IF
              END-IF
           END-IF
           CONTINUE.


SB0715*---------------------------------
SB0715 LTI-CHECK-999-WITH-AUTO-CALC.
SB0715*---------------------------------
SB0715*** DO NOT INCLUED TAX IF AUTO-CALC-TAX = Y
SB0715     IF WS-LTI-SC-CURRENCY
SB0715        COMPUTE WS-LTI-WORK-AMT2 =
SB0715           WS-UIWA-NR2-COST-SC
SB0715           + WS-UIWA-NR1-COST-SC
SB0715        END-COMPUTE
SB0715        IF WS-LTI-WORK-AMT2 > 999.99
SB0715           MOVE 'Y' TO WS-LTI-SW
SB0715        END-IF
SB0715        IF WS-LTI-SW NOT = 'Y'
SB0715           COMPUTE WS-LTI-WORK-AMT2 =
SB0715              WS-UIWA-NR2-COST-SC
SB0715              + WS-UIWA-NR1-COST-SC
SB0715              + WS-UIWA-OTH-COST-SC
SB0715           END-COMPUTE
SB0715           IF WS-LTI-WORK-AMT2 > 999.99
SB0715              MOVE 'Y' TO WS-LTI-SW
SB0715           END-IF
SB0715        END-IF
SB0715        IF WS-LTI-SW NOT = 'Y'
SB0715           COMPUTE WS-LTI-WORK-AMT2 =
SB0715              WS-UIWA-REF-COST-SC
SB0715           END-COMPUTE
SB0715           IF WS-LTI-WORK-AMT2 > 999.99
SB0715              MOVE 'Y' TO WS-LTI-SW
SB0715           END-IF
SB0715        END-IF
SB0715        IF WS-LTI-SW NOT = 'Y'
SB0715           COMPUTE WS-LTI-WORK-AMT2 =
SB0715              WS-UIWA-OTH-COST-SC
SB0715           END-COMPUTE
SB0715           IF WS-LTI-WORK-AMT2 > 999.99
SB0715              MOVE 'Y' TO WS-LTI-SW
SB0715           END-IF
SB0715        END-IF
SB0715     ELSE
SB0715        COMPUTE WS-LTI-WORK-AMT2 =
SB0715           WS-UIWA-NR2-COST
SB0715           + WS-UIWA-NR1-COST
SB0715        END-COMPUTE
SB0715        IF WS-LTI-WORK-AMT2 > 999.99
SB0715           MOVE 'Y' TO WS-LTI-SW
SB0715        END-IF
SB0715        IF WS-LTI-SW NOT = 'Y'
SB0715           COMPUTE WS-LTI-WORK-AMT2 =
SB0715              WS-UIWA-NR2-COST
SB0715              + WS-UIWA-NR1-COST
SB0715              + WS-UIWA-OTH-COST
SB0715           END-COMPUTE
SB0715           IF WS-LTI-WORK-AMT2 > 999.99
SB0715              MOVE 'Y' TO WS-LTI-SW
SB0715           END-IF
SB0715        END-IF
SB0715        IF WS-LTI-SW NOT = 'Y'
SB0715           COMPUTE WS-LTI-WORK-AMT2 =
SB0715              WS-UIWA-REF-COST
SB0715           END-COMPUTE
SB0715           IF WS-LTI-WORK-AMT2 > 999.99
SB0715              MOVE 'Y' TO WS-LTI-SW
SB0715           END-IF
SB0715        END-IF
SB0715        IF WS-LTI-SW NOT = 'Y'
SB0715           COMPUTE WS-LTI-WORK-AMT2 =
SB0715              WS-UIWA-OTH-COST
SB0715           END-COMPUTE
SB0715           IF WS-LTI-WORK-AMT2 > 999.99
SB0715              MOVE 'Y' TO WS-LTI-SW
SB0715           END-IF
SB0715        END-IF
SB0715     END-IF
SB0715     CONTINUE.

      *---------------------------------
       CREATE-LOG-FILES-NORMAL.
      *---------------------------------
082008     MOVE 'N' TO WS-LTI-SW
           PERFORM 21050-BUILD-ORDRFIL.
           PERFORM 21055-CHECK-FOR-NATS-EXIT.
           PERFORM 21060-BUILD-USILOG-RECD.
           PERFORM 86000-GET-TS-CODE-FOR-SETTLE.

030514     IF SCM-IS-IN-CANADA
SD1219*       IF THIS-BE-AN-IOL-XTN  OR
SD1219*          SCM-NATS-FLAG-YES
SD1219        IF SCM-NATS-FLAG-YES
030514           NEXT SENTENCE
030514        ELSE
022714           MOVE 'M'               TO CTLA-FUNCTION-CODE
022714           MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
022714                                  TO CTLA-MQ-CONTROL-NBR
030114           IF CTLA-CAN-CONVERSION-RATE = ZEROS
030114              IF COM-US-COMP-CN-SC
030114                 MOVE CAN-TO-US-RATE TO CTLA-CAN-CONVERSION-RATE
030114              END-IF
030114           END-IF
030114           IF (COM-ACCOUNT-CURR-TYPE NOT = 'M') AND
030114              (COM-US-COMP-CN-SC)
022714               MOVE 'Y' TO CTLA-CAN-CONVERSION-SW
022714           ELSE
022714               MOVE SPACE TO CTLA-CAN-CONVERSION-SW
022714           END-IF
030114           MOVE SCM-AUTO-CALC-TAX TO CTLA-AUTO-CALC-FLAG
022714           PERFORM 20306-LINK-TO-TSFMO0CT
JS0618           PERFORM LTI-ADJUST-UIWA-TAX-INFO
022714        END-IF
030514     END-IF.

           PERFORM 21080-BUILD-FMLOG-RECD.
SD0222     PERFORM 21083-BUILD-PRDDIS-RECD.

BG0114     IF SCM-XCDM-XCLUDE-FL NOT = 'Y'
CW1108        PERFORM 21085-LINK-TO-TSFMO0DI
BG0114     END-IF.

           PERFORM 21090-LOG-TO-SETTLE-NEW.
           PERFORM 21110-UPDATE-ORDER-FILE.
           PERFORM 21120-UPDATE-CREDIT.
           PERFORM 21130-CHECK-CC-RECOURSE-LOG.
CP0807     IF WS-UNITMST-RECD-SW NOT = 'N'
CP0807        PERFORM 21140-UPDATE-UNITMST
CP0807     END-IF.
           PERFORM 21150-PREMIER-UPDATES.
           PERFORM 21155-WRITE-LOG-FILES.
           PERFORM 21160-ONE-TIME-UPDATE.
           PERFORM 21165-RMF-UPDATE.
           PERFORM 21170-BRIDGE-UPDATE.
102810     PERFORM 21175-CARD-NETW-UPDT-I.
           PERFORM 21180-CARD-NETWORK-UPDATE.
           PERFORM 21190-PO-UPDATE.
           PERFORM 21192-FMPOOL-UPDATE.
SD0620     PERFORM 21193-RESET-ATP-SWITCH.
           PERFORM 21195-SETUP-CHECK-ENTRY-AREA.
           PERFORM 21200-SETUP-CC-RESPONSE.

           PERFORM LOG-TO-DSET.
           PERFORM 21230-LOG-TO-INTRADAY.

      *---------------------------------
082008 CREATE-LOG-FILES-LRG-TRAN.
      *---------------------------------
082008     MOVE 'Y'  TO WS-LTI-SW
082008     PERFORM LARGE-TRANS-INTERIM-PROCESS
052311     IF WS-LARGE-TRANS-SPLITS-TAX
052311*****WE ALREADY HAVE THE INITIAL FUEL SPLIT VALUE FOR XTN'S
052311*****WITH A TAX > 99.99
052311        MOVE WS-LTI-INIT-SPLIT-VALUE TO WS-LTI-SPLIT-AMT
052311        ADD 1 TO WS-LTI-SPLIT-AMT
052311        MOVE WS-LTI-INIT-SPLIT-NBR1  TO WS-LTI-SPLIT-AMT-NBR1
052311        ADD 1 TO WS-LTI-SPLIT-AMT-NBR1
052311        MOVE WS-LTI-INIT-SPLIT-NBR2  TO WS-LTI-SPLIT-AMT-NBR2
052311        ADD 1 TO WS-LTI-SPLIT-AMT-NBR2
052311        MOVE WS-LTI-INIT-SPLIT-REFER TO WS-LTI-SPLIT-AMT-REFER
052311        ADD 1 TO WS-LTI-SPLIT-AMT-REFER
052311        MOVE WS-LTI-INIT-SPLIT-OTHER TO WS-LTI-SPLIT-AMT-OTHER
052311        ADD 1 TO WS-LTI-SPLIT-AMT-OTHER
052311     ELSE
052311        IF WS-UIWA-TAX-AMT    > 0.00
052311*****WE ALREADY HAVE THE INITIAL FUEL SPLIT VALUE FOR LARGE
052311*****XTN'S WITH A TAX > 0 AND LESS < 100.00
052311*****(AMOUNT + TAX AMOUNT CAN'T BE > 999.99)
052311           MOVE 'Y'                     TO WS-LTI-WITH-TAX-SW
052311           MOVE WS-LTI-INIT-SPLIT-VALUE TO WS-LTI-SPLIT-AMT
052311           ADD 1 TO WS-LTI-SPLIT-AMT
052311           MOVE WS-LTI-INIT-SPLIT-NBR1  TO WS-LTI-SPLIT-AMT-NBR1
052311           ADD 1 TO WS-LTI-SPLIT-AMT-NBR1
052311           MOVE WS-LTI-INIT-SPLIT-NBR2  TO WS-LTI-SPLIT-AMT-NBR2
052311           ADD 1 TO WS-LTI-SPLIT-AMT-NBR2
052311           MOVE WS-LTI-INIT-SPLIT-REFER TO WS-LTI-SPLIT-AMT-REFER
052311           ADD 1 TO WS-LTI-SPLIT-AMT-REFER
052311           MOVE WS-LTI-INIT-SPLIT-OTHER TO WS-LTI-SPLIT-AMT-OTHER
052311           ADD 1 TO WS-LTI-SPLIT-AMT-OTHER
052311        ELSE
052311*****WE NEED TO GET THE INITIAL FUEL SPLIT VALUE FOR LARGE
052311*****XTN'S WITH NO TAX
082008           MOVE 1000 TO WS-LTI-SPLIT-AMT
052311           MOVE 1000 TO WS-LTI-SPLIT-AMT-NBR1
052311           MOVE 1000 TO WS-LTI-SPLIT-AMT-NBR2
052311           MOVE 1000 TO WS-LTI-SPLIT-AMT-REFER
052311           MOVE 1000 TO WS-LTI-SPLIT-AMT-OTHER
052311        END-IF
052311     END-IF
052711     MOVE WS-LTIH-UIWA-AMT (1) TO WS-LTI-HOLD-AMT-NR1
052711     MOVE WS-LTIH-UIWA-AMT (2) TO WS-LTI-HOLD-AMT-NR2
052711     MOVE WS-LTIH-UIWA-AMT (3) TO WS-LTI-HOLD-AMT-REF
052711     MOVE WS-LTIH-UIWA-AMT (4) TO WS-LTI-HOLD-AMT-OTH
052711     MOVE WS-LTIH-UIWA-AMT-TAX TO WS-LTI-HOLD-AMT-TAX
052711     MOVE WS-LTIH-UIWA-QTY (1) TO WS-LTI-HOLD-QTY-NR1
052711     MOVE WS-LTIH-UIWA-QTY (2) TO WS-LTI-HOLD-QTY-NR2
052711     MOVE WS-LTIH-UIWA-QTY (3) TO WS-LTI-HOLD-QTY-REF
052711     MOVE WS-LTIH-UIWA-QTY (4) TO WS-LTI-HOLD-QTY-OTH
052711     MOVE ZEROES               TO WS-LTI-TOTAL-QTY-NR1-OTH
052711                                  WS-LTI-TOTAL-QTY-NR2-OTH
052711                                  WS-LTI-TOTAL-QTY-REF-OTH
052711                                  WS-LTI-TOTAL-QTY-OTH-OTH
052711                                  WS-LTI-TOTAL-AMT-NR1-OTH
052711                                  WS-LTI-TOTAL-AMT-NR2-OTH
052711                                  WS-LTI-TOTAL-AMT-REF-OTH
052711                                  WS-LTI-TOTAL-AMT-OTH-OTH
052711                                  WS-LTI-TOTAL-AMT-TAX-OTH
082008     PERFORM
082008        VARYING WS-LTI-SUB1
082008        FROM    1 BY 1
082008        UNTIL   WS-LTI-SUB1 > WS-LTI-SPLIT-COUNT
082008           PERFORM LTI-PROCESS-2
                 PERFORM 21050-BUILD-ORDRFIL
                 PERFORM 21060-BUILD-USILOG-RECD
                 PERFORM 86000-GET-TS-CODE-FOR-SETTLE
120412           IF NOT LTI-FIRST-PASS
120412              MOVE 'Y' TO WS-BYPASS-LOG-DISCOUNT
120412           END-IF
072314           IF SCM-IS-IN-CANADA
SD1219*             IF THIS-BE-AN-IOL-XTN  OR
SD1219*                SCM-NATS-FLAG-YES
SD1219              IF SCM-NATS-FLAG-YES
102414                 CONTINUE
072314              ELSE
072314                 MOVE 'M'               TO CTLA-FUNCTION-CODE
072314                 MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
072314                                        TO CTLA-MQ-CONTROL-NBR
072314                 IF CTLA-CAN-CONVERSION-RATE = ZEROS
072314                    IF COM-US-COMP-CN-SC
072314                       MOVE CAN-TO-US-RATE TO
072314                                          CTLA-CAN-CONVERSION-RATE
072314                    END-IF
072314                 END-IF
072314                 IF (COM-ACCOUNT-CURR-TYPE NOT = 'M') AND
072314                    (COM-US-COMP-CN-SC)
072314                     MOVE 'Y' TO CTLA-CAN-CONVERSION-SW
072314                 ELSE
072314                     MOVE SPACE TO CTLA-CAN-CONVERSION-SW
072314                 END-IF
JS0618                 PERFORM LTI-DISCOUNT-FOR-CAN-TAXES-NEW
072314                 MOVE SCM-AUTO-CALC-TAX TO CTLA-AUTO-CALC-FLAG
072314                 MOVE WS-USER-INPUT-WORK-AREA   TO
072314                                         CTLA-USER-INPUT-WORK-AREA
072314                 PERFORM 20306-LINK-TO-TSFMO0CT
JS0618                 PERFORM LTI-ADJUST-UIWA-TAX-INFO
061815                 PERFORM LTI-RESTORE-UIWA-COST
072314              END-IF
072314           END-IF
                 PERFORM 21080-BUILD-FMLOG-RECD
MP0322           PERFORM 21083-BUILD-PRDDIS-RECD
120412           IF LTI-FIRST-PASS
120412************** WANT TO USE DISC VALUE FROM ENTIRE TRANSACTION
120412              MOVE WS-LTIH-SELECT-DISC TO FMDL-SC-SELECT-DISCOUNT
120412           END-IF
BG0114           IF SCM-XCDM-XCLUDE-FL NOT = 'Y'
CW1108              PERFORM 21085-LINK-TO-TSFMO0DI
BG0114           END-IF
                 PERFORM 21090-LOG-TO-SETTLE-NEW
                 PERFORM 21110-UPDATE-ORDER-FILE
                 PERFORM 21120-UPDATE-CREDIT
                 PERFORM 21130-CHECK-CC-RECOURSE-LOG
CP0807           IF WS-UNITMST-RECD-SW NOT = 'N'
CP0807              PERFORM 21140-UPDATE-UNITMST
CP0807           END-IF
                 PERFORM 21150-PREMIER-UPDATES
                 PERFORM 21155-WRITE-LOG-FILES
082008***********SOME ROUTINES ONLY NEED TO BE PERFORMED ONCE
082008           IF LTI-FIRST-PASS
                    PERFORM 21160-ONE-TIME-UPDATE
                 END-IF
                 PERFORM 21165-RMF-UPDATE
                 PERFORM 21170-BRIDGE-UPDATE
082008           IF LTI-FIRST-PASS
                    PERFORM 21180-CARD-NETWORK-UPDATE
                 END-IF
                 PERFORM 21190-PO-UPDATE
082008           IF LTI-FIRST-PASS
                    PERFORM 21192-FMPOOL-UPDATE
                    PERFORM 21195-SETUP-CHECK-ENTRY-AREA
                    PERFORM 21200-SETUP-CC-RESPONSE
MM0322              PERFORM 21084-INITIALIZE-PRDDIS
                 END-IF
                 PERFORM LOG-TO-DSET
                 PERFORM 21230-LOG-TO-INTRADAY
082008     END-PERFORM
082008     PERFORM LTI-RESTORE-LARGE-TRANS-HOLD.

      *---------------------------------
082008 LARGE-TRANS-INTERIM-PROCESS.
      *---------------------------------
052311     IF WS-LARGE-TRANS-SPLITS-TAX
052311        PERFORM LTI-DETERMINE-NBR-SPLITS-TAX
052311     ELSE
              PERFORM LTI-DETERMINE-NBR-SPLITS
052311     END-IF.
      ***** GET A BLOCK OF CONTROL NUMBERS
           MOVE 'N' TO WS-LOOP-FLAG
           MOVE 'Y' TO FP-0175A-FIRST-PASS-SW
           PERFORM FP-0175-LTI-A
             UNTIL WS-LOOP-FLAG = 'Y'
           PERFORM 21055-CHECK-FOR-NATS-EXIT
           PERFORM 86000-GET-TS-CODE-FOR-SETTLE
      ***** BUILD FMLOG FOR ENTIRE TRANS AND SAVE IT
           PERFORM 21080-BUILD-FMLOG-RECD
           PERFORM LTI-SAVE-OFF-LARGE-TRANS-HOLD
           PERFORM LTI-SAVE-OFF-UIWA-VALUES
           CONTINUE.

      *---------------------------------
JS0618 LTI-ADJUST-UIWA-TAX-INFO.
      *---------------------------------
JS0618     MOVE WS-USER-INPUT-WORK-AREA   TO WS-ORIG-UIWA-AREA
JS0618     MOVE CTLA-USER-INPUT-WORK-AREA TO WS-USER-INPUT-WORK-AREA
JS0618     MOVE WS-UIWA-TAX-AMT           TO WS-HOLD-UIWA-TAX-AMT-SC
JS0618     MOVE WS-ORIG-UIWA-AREA         TO WS-USER-INPUT-WORK-AREA
JS0618     MOVE WS-HOLD-UIWA-TAX-AMT-SC   TO WS-UIWA-TAX-AMT-SC
AT0918     IF (COM-ACCOUNT-CURR-TYPE  = 'M') AND
AT0918            (COM-US-COMP-CN-SC)
AT0918        MOVE WS-HOLD-UIWA-TAX-AMT-SC   TO   WS-UIWA-TAX-AMT
           END-IF
JS0618     ADD WS-UIWA-TAX-AMT-SC         TO WS-LTIH-TOTAL-TAX-SC

JS0618     MOVE WS-UIWA-TAX-AMT-SC        TO WS-CANADIAN-DOLLARS
JS0618     PERFORM CAN-DOLLARS-TO-US
JS0618     MULTIPLY WS-US-DOLLARS BY +1
JS0618        GIVING WS-UIWA-TAX-AMT-US ROUNDED.

      *---------------------------------
082008 LTI-DETERMINE-NBR-SPLITS.
      *---------------------------------
      ***** SPLIT AMOUNTS WILL BE $999, $998, $997, ETC, TO AVOID DUP
      ***** TRANSACTIONS; WE NEED TO KNOW THE NUMBER OF SPLITS
      ***** AT THIS POINT TO GET A BLOCK OF CONTROL NUMBERS

      ***** PUT LARGEST SINGLE FUEL AMOUNT INTO LTI-WORK-AMT
      ***** STARTING WITH THE MOST LIKELY SUSPECT
           IF WS-LTI-SC-CURRENCY
052311        IF WS-UIWA-TAX-AMT > 0
052311           IF WS-UIWA-NR1-COST-SC > WS-UIWA-NR2-COST-SC
052311              MOVE WS-UIWA-NR1-COST-SC TO WS-LTI-WORK-AMT
052311           ELSE
052311              MOVE WS-UIWA-NR2-COST-SC TO WS-LTI-WORK-AMT
052311           END-IF
052311        ELSE
                 COMPUTE WS-LTI-WORK-AMT =
                     WS-UIWA-NR2-COST-SC
                   + WS-UIWA-NR1-COST-SC
ED0113             + WS-UIWA-OTH-COST-SC
                 END-COMPUTE
052311        END-IF
071009        COMPUTE WS-LTI-WORK-AMT2 =
071009            WS-UIWA-REF-COST-SC
071009        END-COMPUTE
071009        IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
071009           MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
071009        END-IF
071009        COMPUTE WS-LTI-WORK-AMT2 =
071009            WS-UIWA-OTH-COST-SC
071009        END-COMPUTE
071009        IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
071009           MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
071009        END-IF
           ELSE
052311        IF WS-UIWA-TAX-AMT > 0
052311           IF WS-UIWA-NR1-COST > WS-UIWA-NR2-COST
052311              MOVE WS-UIWA-NR1-COST TO WS-LTI-WORK-AMT
052311           ELSE
052311              MOVE WS-UIWA-NR2-COST TO WS-LTI-WORK-AMT
052311           END-IF
052311        ELSE
                 COMPUTE WS-LTI-WORK-AMT =
                     WS-UIWA-NR2-COST
                   + WS-UIWA-NR1-COST
ED0113             + WS-UIWA-OTH-COST
                 END-COMPUTE
052311        END-IF
071009        COMPUTE WS-LTI-WORK-AMT2 =
071009            WS-UIWA-REF-COST
071009        END-COMPUTE
071009        IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
071009           MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
071009        END-IF
071009        COMPUTE WS-LTI-WORK-AMT2 =
071009            WS-UIWA-OTH-COST
071009        END-COMPUTE
071009        IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
071009           MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
071009        END-IF
           END-IF
052311*****IF THIS TRANSACTION CONTAINS ANY TAX, THEN WE NEED TO GET
052311*****THE TOTAL AMOUNT OF THE XTN WITHOUT TAXES
052311     IF WS-UIWA-TAX-AMT > 0
052311        IF WS-LTI-SC-CURRENCY
052311           COMPUTE WS-LTI-TRANS-AMT = WS-UIWA-NR1-COST-SC  +
052311                                      WS-UIWA-NR2-COST-SC  +
052311                                      WS-UIWA-REF-COST-SC  +
052311                                      WS-UIWA-OTH-COST-SC
052311*****WE NEED TO TAKE THE TAX AMOUNT AND DIVIDE IT BY THE
052311*****TOTAL AMOUNT OF THE XTN TO GET THE TAX RATE
AT0618           IF WS-HOLD-UIWA-TAX-AMT-SC > 0
JS0618              COMPUTE WS-LTI-TAX-RATE =
JS0618                        WS-HOLD-UIWA-TAX-AMT-SC /
052311                        WS-LTI-TRANS-AMT
AT0618            ELSE
JS0618              COMPUTE WS-LTI-TAX-RATE = WS-UIWA-TAX-AMT-ORIG /
052311                                        WS-LTI-TRANS-AMT
AT0618            END-IF
052311        ELSE
052311           COMPUTE WS-LTI-TRANS-AMT = WS-UIWA-NR1-COST  +
052311                                      WS-UIWA-NR2-COST  +
052311                                      WS-UIWA-REF-COST  +
052311                                      WS-UIWA-OTH-COST
052311*****WE NEED TO TAKE THE TAX AMOUNT AND DIVIDE IT BY THE
052311*****TOTAL AMOUNT OF THE XTN TO GET THE TAX RATE
AT0618           IF WS-HOLD-UIWA-TAX-AMT-SC > 0
JS0618              COMPUTE WS-LTI-TAX-RATE =
JS0618                        WS-HOLD-UIWA-TAX-AMT-SC /
052311                        WS-LTI-TRANS-AMT
AT0618            ELSE
JS0618              COMPUTE WS-LTI-TAX-RATE = WS-UIWA-TAX-AMT-ORIG /
052311                                        WS-LTI-TRANS-AMT
AT0618            END-IF
052311        END-IF
052311     END-IF.
052311*****WE NEED TO GET THE INITIAL FUEL SPLIT VALUE FOR LARGE
052311*****XTN'S WITH A TAX > 0 AND LESS < 100.00
052311*****THIS IS BECAUSE THE AMOUNT + TAX AMOUNT CAN'T BE > 999.99
052311     IF WS-UIWA-TAX-AMT > 0
052311        COMPUTE WS-LTI-INIT-SPLIT-VALUE =
052311                999.00 - (999.00 * WS-LTI-TAX-RATE)
052311        IF WS-LTI-INIT-SPLIT-VALUE > WS-LTI-TRANS-AMT
052311           COMPUTE WS-LTI-INIT-SPLIT-VALUE = WS-LTI-TRANS-AMT - 1
052311        END-IF
052311        MOVE WS-LTI-INIT-SPLIT-VALUE TO WS-LTI-SPLIT-AMT
052311        ADD 1 TO WS-LTI-SPLIT-AMT
052311     ELSE
              MOVE 1000                    TO WS-LTI-SPLIT-AMT
052311        MOVE 1000                    TO WS-LTI-INIT-SPLIT-NBR1
052311        MOVE 1000                    TO WS-LTI-INIT-SPLIT-NBR2
052311        MOVE 1000                    TO WS-LTI-INIT-SPLIT-REFER
052311        MOVE 1000                    TO WS-LTI-INIT-SPLIT-OTHER
052311     END-IF.

052311*****CALCULATE THE PERCENTAGES THAT #1, #2, REFER & OTHER ARE OF
052311*****OF TOTAL FUEL AMOUNT
052311     IF WS-UIWA-TAX-AMT > 0
052311        IF WS-LTI-SC-CURRENCY
052311           COMPUTE WS-LTI-PCT-XTN-NBR1 ROUNDED =
052311                        WS-UIWA-NR1-COST-SC / WS-LTI-TRANS-AMT
052311           COMPUTE WS-LTI-PCT-XTN-NBR2 ROUNDED =
052311                        WS-UIWA-NR2-COST-SC / WS-LTI-TRANS-AMT
052311           COMPUTE WS-LTI-PCT-XTN-REFER ROUNDED =
052311                        WS-UIWA-REF-COST-SC / WS-LTI-TRANS-AMT
052311           COMPUTE WS-LTI-PCT-XTN-OTHER ROUNDED =
052311                        WS-UIWA-OTH-COST-SC / WS-LTI-TRANS-AMT
052311        ELSE
052311           COMPUTE WS-LTI-PCT-XTN-NBR1 ROUNDED =
052311                        WS-UIWA-NR1-COST / WS-LTI-TRANS-AMT
052311           COMPUTE WS-LTI-PCT-XTN-NBR2 ROUNDED =
052311                        WS-UIWA-NR2-COST / WS-LTI-TRANS-AMT
052311           COMPUTE WS-LTI-PCT-XTN-REFER ROUNDED =
052311                        WS-UIWA-REF-COST / WS-LTI-TRANS-AMT
052311           COMPUTE WS-LTI-PCT-XTN-OTHER ROUNDED =
052311                     WS-UIWA-OTH-COST / WS-LTI-TRANS-AMT
052311        END-IF
052311     END-IF.

052311*****CALCULATE THE INITIAL SPLIT VALUE FOR #1, #2, REFER & OTHER
052311     IF WS-UIWA-TAX-AMT > 0
052311       COMPUTE WS-LTI-INIT-SPLIT-NBR1  = WS-LTI-INIT-SPLIT-VALUE *
052311                                         WS-LTI-PCT-XTN-NBR1
052311       COMPUTE WS-LTI-INIT-SPLIT-NBR2  = WS-LTI-INIT-SPLIT-VALUE *
052311                                         WS-LTI-PCT-XTN-NBR2
052311       COMPUTE WS-LTI-INIT-SPLIT-REFER = WS-LTI-INIT-SPLIT-VALUE *
052311                                         WS-LTI-PCT-XTN-REFER
052311       COMPUTE WS-LTI-INIT-SPLIT-OTHER = WS-LTI-INIT-SPLIT-VALUE *
052311                                         WS-LTI-PCT-XTN-OTHER
052311     END-IF.
052311
052311*****FIND THE FUEL THAT IS THE LARGEST % OF TRANSACTION TO USE
052311*****WHEN DETERMINING NBR OF SPLITS REQUIRED
052311     IF WS-UIWA-TAX-AMT > 0
052311        IF WS-LTI-INIT-SPLIT-NBR1 > WS-LTI-INIT-SPLIT-NBR2
052311           MOVE WS-LTI-INIT-SPLIT-NBR1  TO WS-LTI-INIT-SPLIT-VALUE
052311        ELSE
052311           MOVE WS-LTI-INIT-SPLIT-NBR2  TO WS-LTI-INIT-SPLIT-VALUE
052311        END-IF
052311        IF WS-LTI-INIT-SPLIT-REFER > WS-LTI-INIT-SPLIT-VALUE
052311           MOVE WS-LTI-INIT-SPLIT-REFER TO WS-LTI-INIT-SPLIT-VALUE
052311        END-IF
052311        IF WS-LTI-INIT-SPLIT-OTHER > WS-LTI-INIT-SPLIT-VALUE
052311           MOVE WS-LTI-INIT-SPLIT-OTHER TO WS-LTI-INIT-SPLIT-VALUE
052311        END-IF
052311        MOVE WS-LTI-INIT-SPLIT-VALUE    TO WS-LTI-SPLIT-AMT
052311        ADD 1.00                        TO WS-LTI-SPLIT-AMT
052311     END-IF.

           MOVE 1                          TO WS-LTI-SPLIT-COUNT
           PERFORM
             UNTIL WS-LTI-WORK-AMT < 1.00
               SUBTRACT 1                FROM WS-LTI-SPLIT-AMT
               SUBTRACT WS-LTI-SPLIT-AMT FROM WS-LTI-WORK-AMT
      ********* THIS WILL PREVENT A TRANS FOR < $1; THE REMAINING
      ********* CENTS WILL BE INCLUDED IN THE LAST TRANSACTION
               IF WS-LTI-WORK-AMT > 0.99
                  ADD 1 TO WS-LTI-SPLIT-COUNT
               END-IF
           END-PERFORM.

      *----------------------------------
052311 LTI-DETERMINE-NBR-SPLITS-TAX.
      *----------------------------------
      ***** SPLITTING XTN'S WITH A TAX AMOUNT > $99.99:
      ***** THE TAX FOR EACH SPLIT XTN WILL EQUAL THE TAX PERCENTAGE
      ***** AMOUNT OF THE ACTUAL AMOUNT FIELD ON EACH SPLIT XTN.
      ***** SINCE, AMOUNT + TAX CAN'T EXCEED $999.99, WE NEED TO START
      ***** AT THE LOWEST AMOUNT THAT WON'T EXCEED $999.99 WHEN THE TAX
      ***** PERCENTAGE AMOUNT IS ADDED TO THE SPLIT AMOUNT.

      ***** PUT LARGEST SINGLE FUEL AMOUNT INTO LTI-WORK-AMT
      ***** STARTING WITH THE MOST LIKELY SUSPECT
           IF WS-LTI-SC-CURRENCY
              IF WS-UIWA-NR1-COST-SC > WS-UIWA-NR2-COST-SC
                 MOVE WS-UIWA-NR1-COST-SC TO WS-LTI-WORK-AMT
              ELSE
                 MOVE WS-UIWA-NR2-COST-SC TO WS-LTI-WORK-AMT
              END-IF
              COMPUTE WS-LTI-WORK-AMT2 =
                  WS-UIWA-REF-COST-SC
              END-COMPUTE
              IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
                 MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
              END-IF
              COMPUTE WS-LTI-WORK-AMT2 =
                  WS-UIWA-OTH-COST-SC
              END-COMPUTE
              IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
                 MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
              END-IF
           ELSE
              IF WS-UIWA-NR1-COST > WS-UIWA-NR2-COST
                 MOVE WS-UIWA-NR1-COST TO WS-LTI-WORK-AMT
              ELSE
                 MOVE WS-UIWA-NR2-COST TO WS-LTI-WORK-AMT
              END-IF
              COMPUTE WS-LTI-WORK-AMT2 =
                  WS-UIWA-REF-COST
              END-COMPUTE
              IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
                 MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
              END-IF
              COMPUTE WS-LTI-WORK-AMT2 =
                  WS-UIWA-OTH-COST
              END-COMPUTE
              IF WS-LTI-WORK-AMT2 > WS-LTI-WORK-AMT
                 MOVE WS-LTI-WORK-AMT2 TO WS-LTI-WORK-AMT
              END-IF
           END-IF.

      *****WE NEED TO GET THE TOTAL AMOUNT OF THE XTN WITHOUT TAXES
           IF WS-LTI-SC-CURRENCY
              COMPUTE WS-LTI-TRANS-AMT = WS-UIWA-NR1-COST-SC  +
                                         WS-UIWA-NR2-COST-SC  +
                                         WS-UIWA-REF-COST-SC  +
                                         WS-UIWA-OTH-COST-SC
      *****WE NEED TO TAKE THE TAX AMOUNT AND DIVIDE IT BY THE
      *****TOTAL AMOUNT OF THE XTN TO GET THE TAX RATE
AT0618           IF WS-HOLD-UIWA-TAX-AMT-SC > 0
JS0618              COMPUTE WS-LTI-TAX-RATE =
JS0618                        WS-HOLD-UIWA-TAX-AMT-SC /
052311                        WS-LTI-TRANS-AMT
AT0618            ELSE
JS0618              COMPUTE WS-LTI-TAX-RATE = WS-UIWA-TAX-AMT-ORIG /
052311                                        WS-LTI-TRANS-AMT
AT0618            END-IF
           ELSE
              COMPUTE WS-LTI-TRANS-AMT = WS-UIWA-NR1-COST  +
                                         WS-UIWA-NR2-COST  +
                                         WS-UIWA-REF-COST  +
                                         WS-UIWA-OTH-COST
      *****WE NEED TO TAKE THE TAX AMOUNT AND DIVIDE IT BY THE
      *****TOTAL AMOUNT OF THE XTN TO GET THE TAX RATE
AT0618           IF WS-HOLD-UIWA-TAX-AMT-SC > 0
JS0618              COMPUTE WS-LTI-TAX-RATE =
JS0618                        WS-HOLD-UIWA-TAX-AMT-SC /
052311                        WS-LTI-TRANS-AMT
AT0618            ELSE
JS0618              COMPUTE WS-LTI-TAX-RATE = WS-UIWA-TAX-AMT-ORIG /
052311                                        WS-LTI-TRANS-AMT
AT0618            END-IF
           END-IF.

      *****WE NEED TO GET THE INITIAL FUEL SPLIT VALUE.
      *****THIS IS ACCOMPLISHED BY TAKING THE MAXIMUM AMOUNT
      *****ALLOWED FOR A TAX SPLIT (99.99) AND DIVIDING IT BY THE
      *****TAX RATE OF THE TRANSACTION.  IF THE AMOUNT IS > 900.00,
      *****THEN THE AMOUNT WILL BE SET TO 900.00.

AT0618     COMPUTE WS-LTI-INIT-SPLIT-VALUE = (95.99 /
                                             WS-LTI-TAX-RATE).

           IF WS-LTI-INIT-SPLIT-VALUE > 900
              MOVE 900 TO WS-LTI-INIT-SPLIT-VALUE
           END-IF.

MN0413     IF (WS-LTI-INIT-SPLIT-VALUE + 1) > WS-LTI-TRANS-AMT
              COMPUTE WS-LTI-INIT-SPLIT-VALUE = WS-LTI-TRANS-AMT - 1
           END-IF.

      *****CALCULATE THE PERCENTAGES THAT #1, #2, REFER & OTHER ARE OF
      *****OF TOTAL FUEL AMOUNT
           IF WS-LTI-SC-CURRENCY
              COMPUTE WS-LTI-PCT-XTN-NBR1 ROUNDED =
                           WS-UIWA-NR1-COST-SC / WS-LTI-TRANS-AMT
              COMPUTE WS-LTI-PCT-XTN-NBR2 ROUNDED =
                           WS-UIWA-NR2-COST-SC / WS-LTI-TRANS-AMT
              COMPUTE WS-LTI-PCT-XTN-REFER ROUNDED =
                           WS-UIWA-REF-COST-SC / WS-LTI-TRANS-AMT
              COMPUTE WS-LTI-PCT-XTN-OTHER ROUNDED =
                           WS-UIWA-OTH-COST-SC / WS-LTI-TRANS-AMT
           ELSE
              COMPUTE WS-LTI-PCT-XTN-NBR1 ROUNDED =
                           WS-UIWA-NR1-COST / WS-LTI-TRANS-AMT
              COMPUTE WS-LTI-PCT-XTN-NBR2 ROUNDED =
                           WS-UIWA-NR2-COST / WS-LTI-TRANS-AMT
              COMPUTE WS-LTI-PCT-XTN-REFER ROUNDED =
                           WS-UIWA-REF-COST / WS-LTI-TRANS-AMT
              COMPUTE WS-LTI-PCT-XTN-OTHER ROUNDED =
                           WS-UIWA-OTH-COST / WS-LTI-TRANS-AMT
           END-IF.

      *****CALCULATE THE INITIAL SPLIT VALUE FOR #1, #2, REFER & OTHER
           COMPUTE WS-LTI-INIT-SPLIT-NBR1  = WS-LTI-INIT-SPLIT-VALUE *
                                             WS-LTI-PCT-XTN-NBR1.
           COMPUTE WS-LTI-INIT-SPLIT-NBR2  = WS-LTI-INIT-SPLIT-VALUE *
                                             WS-LTI-PCT-XTN-NBR2.
           COMPUTE WS-LTI-INIT-SPLIT-REFER = WS-LTI-INIT-SPLIT-VALUE *
                                             WS-LTI-PCT-XTN-REFER.
           COMPUTE WS-LTI-INIT-SPLIT-OTHER = WS-LTI-INIT-SPLIT-VALUE *
                                             WS-LTI-PCT-XTN-OTHER.

      *****FIND THE FUEL THAT IS THE LARGEST % OF TRANSACTION TO USE
      *****WHEN DETERMINING NBR OF SPLITS REQUIRED
           IF WS-LTI-INIT-SPLIT-NBR1 > WS-LTI-INIT-SPLIT-NBR2
              MOVE WS-LTI-INIT-SPLIT-NBR1  TO WS-LTI-INIT-SPLIT-VALUE
           ELSE
              MOVE WS-LTI-INIT-SPLIT-NBR2  TO WS-LTI-INIT-SPLIT-VALUE
           END-IF.
           IF WS-LTI-INIT-SPLIT-REFER > WS-LTI-INIT-SPLIT-VALUE
              MOVE WS-LTI-INIT-SPLIT-REFER TO WS-LTI-INIT-SPLIT-VALUE
           END-IF.
           IF WS-LTI-INIT-SPLIT-OTHER > WS-LTI-INIT-SPLIT-VALUE
              MOVE WS-LTI-INIT-SPLIT-OTHER TO WS-LTI-INIT-SPLIT-VALUE
           END-IF.

      *****DETERMINE NUMBER OF SPLITS THAT WILL BE REQUIRED FOR XTN
           MOVE 1                       TO WS-LTI-SPLIT-COUNT.
           MOVE WS-LTI-INIT-SPLIT-VALUE TO WS-LTI-SPLIT-AMT.
           ADD 1.00                     TO WS-LTI-SPLIT-AMT.
           PERFORM
             UNTIL WS-LTI-WORK-AMT < 1.00
               SUBTRACT 1                FROM WS-LTI-SPLIT-AMT
               SUBTRACT WS-LTI-SPLIT-AMT FROM WS-LTI-WORK-AMT
      ********* THIS WILL PREVENT A TRANS FOR < $1; THE REMAINING
      ********* CENTS WILL BE INCLUDED IN THE LAST TRANSACTION
               IF WS-LTI-WORK-AMT > 0.99
                  ADD 1 TO WS-LTI-SPLIT-COUNT
               END-IF
           END-PERFORM.

      *---------------------------------
JS0618 LTI-DISCOUNT-FOR-CAN-TAXES-NEW.
      *---------------------------------
JS0618     MOVE WS-UIWA-NR2-COST-SC TO WS-SAVE-UIWA-NR2-COST-SC
JS0618     MOVE WS-UIWA-NR1-COST-SC TO WS-SAVE-UIWA-NR1-COST-SC
JS0618     MOVE WS-UIWA-REF-COST-SC TO WS-SAVE-UIWA-REF-COST-SC
JS0618     MOVE WS-UIWA-OTH-COST-SC TO WS-SAVE-UIWA-OTH-COST-SC
JS0618
JS0618     MOVE ZEROES              TO WS-NR2-TAX-PROD-COST
JS0618                                 WS-NR1-TAX-PROD-COST
JS0618                                 WS-REF-TAX-PROD-COST
JS0618                                 WS-OTH-TAX-PROD-COST.

JS0618     IF WS-UIWA-NR2-COST-SC > 0
JS0618        IF WS-NR2-SELECT-DISCOUNT > 0
JS0618           COMPUTE WS-PROD-COST-RATIO ROUNDED =
JS0618                   WS-UIWA-NR2-COST-SC / WS-LTI-HOLD-AMT-NR2
JS0618           COMPUTE WS-PROD-SPLIT-DISCOUNT ROUNDED =
JS0618                   WS-NR2-SELECT-DISCOUNT * WS-PROD-COST-RATIO
JS0618           COMPUTE WS-NR2-TAX-PROD-COST   =
JS0618                   WS-UIWA-NR2-COST-SC - WS-PROD-SPLIT-DISCOUNT
JS0618        ELSE
JS0618           MOVE WS-UIWA-NR2-COST-SC TO WS-NR2-TAX-PROD-COST
JS0618        END-IF
JS0618     END-IF.

JS0618     IF WS-UIWA-NR1-COST-SC > 0
JS0618        IF WS-NR1-SELECT-DISCOUNT > 0
JS0618           COMPUTE WS-PROD-COST-RATIO ROUNDED =
JS0618                   WS-UIWA-NR1-COST-SC / WS-LTI-HOLD-AMT-NR1
JS0618           COMPUTE WS-PROD-SPLIT-DISCOUNT ROUNDED =
JS0618                   WS-NR1-SELECT-DISCOUNT * WS-PROD-COST-RATIO
JS0618           COMPUTE WS-NR1-TAX-PROD-COST   =
JS0618                   WS-UIWA-NR1-COST-SC - WS-PROD-SPLIT-DISCOUNT
JS0618        ELSE
JS0618           MOVE WS-UIWA-NR1-COST-SC TO WS-NR1-TAX-PROD-COST
JS0618        END-IF
JS0618     END-IF.

JS0618     IF WS-UIWA-REF-COST-SC > 0
JS0618        IF WS-REF-SELECT-DISCOUNT > 0
JS0618           COMPUTE WS-PROD-COST-RATIO ROUNDED =
JS0618                   WS-UIWA-REF-COST-SC / WS-LTI-HOLD-AMT-REF
JS0618           COMPUTE WS-PROD-SPLIT-DISCOUNT ROUNDED =
JS0618                   WS-REF-SELECT-DISCOUNT * WS-PROD-COST-RATIO
JS0618           COMPUTE WS-REF-TAX-PROD-COST   =
JS0618                   WS-UIWA-REF-COST-SC - WS-PROD-SPLIT-DISCOUNT
JS0618        ELSE
JS0618           MOVE WS-UIWA-REF-COST-SC TO WS-REF-TAX-PROD-COST
JS0618        END-IF
JS0618     END-IF.

JS0618     IF WS-UIWA-OTH-COST-SC > 0
JS0618        IF WS-OTH-SELECT-DISCOUNT > 0
JS0618           COMPUTE WS-PROD-COST-RATIO ROUNDED =
JS0618                   WS-UIWA-OTH-COST-SC / WS-LTI-HOLD-AMT-OTH
JS0618           COMPUTE WS-PROD-SPLIT-DISCOUNT ROUNDED =
JS0618                   WS-OTH-SELECT-DISCOUNT * WS-PROD-COST-RATIO
JS0618           COMPUTE WS-OTH-TAX-PROD-COST   =
JS0618                   WS-UIWA-OTH-COST-SC - WS-PROD-SPLIT-DISCOUNT
JS0618        ELSE
JS0618           MOVE WS-UIWA-OTH-COST-SC TO WS-OTH-TAX-PROD-COST
JS0618        END-IF
JS0618     END-IF.

JS0618     IF WS-NR2-TAX-PROD-COST > ZEROS
JS0618        MOVE WS-NR2-TAX-PROD-COST TO WS-UIWA-NR2-COST-SC
JS0618     END-IF.
JS0618     IF WS-NR1-TAX-PROD-COST > ZEROS
JS0618        MOVE WS-NR1-TAX-PROD-COST TO WS-UIWA-NR1-COST-SC
JS0618     END-IF.
JS0618     IF WS-REF-TAX-PROD-COST > ZEROS
JS0618        MOVE WS-REF-TAX-PROD-COST TO WS-UIWA-REF-COST-SC
JS0618     END-IF.
JS0618     IF WS-OTH-TAX-PROD-COST > ZEROS
JS0618        MOVE WS-OTH-TAX-PROD-COST TO WS-UIWA-OTH-COST-SC
JS0618     END-IF.

061815*---------------------------------
061815 LTI-DISCOUNT-FOR-CAN-TAXES.
061815*---------------------------------
061815     MOVE WS-UIWA-NR2-COST-SC TO WS-SAVE-UIWA-NR2-COST-SC
061815     MOVE WS-UIWA-NR1-COST-SC TO WS-SAVE-UIWA-NR1-COST-SC
061815     MOVE WS-UIWA-REF-COST-SC TO WS-SAVE-UIWA-REF-COST-SC
061815     MOVE WS-UIWA-OTH-COST-SC TO WS-SAVE-UIWA-OTH-COST-SC
061815
061815     MOVE ZEROS TO WS-NR2-TAX-PROD-COST  WS-UIWA-NR2-COST-SC
061815                   WS-NR1-TAX-PROD-COST  WS-UIWA-NR1-COST-SC
061815                   WS-REF-TAX-PROD-COST  WS-UIWA-REF-COST-SC
061815                   WS-OTH-TAX-PROD-COST  WS-UIWA-OTH-COST-SC.
061815
061815     IF WS-LTI-SUB1 = 1
061815        IF WS-LARGE-TRANS-SPLITS-TAX
061815           MOVE 900.00              TO WS-NR2-BASE-AMT
061815                                       WS-NR1-BASE-AMT
061815                                       WS-REF-BASE-AMT
061815                                       WS-OTH-BASE-AMT
061815        ELSE
061815           MOVE 999.00              TO WS-NR2-BASE-AMT
061815                                       WS-NR1-BASE-AMT
061815                                       WS-REF-BASE-AMT
061815                                       WS-OTH-BASE-AMT
061815        END-IF
061815        MOVE WS-LTI-HOLD-AMT-NR2 TO WS-NR2-TRANS-AMT-BAL
061815        MOVE WS-LTI-HOLD-AMT-NR1 TO WS-NR1-TRANS-AMT-BAL
061815        MOVE WS-LTI-HOLD-AMT-REF TO WS-REF-TRANS-AMT-BAL
061815        MOVE WS-LTI-HOLD-AMT-OTH TO WS-OTH-TRANS-AMT-BAL
061815     END-IF.
061815
072315     IF WS-LTI-SUB1 = 1
072315        IF WS-OTH-TRANS-AMT-BAL > WS-OTH-BASE-AMT
072315           NEXT SENTENCE
072315        ELSE
072315           MOVE ZEROS TO WS-OTH-TRANS-AMT-BAL
072315     ELSE
072315        IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
072315           IF WS-OTH-TRANS-AMT-BAL > ZERO
072315              NEXT SENTENCE
072315           ELSE
072315              MOVE WS-LTI-HOLD-AMT-OTH TO WS-OTH-TRANS-AMT-BAL
072315           END-IF
072315        END-IF
072315     END-IF.
061815
061815     PERFORM LTI-CALC-DISC-FOR-SPLIT.
061815
061815*---------------------------------
061815 LTI-CALC-DISC-FOR-SPLIT.
061815*---------------------------------
061815     IF WS-NR2-TRANS-AMT-BAL > ZERO
061815        IF WS-NR2-SELECT-DISCOUNT > ZERO
061815           IF WS-NR2-TRANS-AMT-BAL > WS-NR2-BASE-AMT
061815              IF WS-LTI-SUB1 > 1
061815                 SUBTRACT 1 FROM WS-NR2-BASE-AMT
061815              END-IF
061815           ELSE
061815              MOVE WS-NR2-TRANS-AMT-BAL TO WS-NR2-BASE-AMT
061815              IF WS-LTI-SUB1 > 1
061815                 ADD .05                TO WS-NR2-BASE-AMT
061815              END-IF
061815           END-IF
061815           COMPUTE WS-PROD-COST-RATIO ROUNDED =
061815                   WS-NR2-BASE-AMT / WS-LTI-HOLD-AMT-NR2
061815           COMPUTE WS-PROD-SPLIT-DISCOUNT =
061815                   WS-NR2-SELECT-DISCOUNT * WS-PROD-COST-RATIO
061815           COMPUTE WS-NR2-TAX-PROD-COST   =
061815                   WS-NR2-BASE-AMT - WS-PROD-SPLIT-DISCOUNT
061815           COMPUTE WS-NR2-TRANS-AMT-BAL =
061815                   WS-NR2-TRANS-AMT-BAL - WS-NR2-BASE-AMT
061815        ELSE
061815           MOVE WS-NR2-TRANS-AMT-BAL TO WS-NR2-TAX-PROD-COST
061815           MOVE ZEROS                TO WS-NR2-TRANS-AMT-BAL
061815        END-IF
061815     END-IF.
061815
061815     IF WS-NR1-TRANS-AMT-BAL > ZERO
061815        IF WS-NR1-SELECT-DISCOUNT > ZERO
061815           IF WS-NR1-TRANS-AMT-BAL > WS-NR1-BASE-AMT
061815              IF WS-LTI-SUB1 > 1
061815                 SUBTRACT 1 FROM WS-NR1-BASE-AMT
061815              END-IF
061815           ELSE
061815              MOVE WS-NR1-TRANS-AMT-BAL TO WS-NR1-BASE-AMT
061815              IF WS-LTI-SUB1 > 1
061815                 ADD .05                TO WS-NR1-BASE-AMT
061815              END-IF
061815           END-IF
061815           COMPUTE WS-PROD-COST-RATIO ROUNDED =
061815                   WS-NR1-BASE-AMT / WS-LTI-HOLD-AMT-NR1
061815           COMPUTE WS-PROD-SPLIT-DISCOUNT =
061815                   WS-NR1-SELECT-DISCOUNT * WS-PROD-COST-RATIO
061815           COMPUTE WS-NR1-TAX-PROD-COST   =
061815                   WS-NR1-BASE-AMT - WS-PROD-SPLIT-DISCOUNT
061815           COMPUTE WS-NR1-TRANS-AMT-BAL =
061815                   WS-NR1-TRANS-AMT-BAL - WS-NR1-BASE-AMT
061815        ELSE
061815           MOVE WS-NR1-TRANS-AMT-BAL TO WS-NR1-TAX-PROD-COST
061815           MOVE ZEROS                TO WS-NR1-TRANS-AMT-BAL
061815        END-IF
061815     END-IF.
061815
061815     IF WS-REF-TRANS-AMT-BAL > ZERO
061815        IF WS-REF-SELECT-DISCOUNT > ZERO
061815           IF WS-REF-TRANS-AMT-BAL > WS-REF-BASE-AMT
061815              IF WS-LTI-SUB1 > 1
061815                 SUBTRACT 1 FROM WS-REF-BASE-AMT
061815              END-IF
061815           ELSE
061815              MOVE WS-REF-TRANS-AMT-BAL TO WS-REF-BASE-AMT
061815              IF WS-LTI-SUB1 > 1
061815                 ADD .05                TO WS-REF-BASE-AMT
061815              END-IF
061815           END-IF
061815           COMPUTE WS-PROD-COST-RATIO ROUNDED =
061815                   WS-REF-BASE-AMT / WS-LTI-HOLD-AMT-REF
061815           COMPUTE WS-PROD-SPLIT-DISCOUNT =
061815                   WS-REF-SELECT-DISCOUNT * WS-PROD-COST-RATIO
061815           COMPUTE WS-REF-TAX-PROD-COST   =
061815                   WS-REF-BASE-AMT - WS-PROD-SPLIT-DISCOUNT
061815           COMPUTE WS-REF-TRANS-AMT-BAL =
061815                   WS-REF-TRANS-AMT-BAL - WS-REF-BASE-AMT
061815        ELSE
061815           MOVE WS-REF-TRANS-AMT-BAL TO WS-REF-TAX-PROD-COST
061815           MOVE ZEROS                TO WS-REF-TRANS-AMT-BAL
061815        END-IF
061815     END-IF.
061815
061815     IF WS-OTH-TRANS-AMT-BAL > ZERO
061815        IF WS-OTH-SELECT-DISCOUNT > ZERO
061815           IF WS-OTH-TRANS-AMT-BAL > WS-OTH-BASE-AMT
061815              IF WS-LTI-SUB1 > 1
061815                 SUBTRACT 1 FROM WS-OTH-BASE-AMT
061815              END-IF
061815           ELSE
061815              MOVE WS-OTH-TRANS-AMT-BAL TO WS-OTH-BASE-AMT
061815              IF WS-LTI-SUB1 > 1
061815                 ADD .05                TO WS-OTH-BASE-AMT
061815              END-IF
061815           END-IF
061815           COMPUTE WS-PROD-COST-RATIO ROUNDED =
061815                   WS-OTH-BASE-AMT / WS-LTI-HOLD-AMT-OTH
061815           COMPUTE WS-PROD-SPLIT-DISCOUNT =
061815                   WS-OTH-SELECT-DISCOUNT * WS-PROD-COST-RATIO
061815           COMPUTE WS-OTH-TAX-PROD-COST   =
061815                   WS-OTH-BASE-AMT - WS-PROD-SPLIT-DISCOUNT
061815           COMPUTE WS-OTH-TRANS-AMT-BAL =
061815                   WS-OTH-TRANS-AMT-BAL - WS-OTH-BASE-AMT
061815        ELSE
061815           MOVE WS-OTH-TRANS-AMT-BAL TO WS-OTH-TAX-PROD-COST
061815           MOVE ZEROS                TO WS-OTH-TRANS-AMT-BAL
061815        END-IF
061815     END-IF.
061815
061815     IF WS-NR2-TAX-PROD-COST > ZEROS
061815        MOVE WS-NR2-TAX-PROD-COST TO WS-UIWA-NR2-COST-SC
061815     END-IF.
061815
061815     IF WS-NR1-TAX-PROD-COST > ZEROS
061815        MOVE WS-NR1-TAX-PROD-COST TO WS-UIWA-NR1-COST-SC
061815     END-IF.
061815
061815     IF WS-REF-TAX-PROD-COST > ZEROS
061815        MOVE WS-REF-TAX-PROD-COST TO WS-UIWA-REF-COST-SC
061815     END-IF.
061815
061815     IF WS-OTH-TAX-PROD-COST > ZEROS
061815        MOVE WS-OTH-TAX-PROD-COST TO WS-UIWA-OTH-COST-SC
061815     END-IF.
061815
061815*---------------------------------
061815 LTI-RESTORE-UIWA-COST.
061815*---------------------------------
061815     MOVE WS-SAVE-UIWA-NR2-COST-SC TO WS-UIWA-NR2-COST-SC
061815     MOVE WS-SAVE-UIWA-NR1-COST-SC TO WS-UIWA-NR1-COST-SC
061815     MOVE WS-SAVE-UIWA-REF-COST-SC TO WS-UIWA-REF-COST-SC
061815     MOVE WS-SAVE-UIWA-OTH-COST-SC TO WS-UIWA-OTH-COST-SC.

      *----------------------------
082008 FP-0175-LTI-A.
      *----------------------------
DR0422     MOVE 'FP-0175-LTI-A'             TO CXUTS0ML-PARAGRAPH.
      ***** THIS IS A MODIFIED COPY OF FP-0175
           IF WS-UIWA-NATS-CTL-NR NOT NUMERIC
              MOVE ZEROES TO WS-UIWA-NATS-CTL-NR
           END-IF
           IF THIS-BE-A-NATS-AUTH AND
              WS-UIWA-NATS-CTL-NR > ZEROES
082008        MOVE WS-UIWA-NATS-CTL-NR TO WS-CONTROL-NR
CP1011        COMPUTE CNRRA-1ST-CTRL-NR = WS-CONTROL-NR
082008                                  + WS-LTI-SPLIT-COUNT
082008                                  - 1
082008        END-COMPUTE
              MOVE ZEROES              TO WS-UIWA-NATS-CTL-NR
           ELSE
CP1011        SET CNRIA-RN-REQUEST      TO TRUE
CP1011        MOVE WS-LTI-SPLIT-COUNT   TO CNRIA-QTY-REQUESTED
CP1011        CALL WS-CXUTS400 USING DFHEIBLK,
CP1011                               DFHCOMMAREA,
CP1011                               CXUTW400-PARMS
CP1011        PERFORM CHECK-FOR-NORMAL-EIBRESP
CP1011        IF CNRRA-RC-MAX-CTL-USED
CP1011           MOVE CTL-NR-MAX TO OUT-COMENT
CP1011           MOVE CTL-NR-MAX-N TO POS-ERROR-NUMBER
CP1011           MOVE -1 TO FPINVNRL
CP1011           PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
CP1011        END-IF
CP1011        MOVE CNRRA-1ST-CTRL-NR    TO WS-CONTROL-NR.
082008     MOVE WS-CONTROL-NR TO ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
CP1011     COMPUTE WS-CTR1 = CNRRA-1ST-CTRL-NR + 1
           MOVE WS-CTR1 TO ORDRFIL-RRN
           EXEC CICS READ
                DATASET ('ORDRFIL')
                INTO    (DUP-ORDRFIL-RECD)
                RIDFLD  (ORDRFIL-RRN) RRN
                RESP    (EIBRESP)
           END-EXEC
DR0422     MOVE ORDRFIL-RRN       TO WS-NUM-7
DR0422     MOVE WS-NUM-7          TO CXUTS0ML-COMMAND
           PERFORM CHECK-FOR-NOTFND-EIBRESP
082008***** THIS IS DIFFERENT THAN FP-0175 IN THAT WE ARE NOT READING
082008***** FOR UPDATE AND UNLOCKING; READ FOR UPDATE DONE LATER ON
           EVALUATE TRUE
              WHEN EIBRESP = DFHRESP(NOTFND)
              WHEN ODR-VALID-DETAIL-RECD IN DUP-ORDRFIL-RECD
                 CONTINUE
              WHEN OTHER
                 MOVE 'Y' TO WS-LOOP-FLAG
                 MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
                   TO I-CTL-NR
           END-EVALUATE.

      *---------------------------------
082008 LTI-SAVE-OFF-LARGE-TRANS-HOLD.
      *---------------------------------
      ***** SAVING WORK AREAS WITH DATA FOR THE ENTIRE TRANSACTION
      ***** BEFORE IT IS SPLIT UP
           MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD
                                        TO WS-LTIH-FMLOG
120412     MOVE FMDL-SC-SELECT-DISCOUNT TO WS-LTIH-SELECT-DISC
           COMPUTE WS-LTIH-TRANS-GALLONS =
              FMDL-BC-TR-TRACTOR-GALLONS +
SB0813        FMDL-BC-TR-OTHER-GALLONS   +
              FMDL-BC-NR1-GALLONS
           END-COMPUTE
071609***** GALLONS2 NEEDS TO BE THE SAME AS GALLONS
071609     MOVE WS-LTIH-TRANS-GALLONS TO WS-LTIH-TRANS-GALLONS2
           COMPUTE WS-LTIH-HUB =
              WS-UIWA-HUB -
              UNITMST-LAST-HUB
           END-COMPUTE
           COMPUTE WS-HOLD-TRANS-GALLONS =
              FMDL-TR-TRACTOR-GALLONS +
              FMDL-TR-TRAILER-GALLONS +
SB0813        FMDL-TR-OTHER-GALLONS   +
              FMDL-NR1-GALLONS
           END-COMPUTE
           MOVE WS-UIWA-CASH-AMT    TO WS-LTIH-CASH-AMT
           MOVE WS-UIWA-TAX-AMT-SC  TO WS-LTIH-TAX-AMT-SC
JS0618     MOVE ZEROES              TO WS-LTIH-TOTAL-TAX-SC
           MOVE WS-BILLABLE         TO WS-LTIH-BILLABLE
           MOVE WS-NON-BILLABLE     TO WS-LTIH-NON-BILLABLE
           MOVE WS2-CURXMN          TO WS-LTIH-CURXMN2
           MOVE WS-CURXMN           TO WS-LTIH-CURXMN
           MOVE WS-CONTROL-NR       TO WS-LTIH-CONTROL-NR
           IF COM-THIS-IS-A-TERM-FUEL-XTN
              MOVE ZERO             TO WS-LTIH-DRAFT-AMT
           ELSE
              MOVE WS2-BILLABLE     TO WS-LTIH-DRAFT-AMT
           END-IF
           MOVE COM-FP-TRANS-AMT    TO WS-LTIH-FP-TRANS-AMT
           MOVE WS-TOTAL-REQUEST    TO WS-LTIH-TOTAL-REQUEST
           CONTINUE.

      *---------------------------------
082008 LTI-SAVE-OFF-UIWA-VALUES.
      *---------------------------------
      ***** THESE ARE THE VALUES THAT WILL MAKE UP TRANSACTION SPLIT
           IF WS-LTI-SC-CURRENCY
              MOVE WS-UIWA-NR1-QTY-SC  TO WS-LTIH-UIWA-NR1-QTY
              MOVE WS-UIWA-NR1-COST-SC TO WS-LTIH-UIWA-NR1-COST
              MOVE WS-UIWA-NR2-QTY-SC  TO WS-LTIH-UIWA-NR2-QTY
              MOVE WS-UIWA-NR2-COST-SC TO WS-LTIH-UIWA-NR2-COST
              MOVE WS-UIWA-REF-QTY-SC  TO WS-LTIH-UIWA-REF-QTY
              MOVE WS-UIWA-REF-COST-SC TO WS-LTIH-UIWA-REF-COST
              MOVE WS-UIWA-OTH-QTY-SC  TO WS-LTIH-UIWA-OTH-QTY
              MOVE WS-UIWA-OTH-COST-SC TO WS-LTIH-UIWA-OTH-COST
052311        MOVE WS-UIWA-TAX-AMT-SC  TO WS-LTIH-UIWA-AMT-TAX
052711        MOVE WS-UIWA-NR1-QTY     TO WS-LTI-HOLD-QTY-NR1-OTH
052711        MOVE WS-UIWA-NR1-COST    TO WS-LTI-HOLD-AMT-NR1-OTH
052711        MOVE WS-UIWA-NR2-QTY     TO WS-LTI-HOLD-QTY-NR2-OTH
052711        MOVE WS-UIWA-NR2-COST    TO WS-LTI-HOLD-AMT-NR2-OTH
052711        MOVE WS-UIWA-REF-QTY     TO WS-LTI-HOLD-QTY-REF-OTH
052711        MOVE WS-UIWA-REF-COST    TO WS-LTI-HOLD-AMT-REF-OTH
052711        MOVE WS-UIWA-OTH-QTY     TO WS-LTI-HOLD-QTY-OTH-OTH
052711        MOVE WS-UIWA-OTH-COST    TO WS-LTI-HOLD-AMT-OTH-OTH
052711        MOVE WS-UIWA-TAX-AMT     TO WS-LTI-HOLD-AMT-TAX-OTH
           ELSE
              MOVE WS-UIWA-NR1-QTY     TO WS-LTIH-UIWA-NR1-QTY
              MOVE WS-UIWA-NR1-COST    TO WS-LTIH-UIWA-NR1-COST
              MOVE WS-UIWA-NR2-QTY     TO WS-LTIH-UIWA-NR2-QTY
              MOVE WS-UIWA-NR2-COST    TO WS-LTIH-UIWA-NR2-COST
              MOVE WS-UIWA-REF-QTY     TO WS-LTIH-UIWA-REF-QTY
              MOVE WS-UIWA-REF-COST    TO WS-LTIH-UIWA-REF-COST
              MOVE WS-UIWA-OTH-QTY     TO WS-LTIH-UIWA-OTH-QTY
              MOVE WS-UIWA-OTH-COST    TO WS-LTIH-UIWA-OTH-COST
052311        MOVE WS-UIWA-TAX-AMT     TO WS-LTIH-UIWA-AMT-TAX
052711        MOVE WS-UIWA-NR1-QTY-SC  TO WS-LTI-HOLD-QTY-NR1-OTH
052711        MOVE WS-UIWA-NR1-COST-SC TO WS-LTI-HOLD-AMT-NR1-OTH
052711        MOVE WS-UIWA-NR2-QTY-SC  TO WS-LTI-HOLD-QTY-NR2-OTH
052711        MOVE WS-UIWA-NR2-COST-SC TO WS-LTI-HOLD-AMT-NR2-OTH
052711        MOVE WS-UIWA-REF-QTY-SC  TO WS-LTI-HOLD-QTY-REF-OTH
052711        MOVE WS-UIWA-REF-COST-SC TO WS-LTI-HOLD-AMT-REF-OTH
052711        MOVE WS-UIWA-OTH-QTY-SC  TO WS-LTI-HOLD-QTY-OTH-OTH
052711        MOVE WS-UIWA-OTH-COST-SC TO WS-LTI-HOLD-AMT-OTH-OTH
052711        MOVE WS-UIWA-TAX-AMT-SC  TO WS-LTI-HOLD-AMT-TAX-OTH
           END-IF
           CONTINUE.

      *---------------------------------
082008 LTI-PROCESS-2.
      *---------------------------------
      ***** PERFORMED FOR EACH TRANSACTION SPLIT
           PERFORM LTI-INIT-UIWA
ED0113******** ADJUST #2 AMT GOING ON THIS TRANSCTION FOR THE PARTIAL
ED0113******** #1 AMOUNT GOING ON THIS TRANSACTION
ED0113     IF WS-LTI-SPLIT-AMT-NBR2-HLD > 0
ED0113        MOVE WS-LTI-SPLIT-AMT-NBR2-HLD
ED0113                                  TO WS-LTI-SPLIT-AMT-NBR2
ED0113        MOVE ZEROES               TO WS-LTI-SPLIT-AMT-NBR2-HLD
ED0113     END-IF
ED0113******** ADJUST OTHER AMT GOING ON THIS TRANSCTION FOR THE PARTIAL
ED0113******** #1 AND #2 AMOUNT GOING ON THIS TRANSACTION
ED0113     IF WS-LTI-SPLIT-AMT-OTHER-HLD > 0
ED0113        MOVE WS-LTI-SPLIT-AMT-OTHER-HLD
ED0113                                  TO WS-LTI-SPLIT-AMT-OTHER
ED0113        MOVE ZEROES               TO WS-LTI-SPLIT-AMT-OTHER-HLD
ED0113     END-IF
      ***** DO NOT SUBTRACT FROM SPLIT AMOUNT ON LAST PASS TO HANDLE
      ***** LEFT OVER AMOUNT LESS THAN ONE DOLLAR
           IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
              MOVE 'Y'     TO WS-LTI-LAST-FLAG
           ELSE
              SUBTRACT 1 FROM WS-LTI-SPLIT-AMT
052311        SUBTRACT 1 FROM WS-LTI-SPLIT-AMT-NBR1
052311        SUBTRACT 1 FROM WS-LTI-SPLIT-AMT-NBR2
052311        SUBTRACT 1 FROM WS-LTI-SPLIT-AMT-REFER
052311        SUBTRACT 1 FROM WS-LTI-SPLIT-AMT-OTHER
           END-IF
           MOVE ZERO       TO WS-LTI-WORK-AMT
                              WS-LTI-SUB2
071009***** THE EASIEST WAY TO FACTOR IN CANADIAN GST WITH THIS PROCESS
071009***** IS TO SUBTRACT IT FROM THE SPLIT AMOUNT ON FIRST PASS ONLY
052311*****IF LTI-FIRST-PASS
052311*****  AND WS-UIWA-TAX-AMT > 0
052311*****   IF WS-LTI-SC-CURRENCY
052311*****      SUBTRACT WS-UIWA-TAX-AMT-SC FROM WS-LTI-SPLIT-AMT
052311*****   ELSE
052311*****      SUBTRACT WS-UIWA-TAX-AMT    FROM WS-LTI-SPLIT-AMT
052311*****   END-IF
052311**** END-IF
           PERFORM LTI-BUILD-THIS-TRANS-SPLIT
             UNTIL WS-LTI-SUB2 > 4
071009***** RESETTTING SPLIT AMOUNT
           IF LTI-SECOND-PASS
              PERFORM LTI-SECOND-PASS-INIT
           END-IF
           PERFORM LTI-CURRENCY-CONVERSIONS
           PERFORM LTI-INITIALIZE-BILLABLES
           PERFORM 20750-COMPUTE-BILLABLE-AND-NON
           PERFORM 20990-COMPUTE-WS-CURXMN
           CONTINUE.

      *---------------------------------
082008 LTI-INITIALIZE-BILLABLES.
      *---------------------------------
           IF LTI-FIRST-PASS
              MOVE WS-LTIH-PROD-BILLABLE      TO WS-BILLABLE
              MOVE WS-LTIH-PROD-BILLABLE2     TO WS2-BILLABLE
              MOVE WS-LTIH-PROD-NON-BILLABLE  TO WS-NON-BILLABLE
              MOVE WS-LTIH-PROD-NON-BILLABLE2 TO WS2-NON-BILLABLE
              MOVE WS-LTIH-PROD-BILLABLE-FUEL TO WS2-BILLABLE-FUEL
              MOVE WS-LTIH-PROD-NON-BILLABLE-FUEL
                                              TO WS2-NON-BILLABLE-FUEL
           ELSE
              INITIALIZE                         WS-BILLABLE
                                                 WS2-BILLABLE
                                                 WS-NON-BILLABLE
                                                 WS2-NON-BILLABLE
                                                 WS2-BILLABLE-FUEL
                                                 WS2-NON-BILLABLE-FUEL
           END-IF
           CONTINUE.

      *---------------------------------
082008 LTI-INIT-UIWA.
      *---------------------------------
           IF WS-LTI-SC-CURRENCY
              INITIALIZE WS-UIWA-NR1-QTY-SC
                         WS-UIWA-NR1-COST-SC
                         WS-UIWA-NR2-QTY-SC
                         WS-UIWA-NR2-COST-SC
                         WS-UIWA-REF-QTY-SC
                         WS-UIWA-REF-COST-SC
                         WS-UIWA-OTH-QTY-SC
                         WS-UIWA-OTH-COST-SC
052311                   WS-UIWA-TAX-AMT-SC
           ELSE
              INITIALIZE WS-UIWA-NR1-QTY
                         WS-UIWA-NR1-COST
                         WS-UIWA-NR2-QTY
                         WS-UIWA-NR2-COST
                         WS-UIWA-REF-QTY
                         WS-UIWA-REF-COST
                         WS-UIWA-OTH-QTY
                         WS-UIWA-OTH-COST
052311                   WS-UIWA-TAX-AMT
           END-IF
           CONTINUE.

      *---------------------------------
082008 LTI-BUILD-THIS-TRANS-SPLIT.
      *---------------------------------
           ADD 1 TO WS-LTI-SUB2
AT0618     IF WS-LTI-SUB2 = 2
AT0618        IF WS-LTI-SPLIT-AMT-NBR2-HLD > 0 AND
AT0618                WS-LTI-SPLIT-AMT-NBR2 = 0
AT0618          MOVE WS-LTI-SPLIT-AMT-NBR2-HLD TO WS-LTI-SPLIT-AMT-NBR2.
052311     EVALUATE WS-LTI-SUB2
052311        WHEN 1
052311           MOVE WS-LTI-SPLIT-AMT-NBR1  TO WS-LTI-SPLIT-AMT
052311        WHEN 2
052311           MOVE WS-LTI-SPLIT-AMT-NBR2  TO WS-LTI-SPLIT-AMT
052311        WHEN 3
052311           MOVE WS-LTI-SPLIT-AMT-REFER TO WS-LTI-SPLIT-AMT
052311        WHEN 4
052311           MOVE WS-LTI-SPLIT-AMT-OTHER
052311                                    TO WS-LTI-SPLIT-AMT
052311     END-EVALUATE.
           EVALUATE TRUE
             WHEN WS-LTI-SUB2 > 4
AT0618          PERFORM LTI-CALC-TAX-BEF-CHECK-TOT
             WHEN WS-LTIH-UIWA-AMT (WS-LTI-SUB2) NOT > ZERO
      ********** AMOUNT WAS USED UP BY PREV TRANSACTION SPLIT SO
      ********** DO SOME INITIALIZATION HERE
                IF WS-LTI-ZERO-FLAG (WS-LTI-SUB2) = 'Z'
                   PERFORM LTI-AMT-WENT-TO-ZERO
                   MOVE 'N' TO WS-LTI-ZERO-FLAG (WS-LTI-SUB2)
                END-IF
             WHEN OTHER
                PERFORM LTI-ADD-ON-UIWA-AMT
           END-EVALUATE
           CONTINUE.

      *---------------------------------
AT0618 LTI-CALC-TAX-BEF-CHECK-TOT.
      *---------------------------------
052311     IF WS-LTI-SC-CURRENCY
052711        COMPUTE WS-LTI-MOVE-TAX = (WS-UIWA-NR1-COST-SC +
052711                                   WS-UIWA-NR2-COST-SC +
052711                                   WS-UIWA-REF-COST-SC +
052711                                   WS-UIWA-OTH-COST-SC) *
052711                                   WS-LTI-TAX-RATE
052311     ELSE
052711        COMPUTE WS-LTI-MOVE-TAX = (WS-UIWA-NR1-COST +
052711                                   WS-UIWA-NR2-COST +
052711                                   WS-UIWA-REF-COST +
052711                                   WS-UIWA-OTH-COST) *
052711                                   WS-LTI-TAX-RATE.
052711******** IF LAST SPLIT OF XTN, WE NEED TO CHECK TAX TOTALS TO
052711******** ENSURE WE AREN'T OFF BECAUSE OF ROUNDING
052711     ADD WS-LTI-MOVE-TAX     TO WS-LTI-TOTAL-AMT-TAX
052711     IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
052711        PERFORM LTI-CHECK-TOTAL-TAX
052711        MOVE ZEROES TO WS-LTI-TOTAL-AMT-TAX
052711     END-IF
052311     IF WS-LTI-SC-CURRENCY
052311        MOVE WS-LTI-MOVE-TAX    TO WS-UIWA-TAX-AMT-SC
           ELSE
052311        MOVE WS-LTI-MOVE-TAX    TO WS-UIWA-TAX-AMT.

      *---------------------------------
052711 LTI-CHECK-TOTAL-TAX.
      *---------------------------------
           IF WS-LTI-TOTAL-AMT-TAX = WS-LTI-HOLD-AMT-TAX
              CONTINUE
           ELSE
              IF WS-LTI-TOTAL-AMT-TAX > WS-LTI-HOLD-AMT-TAX
                 COMPUTE WS-LTI-AMT-TO-SUBTRACT =
                         WS-LTI-TOTAL-AMT-TAX - WS-LTI-HOLD-AMT-TAX
                 SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                                WS-LTI-MOVE-TAX
              ELSE
                 IF WS-LTI-TOTAL-AMT-TAX < WS-LTI-HOLD-AMT-TAX
                    COMPUTE WS-LTI-AMT-TO-ADD =
                        WS-LTI-HOLD-AMT-TAX - WS-LTI-TOTAL-AMT-TAX
                    ADD WS-LTI-AMT-TO-ADD TO WS-LTI-MOVE-TAX
                 END-IF
              END-IF
           END-IF.

      *---------------------------------
082008 LTI-ADD-ON-UIWA-AMT.
      *---------------------------------
      ***** SINCE NR1 DIESEL AND NR2 DIESEL ARE COMBINED INTO ONE
      ***** ENTITY IN BATCH PROCESSING (TSFMB010), THEY WILL BE
      ***** TREATED AS ONE ENTITY FOR LARGE TRANSACTION SPLITS
      ***** UNLESS THEY ARE BOTH GREATER THAN 999
           IF WS-LTI-SUB2 = 2
052311        IF WS-LARGE-TRANS-SPLITS-TAX
052311        OR WS-LARGE-TRANS-WITH-TAX
052311           MOVE WS-LTIH-UIWA-AMT (WS-LTI-SUB2) TO WS-LTI-WORK-AMT
052311        ELSE
ED0113           IF WS-LTIH-UIWA-AMT (WS-LTI-SUB2) > 999.99
ED0113           AND WS-LTI-WORK-AMT > 999.99
ED0113              MOVE WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
ED0113                                               TO WS-LTI-WORK-AMT
ED0113           ELSE
                    ADD  WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
                                                     TO WS-LTI-WORK-AMT
ED0113           END-IF
052311        END-IF
           ELSE
              MOVE WS-LTIH-UIWA-AMT (WS-LTI-SUB2) TO WS-LTI-WORK-AMT
           END-IF
           IF NOT (WS-LTI-WORK-AMT > WS-LTI-SPLIT-AMT)
      ******** ENTIRE AMOUNT WILL FIT IN THIS TRANSACTION
              MOVE WS-LTIH-UIWA-AMT (WS-LTI-SUB2) TO WS-LTI-MOVE-AMT
              MOVE WS-LTIH-UIWA-QTY (WS-LTI-SUB2) TO WS-LTI-MOVE-QTY
052711******** ADD TO TOTALS TO ENSURE OUR TOTALS AREN'T OFF BECAUSE
052711******** OF ROUNDING
052711        PERFORM LTI-ADD-TO-TOTALS
052711******** CHECK TOTALS TO ENSURE WE AREN'T OFF BECAUSE OF ROUNDING
052711        PERFORM LTI-CHECK-TOTALS
              PERFORM LTI-MOVE-AMT-TO-UIWA
ED0113******** DO NOT ALLOW #2 OR OTHER TO FORCE AMOUNT OVER LIMIT FOR
ED0113******** THIS TRANSACTION
ED0113        IF WS-LTI-SUB2 = 1
ED0113        AND WS-LTIH-UIWA-AMT (2) = ZEROES
ED0113           IF WS-LTI-SPLIT-AMT-OTHER > ZEROES
ED0113              SUBTRACT WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
ED0113                                  FROM WS-LTI-SPLIT-AMT-OTHER
ED0113           END-IF
ED0113        END-IF
ED0113        IF WS-LTI-SUB2 = 2
ED0113        AND WS-LTI-SPLIT-AMT-OTHER > ZEROES
ED0113           SUBTRACT WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
ED0113                                  FROM WS-LTI-SPLIT-AMT-OTHER
ED0113        END-IF
              MOVE ZERO TO WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
                           WS-LTIH-UIWA-QTY (WS-LTI-SUB2)
              MOVE 'Z'     TO WS-LTI-ZERO-FLAG (WS-LTI-SUB2)
           ELSE
      ******** ONLY PART OF THIS AMOUNT WILL FIT IN THIS TRANSACTION
              COMPUTE WS-LTI-OVER-AMT = WS-LTI-WORK-AMT
                                      - WS-LTI-SPLIT-AMT
              END-COMPUTE
              COMPUTE WS-LTI-MOVE-AMT =
                               WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
                             - WS-LTI-OVER-AMT
              END-COMPUTE
ED0113        IF WS-LTI-MOVE-AMT < ZEROES
ED0113           MOVE ZEROES              TO WS-LTI-MOVE-AMT
ED0113        END-IF
ED0113******** DO NOT INCLUDE #2 OR OTHER WHEN LIMIT ALREADY REACHED
ED0113******** FOR THIS TRANSACTION
ED0113        IF WS-LTI-SUB2 = 1
ED0113           IF WS-LTI-SPLIT-AMT-NBR2  > ZEROES
ED0113              MOVE WS-LTI-SPLIT-AMT-NBR2
ED0113                                    TO WS-LTI-SPLIT-AMT-NBR2-HLD
ED0113              MOVE ZEROES           TO WS-LTI-SPLIT-AMT-NBR2
ED0113           END-IF
ED0113           IF WS-LTI-SPLIT-AMT-OTHER > ZEROES
ED0113              MOVE WS-LTI-SPLIT-AMT-OTHER
ED0113                                    TO WS-LTI-SPLIT-AMT-OTHER-HLD
ED0113              MOVE ZEROES           TO WS-LTI-SPLIT-AMT-OTHER
ED0113           END-IF
ED0113        END-IF
ED0113******** DO NOT INCLUDE OTHER WHEN LIMIT ALREADY REACHED
ED0113******** FOR THIS TRANSACTION
ED0113        IF WS-LTI-SUB2 = 2
ED0113        AND WS-LTI-SPLIT-AMT-OTHER > ZEROES
ED0113           MOVE WS-LTI-SPLIT-AMT-OTHER
ED0113                                    TO WS-LTI-SPLIT-AMT-OTHER-HLD
ED0113           MOVE ZEROES              TO WS-LTI-SPLIT-AMT-OTHER
ED0113        END-IF
              PERFORM LTI-COMPUTE-QTY
052711******** ADD TO TOTALS TO ENSURE OUT TOTALS AREN'T OFF BECAUSE
052711******** OF ROUNDING
052711        PERFORM LTI-ADD-TO-TOTALS
052711******** IF ON LAST SPLIT FOR XTN AND MORE THAN ONE FUEL IS
052711******** PURCHASED, IT IS POSSIBLE TO HAVE EXTRA LEFT ON
052711******** A FUEL PURCHASE (DOESN'T HIT ENTIRE AMT FITS IN XTN CODE)
052711        IF WS-LTI-SPLIT-COUNT = WS-LTI-SUB1
052711           PERFORM LTI-CHECK-TOTALS
052711        END-IF
              PERFORM LTI-MOVE-AMT-TO-UIWA
      ******** KEEP THE PORTION OF THE AMOUNT THAT COULD NOT BE USED
              MOVE WS-LTI-OVER-AMT TO WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
              MOVE WS-LTI-OVER-QTY TO WS-LTIH-UIWA-QTY (WS-LTI-SUB2)
           END-IF
           CONTINUE.

      *---------------------------------
052711 LTI-ADD-TO-TOTALS.
      *---------------------------------
      ***** WE NEED TO ADD UP OUR TOTALS TO ENSURE THAT WE AREN'T OFF
      ***** TOTALS BECAUSE OF ROUNDING; IF SO WE WILL NEED TO ADJUST
      ***** THE LAST SPLIT TRANSACTION QTY/AMTS

           EVALUATE WS-LTI-SUB2
              WHEN 1
                COMPUTE WS-LTI-TOTAL-AMT-NR1 = WS-LTI-TOTAL-AMT-NR1 +
                                               WS-LTI-MOVE-AMT
                COMPUTE WS-LTI-TOTAL-QTY-NR1 = WS-LTI-TOTAL-QTY-NR1 +
                                               WS-LTI-MOVE-QTY
              WHEN 2
                COMPUTE WS-LTI-TOTAL-AMT-NR2 = WS-LTI-TOTAL-AMT-NR2 +
                                               WS-LTI-MOVE-AMT
                COMPUTE WS-LTI-TOTAL-QTY-NR2 = WS-LTI-TOTAL-QTY-NR2 +
                                               WS-LTI-MOVE-QTY
              WHEN 3
                COMPUTE WS-LTI-TOTAL-AMT-REF = WS-LTI-TOTAL-AMT-REF +
                                               WS-LTI-MOVE-AMT
                COMPUTE WS-LTI-TOTAL-QTY-REF = WS-LTI-TOTAL-QTY-REF +
                                               WS-LTI-MOVE-QTY
              WHEN 4
                COMPUTE WS-LTI-TOTAL-AMT-OTH = WS-LTI-TOTAL-AMT-OTH +
                                               WS-LTI-MOVE-AMT
                COMPUTE WS-LTI-TOTAL-QTY-OTH = WS-LTI-TOTAL-QTY-OTH +
                                               WS-LTI-MOVE-QTY
           END-EVALUATE.

      *---------------------------------
052711 LTI-CHECK-TOTALS.
      *---------------------------------
      ***** THIS IS THE LAST SPLIT, THEREFORE, WE NEED TO MAKE SURE THAT
      ***** WE AREN'T OFF ON OUR TOTALS BECAUSE OF ROUNDING; IF SO
      ***** WE NEED TO ADJUST THE LAST SPLIT TRANSACTION AMOUNT

      *****CHECK AMOUNTS
           EVALUATE WS-LTI-SUB2
              WHEN 1
                IF WS-LTI-TOTAL-AMT-NR1 = WS-LTI-HOLD-AMT-NR1
                   CONTINUE
                ELSE
                   IF WS-LTI-TOTAL-AMT-NR1 > WS-LTI-HOLD-AMT-NR1
                      COMPUTE WS-LTI-AMT-TO-SUBTRACT =
                              WS-LTI-TOTAL-AMT-NR1 - WS-LTI-HOLD-AMT-NR1
                      SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                                     WS-LTI-MOVE-AMT
                   ELSE
                      IF WS-LTI-TOTAL-AMT-NR1 < WS-LTI-HOLD-AMT-NR1
                         COMPUTE WS-LTI-AMT-TO-ADD =
                             WS-LTI-HOLD-AMT-NR1 - WS-LTI-TOTAL-AMT-NR1
                         ADD WS-LTI-AMT-TO-ADD TO WS-LTI-MOVE-AMT
                      END-IF
                   END-IF
                END-IF
              WHEN 2
                IF WS-LTI-TOTAL-AMT-NR2 = WS-LTI-HOLD-AMT-NR2
                   CONTINUE
                ELSE
                   IF WS-LTI-TOTAL-AMT-NR2 > WS-LTI-HOLD-AMT-NR2
                      COMPUTE WS-LTI-AMT-TO-SUBTRACT =
                              WS-LTI-TOTAL-AMT-NR2 - WS-LTI-HOLD-AMT-NR2
                      SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                                     WS-LTI-MOVE-AMT
                   ELSE
                      IF WS-LTI-TOTAL-AMT-NR2 < WS-LTI-HOLD-AMT-NR2
                         COMPUTE WS-LTI-AMT-TO-ADD =
                             WS-LTI-HOLD-AMT-NR2 - WS-LTI-TOTAL-AMT-NR2
                         ADD WS-LTI-AMT-TO-ADD TO WS-LTI-MOVE-AMT
                      END-IF
                   END-IF
                END-IF
              WHEN 3
                IF WS-LTI-TOTAL-AMT-REF = WS-LTI-HOLD-AMT-REF
                   CONTINUE
                ELSE
                   IF WS-LTI-TOTAL-AMT-REF > WS-LTI-HOLD-AMT-REF
                      COMPUTE WS-LTI-AMT-TO-SUBTRACT =
                              WS-LTI-TOTAL-AMT-REF - WS-LTI-HOLD-AMT-REF
                      SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                                     WS-LTI-MOVE-AMT
                   ELSE
                      IF WS-LTI-TOTAL-AMT-REF < WS-LTI-HOLD-AMT-REF
                         COMPUTE WS-LTI-AMT-TO-ADD =
                             WS-LTI-HOLD-AMT-REF - WS-LTI-TOTAL-AMT-REF
                         ADD WS-LTI-AMT-TO-ADD TO WS-LTI-MOVE-AMT
                      END-IF
                   END-IF
                END-IF
              WHEN 4
                IF WS-LTI-TOTAL-AMT-OTH = WS-LTI-HOLD-AMT-OTH
                   CONTINUE
                ELSE
                   IF WS-LTI-TOTAL-AMT-OTH > WS-LTI-HOLD-AMT-OTH
                      COMPUTE WS-LTI-AMT-TO-SUBTRACT =
                              WS-LTI-TOTAL-AMT-OTH - WS-LTI-HOLD-AMT-OTH
                      SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                                     WS-LTI-MOVE-AMT
                   ELSE
                      IF WS-LTI-TOTAL-AMT-OTH < WS-LTI-HOLD-AMT-OTH
                         COMPUTE WS-LTI-AMT-TO-ADD =
                             WS-LTI-HOLD-AMT-OTH - WS-LTI-TOTAL-AMT-OTH
                         ADD WS-LTI-AMT-TO-ADD TO WS-LTI-MOVE-AMT
                      END-IF
                   END-IF
                END-IF
           END-EVALUATE.

      *****CHECK QUANTITY
           EVALUATE WS-LTI-SUB2
              WHEN 1
                IF WS-LTI-TOTAL-QTY-NR1 = WS-LTI-HOLD-QTY-NR1
                   CONTINUE
                ELSE
                   IF WS-LTI-TOTAL-QTY-NR1 > WS-LTI-HOLD-QTY-NR1
                      COMPUTE WS-LTI-QTY-TO-SUBTRACT =
                              WS-LTI-TOTAL-QTY-NR1 - WS-LTI-HOLD-QTY-NR1
                      SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                                     WS-LTI-MOVE-QTY
                   ELSE
                      IF WS-LTI-TOTAL-QTY-NR1 < WS-LTI-HOLD-QTY-NR1
                         COMPUTE WS-LTI-QTY-TO-ADD =
                             WS-LTI-HOLD-QTY-NR1 - WS-LTI-TOTAL-QTY-NR1
                         ADD WS-LTI-QTY-TO-ADD TO WS-LTI-MOVE-QTY
                      END-IF
                   END-IF
                END-IF
              WHEN 2
                IF WS-LTI-TOTAL-QTY-NR2 = WS-LTI-HOLD-QTY-NR2
                   CONTINUE
                ELSE
                   IF WS-LTI-TOTAL-QTY-NR2 > WS-LTI-HOLD-QTY-NR2
                      COMPUTE WS-LTI-QTY-TO-SUBTRACT =
                              WS-LTI-TOTAL-QTY-NR2 - WS-LTI-HOLD-QTY-NR2
                      SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                                     WS-LTI-MOVE-QTY
                   ELSE
                      IF WS-LTI-TOTAL-QTY-NR2 < WS-LTI-HOLD-QTY-NR2
                         COMPUTE WS-LTI-QTY-TO-ADD =
                             WS-LTI-HOLD-QTY-NR2 - WS-LTI-TOTAL-QTY-NR2
                         ADD WS-LTI-QTY-TO-ADD TO WS-LTI-MOVE-QTY
                      END-IF
                   END-IF
                END-IF
              WHEN 3
                IF WS-LTI-TOTAL-QTY-REF = WS-LTI-HOLD-QTY-REF
                   CONTINUE
                ELSE
                   IF WS-LTI-TOTAL-QTY-REF > WS-LTI-HOLD-QTY-REF
                      COMPUTE WS-LTI-QTY-TO-SUBTRACT =
                              WS-LTI-TOTAL-QTY-REF - WS-LTI-HOLD-QTY-REF
                      SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                                     WS-LTI-MOVE-QTY
                   ELSE
                      IF WS-LTI-TOTAL-QTY-REF < WS-LTI-HOLD-QTY-REF
                         COMPUTE WS-LTI-QTY-TO-ADD =
                             WS-LTI-HOLD-QTY-REF - WS-LTI-TOTAL-QTY-REF
                         ADD WS-LTI-QTY-TO-ADD TO WS-LTI-MOVE-QTY
                      END-IF
                   END-IF
                END-IF
              WHEN 4
                IF WS-LTI-TOTAL-QTY-OTH = WS-LTI-HOLD-QTY-OTH
                   CONTINUE
                ELSE
                   IF WS-LTI-TOTAL-QTY-OTH > WS-LTI-HOLD-QTY-OTH
                      COMPUTE WS-LTI-QTY-TO-SUBTRACT =
                              WS-LTI-TOTAL-QTY-OTH - WS-LTI-HOLD-QTY-OTH
                      SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                                     WS-LTI-MOVE-QTY
                   ELSE
                      IF WS-LTI-TOTAL-QTY-OTH < WS-LTI-HOLD-QTY-OTH
                         COMPUTE WS-LTI-QTY-TO-ADD =
                             WS-LTI-HOLD-QTY-OTH - WS-LTI-TOTAL-QTY-OTH
                         ADD WS-LTI-QTY-TO-ADD TO WS-LTI-MOVE-QTY
                      END-IF
                   END-IF
                END-IF
           END-EVALUATE.


      *---------------------------------
082008 LTI-COMPUTE-QTY.
      *---------------------------------
      ***** WILL USE THE SAME PERCENTAGE OF THE QUANTITY ON THIS TRANS
      ***** AS WAS USED FROM THE AMOUNT; PPU SHOULD BE THE SAME;
      ***** USING INTERMEDIATE CALC FIELD OF WS-LTI-PERCENT WILL GIVE
      ***** A MORE ACCURATE FINAL RESULT
           COMPUTE WS-LTI-PERCENT ROUNDED =
                   WS-LTI-MOVE-AMT / WS-LTIH-UIWA-AMT (WS-LTI-SUB2)
           END-COMPUTE
           COMPUTE WS-LTI-MOVE-QTY ROUNDED =
                   WS-LTI-PERCENT  * WS-LTIH-UIWA-QTY (WS-LTI-SUB2)
           END-COMPUTE
           COMPUTE WS-LTI-OVER-QTY =
                   WS-LTIH-UIWA-QTY (WS-LTI-SUB2)
                   - WS-LTI-MOVE-QTY
           END-COMPUTE
           CONTINUE.

      *---------------------------------
082008 LTI-MOVE-AMT-TO-UIWA.
      *---------------------------------
      ***** THE AMOUNTS THAT WILL MAKE UP THIS TRANSACTION SPLIT
           EVALUATE WS-LTI-SUB2 ALSO TRUE
              WHEN 1 ALSO WS-LTI-SC-CURRENCY
                 MOVE WS-LTI-MOVE-QTY TO WS-UIWA-NR1-QTY-SC
                 MOVE WS-LTI-MOVE-AMT TO WS-UIWA-NR1-COST-SC
              WHEN 1 ALSO ANY
                 MOVE WS-LTI-MOVE-QTY TO WS-UIWA-NR1-QTY
                 MOVE WS-LTI-MOVE-AMT TO WS-UIWA-NR1-COST
              WHEN 2 ALSO WS-LTI-SC-CURRENCY
                 MOVE WS-LTI-MOVE-QTY TO WS-UIWA-NR2-QTY-SC
                 MOVE WS-LTI-MOVE-AMT TO WS-UIWA-NR2-COST-SC
              WHEN 2 ALSO ANY
                 MOVE WS-LTI-MOVE-QTY TO WS-UIWA-NR2-QTY
                 MOVE WS-LTI-MOVE-AMT TO WS-UIWA-NR2-COST
              WHEN 3 ALSO WS-LTI-SC-CURRENCY
                 MOVE WS-LTI-MOVE-QTY TO WS-UIWA-REF-QTY-SC
                 MOVE WS-LTI-MOVE-AMT TO WS-UIWA-REF-COST-SC
              WHEN 3 ALSO ANY
                 MOVE WS-LTI-MOVE-QTY TO WS-UIWA-REF-QTY
                 MOVE WS-LTI-MOVE-AMT TO WS-UIWA-REF-COST
              WHEN 4 ALSO WS-LTI-SC-CURRENCY
                 MOVE WS-LTI-MOVE-QTY TO WS-UIWA-OTH-QTY-SC
                 MOVE WS-LTI-MOVE-AMT TO WS-UIWA-OTH-COST-SC
              WHEN 4 ALSO ANY
                 MOVE WS-LTI-MOVE-QTY TO WS-UIWA-OTH-QTY
                 MOVE WS-LTI-MOVE-AMT TO WS-UIWA-OTH-COST
           END-EVALUATE

           CONTINUE.

      *---------------------------------
082008 LTI-AMT-WENT-TO-ZERO.
      *---------------------------------
      ***** AMOUNT WAS USED UP BY PREV TRANSACTION SPLIT SO
      ***** DO SOME INITIALIZATION
           EVALUATE WS-LTI-SUB2
              WHEN 1
                 INITIALIZE WS-UIWA-NR1-PPU-US
                            WS-RETAIL-PPG-NR1
                            WS2-RETAIL-PPG-NR1
              WHEN 2
                 INITIALIZE WS-UIWA-NR2-PPU
                            WS-UIWA-NR2-PPU-SC
                            WS-UIWA-NR2-PPU-US
                            WS-RETAIL-PPG-NR2
                            WS2-RETAIL-PPG-NR2
              WHEN 3
                 INITIALIZE WS-UIWA-REF-PPU
                            WS-UIWA-REF-PPU-SC
                            WS-UIWA-REF-PPU-US
                            WS-RETAIL-PPG-TRAILER
                            WS2-RETAIL-PPG-TRAILER
                            TRAILER-PURCHASE
              WHEN 4
                 INITIALIZE WS-UIWA-OTH-PPU
                            WS-UIWA-OTH-PPU-SC
                            WS-UIWA-OTH-PPU-US
           END-EVALUATE
      ***** THE VALUE OF THE TRACTOR-PURCHASE FLAG MAY NEED TO CHANGE
           PERFORM 20390-SET-FUEL-FLAG
           CONTINUE.

      *---------------------------------
082008 LTI-SECOND-PASS-INIT.
      *---------------------------------
      ***** ALL TRANSACTION DISCOUNTS, REBATES, AND FEES ARE LOGGED
      ***** ON THE FIRST TRANSACTION OF THE SPLIT AND ARE NOT NEEDED
      ***** FOR THE REMAINDER OF THE PROCESSING
           INITIALIZE WS-DC-DISCOUNT-AMT
                      WS-DC-SC-DISCOUNT-AMT
                      WS-DC-SC-REBATE-AMT
                      WS-DC-FEE-AMT
                      WS-DC-FEE-AMT-FUEL
                      WS-DC-FEE-AMT-CUSTOM
                      WS-DC-FEE-AMT-RETAIN
                      WS-DC-FEE-AMT-MANUAL
                      WS-DC-DISCOUNT-FOCUS-SELECT
SB0516                WS-DC-DISCOUNT-SMFL
                      WS-DC-REBATE-AMT
                      WS-SC-CORP-REB-AMT
                      WS-WORK-TOTAL-AR
                      WS-COST-PLUS-CPG-FEE1
                      WS-COST-PLUS-CPG-FEE2
                      WS-FMDL-PRODUCT-FEE-INFO
                      WS-HOLD-RATE
                      WS-TOTAL-PRCNTAGE
                      WS-CDN-PRCNTAGE
                      SAVE-FMDL-SC-INVOICE-AMT
                      WS-XBORDER-ASSMT-AMT
                      INP-TOTAL-COST
                      WS-ADVANCE-RATE
                      WS-ADVANCE-RATE2
                      WS-ADVANCE-RATE3
                      WS-TOTAL-RATE
                      WS-TOTAL-RATE2
                      WS-FUEL-RATE
                      WS-FUEL-RATE2
                      WS-FUEL-RATE3
                      WS-UIWA-FLEET-AMT-ORIG
                      WS-AMOUNT-OF-DISC-CPG
                      COM-PNET-SC-FEE
                      COM-PNET-CO-FEE
                      COM-PNET-CASH-ADD-ON
                      COM-PNET-VOICE-SURCHARGE
                      COM-DISCOUNT-METHOD
                      WS-DISCOUNT-TYPE-FLAG
                      WS-UIWA-NATS-FEE
                      WS-PPRIDE-MARKUP-SC
                      WS-UIWA-BASE-PPG
                      WS-UIWA-DELIVERY-FEE-PPG
                      WS-CDN-GUAR-YN
                      WS-CDN-ALL-HANDLING-ADD-ON
                      WS-CDN-ALL-HANDLING-ADD-ON-AC
                      WS-CDN-MANUAL-ADD-ON
                      WS-CDN-COST-PLUS-ADD-ON
                      WS-CDN-COST-PLUS-ADD-ON-AC
                      WS-SCM-CORP-REBATE-LOCATION
                      WS-SCM-CORP-REBATE-FLAG
                      WS-SCPM-PP-PAC-MARKUP
      **************** ALSO, ALL CASH, TAX, OIL, AND PRODUCT AMOUNTS
      **************** WILL BE USED ON FIRST TRANSACTION OF SPLIT ONLY
                      WS-UIWA-CASH-AMT
                      WS-UIWA-CASH-AMT-SC
                      WS-UIWA-OIL-QTY
                      WS-UIWA-OIL-QTY-SC
                      WS-UIWA-OIL-COST
                      WS-UIWA-OIL-COST-SC
                      OIL-PURCHASE
                      PRODUCT-PURCHASE
                      WS-UIWA-PR1-COST
                      WS-UIWA-PR1-COST-SC
                      WS-UIWA-PR1-COST-US
                      WS-UIWA-PR2-COST
                      WS-UIWA-PR2-COST-SC
                      WS-UIWA-PR2-COST-US
                      WS-UIWA-PR3-COST
                      WS-UIWA-PR3-COST-SC
                      WS-UIWA-PR3-COST-US
                      WS-UIWA-PR-CODE (1)
                      WS-UIWA-PR-CODE (2)
                      WS-UIWA-PR-CODE (3)
                      WS-UIWA-TOTAL-TAX-PPG
                      WS-FMDL-PRODUCT-FEE-INFO
022012                COM-NET-PRICING-FLAG
           CONTINUE.

      *---------------------------------
082008 LTI-CURRENCY-CONVERSIONS.
      *---------------------------------
      ******SOME OF THIS CODE COPIED FROM 20330-ADJUST-AMTS-REBLD-SCN
      **** (ADJUST THE INPUT FIELDS DEPENDING ON THE COUNTRY) ****
           IF COM-US-COMP-US-SC OR COM-CN-COMP-CN-SC
      ******** THIS SHOULD NEVER HAPPEN BUT PROBABLY WILL
              IF WS-LTI-SC-CURRENCY
                 PERFORM LTI-CONVERT-FOR-SAME-CURR
              ELSE
                 PERFORM CONVERT-FOR-NO-ACCOUNT
              END-IF
           END-IF
           IF COM-US-COMP-CN-SC
              IF WS-LTI-SC-CURRENCY
                 PERFORM LTI-CONVERT-FOR-US-ACC
              ELSE
                 PERFORM LTI-CONVERT-FOR-CN-SC
              END-IF
           END-IF
           IF COM-CN-COMP-US-SC
              IF WS-LTI-SC-CURRENCY
                 PERFORM LTI-CONVERT-FOR-CN-ACC
              ELSE
                 PERFORM LTI-CONVERT-FOR-US-SC
              END-IF
           END-IF
      **** (BUILD THE INP3 FIELDS) ****
           PERFORM CONVERT-FOR-US-AMOUNTS
           CONTINUE.

      *==============================
082008 LTI-CONVERT-FOR-SAME-CURR.
      *==============================
           MOVE WS-UIWA-NR2-QTY-SC    TO WS-UIWA-NR2-QTY
           MOVE WS-UIWA-OTH-QTY-SC    TO WS-UIWA-OTH-QTY
           MOVE WS-UIWA-REF-QTY-SC    TO WS-UIWA-REF-QTY
           MOVE WS-UIWA-NR1-QTY-SC    TO WS-UIWA-NR1-QTY
           MOVE WS-UIWA-NR2-COST-SC   TO WS-UIWA-NR2-COST
           MOVE WS-UIWA-OTH-COST-SC   TO WS-UIWA-OTH-COST
           MOVE WS-UIWA-REF-COST-SC   TO WS-UIWA-REF-COST
           MOVE WS-UIWA-NR1-COST-SC   TO WS-UIWA-NR1-COST
052311     MOVE WS-UIWA-TAX-AMT-SC    TO WS-UIWA-TAX-AMT
           CONTINUE.

      *==============================
082008 LTI-CONVERT-FOR-CN-SC.
      *==============================
      **** (CONVERT TRACTOR FUEL) ****
           MOVE WS-UIWA-NR2-QTY     TO WS-GALLONS
           PERFORM GALLONS-TO-LITERS
           MOVE WS-LITERS           TO WS-UIWA-NR2-QTY-SC
052711     ADD WS-UIWA-NR2-QTY-SC   TO WS-LTI-TOTAL-QTY-NR2-OTH

           MOVE WS-UIWA-NR2-COST    TO WS-US-DOLLARS
052611     PERFORM LTI-RETURN-TO-CAN
           MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR2-COST-SC
052711     ADD WS-UIWA-NR2-COST-SC  TO WS-LTI-TOTAL-AMT-NR2-OTH

      **** (CONVERT OTHER FUEL  ) ****
           MOVE WS-UIWA-OTH-QTY     TO WS-GALLONS
           PERFORM GALLONS-TO-LITERS
           MOVE WS-LITERS           TO WS-UIWA-OTH-QTY-SC
052711     ADD WS-UIWA-OTH-QTY-SC   TO WS-LTI-TOTAL-QTY-OTH-OTH

           MOVE WS-UIWA-OTH-COST    TO WS-US-DOLLARS
052611     PERFORM LTI-RETURN-TO-CAN
           MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-OTH-COST-SC
052711     ADD WS-UIWA-OTH-COST-SC  TO WS-LTI-TOTAL-AMT-OTH-OTH

      **** (CONVERT TRAILER FUEL) ****
           MOVE WS-UIWA-REF-QTY     TO WS-GALLONS
           PERFORM GALLONS-TO-LITERS
           MOVE WS-LITERS           TO WS-UIWA-REF-QTY-SC
052711     ADD WS-UIWA-REF-QTY-SC   TO WS-LTI-TOTAL-QTY-REF-OTH

           MOVE WS-UIWA-REF-COST    TO WS-US-DOLLARS
052611     PERFORM LTI-RETURN-TO-CAN
           MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-REF-COST-SC
052711     ADD WS-UIWA-REF-COST-SC  TO WS-LTI-TOTAL-AMT-REF-OTH

      **** (CONVERT NR1 FUEL    ) ****
           MOVE WS-UIWA-NR1-QTY     TO WS-GALLONS
           PERFORM GALLONS-TO-LITERS
           MOVE WS-LITERS           TO WS-UIWA-NR1-QTY-SC
052711     ADD WS-UIWA-NR1-QTY-SC   TO WS-LTI-TOTAL-QTY-NR1-OTH

           MOVE WS-UIWA-NR1-COST    TO WS-US-DOLLARS
052611     PERFORM LTI-RETURN-TO-CAN
           MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR1-COST-SC
052711     ADD WS-UIWA-NR1-COST-SC  TO WS-LTI-TOTAL-AMT-NR1-OTH

052311     MOVE WS-UIWA-TAX-AMT     TO WS-US-DOLLARS
052311     PERFORM LTI-RETURN-TO-CAN
052311     MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-TAX-AMT-SC
052711     ADD WS-UIWA-TAX-AMT-SC   TO WS-LTI-TOTAL-AMT-TAX-OTH

052711     IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
052711        PERFORM LTI-CHECK-TOTALS-OTH
052711     END-IF.

           CONTINUE.

      *==============================
082008 LTI-CONVERT-FOR-CN-ACC.
      *==============================
      **** (CONVERT TRACTOR FUEL) ****
           MOVE WS-UIWA-NR2-QTY-SC  TO WS-GALLONS
           PERFORM GALLONS-TO-LITERS
           MOVE WS-LITERS           TO WS-UIWA-NR2-QTY
052711     ADD WS-UIWA-NR2-QTY      TO WS-LTI-TOTAL-QTY-NR2-OTH

           MOVE WS-UIWA-NR2-COST-SC TO WS-US-DOLLARS
           PERFORM US-DOLLARS-TO-CAN
           MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR2-COST
052711     ADD WS-UIWA-NR2-COST     TO WS-LTI-TOTAL-AMT-NR2-OTH

      **** (CONVERT OTHER FUEL  ) ****
           MOVE WS-UIWA-OTH-QTY-SC  TO WS-GALLONS
           PERFORM GALLONS-TO-LITERS
           MOVE WS-LITERS           TO WS-UIWA-OTH-QTY
052711     ADD WS-UIWA-OTH-QTY      TO WS-LTI-TOTAL-QTY-OTH-OTH

           MOVE WS-UIWA-OTH-COST-SC TO WS-US-DOLLARS
           PERFORM US-DOLLARS-TO-CAN
           MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-OTH-COST
052711     ADD WS-UIWA-OTH-COST     TO WS-LTI-TOTAL-AMT-OTH-OTH

      **** (CONVERT TRAILER FUEL) ****
           MOVE WS-UIWA-REF-QTY-SC  TO WS-GALLONS
           PERFORM GALLONS-TO-LITERS
           MOVE WS-LITERS           TO WS-UIWA-REF-QTY
052711     ADD WS-UIWA-REF-QTY      TO WS-LTI-TOTAL-QTY-REF-OTH

           MOVE WS-UIWA-REF-COST-SC TO WS-US-DOLLARS
           PERFORM US-DOLLARS-TO-CAN
           MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-REF-COST
052711     ADD WS-UIWA-REF-COST     TO WS-LTI-TOTAL-AMT-REF-OTH

      **** (CONVERT NR1 FUEL    ) ****
           MOVE WS-UIWA-NR1-QTY-SC  TO WS-GALLONS
           PERFORM GALLONS-TO-LITERS
           MOVE WS-LITERS           TO WS-UIWA-NR1-QTY
052711     ADD WS-UIWA-NR1-QTY      TO WS-LTI-TOTAL-QTY-NR1-OTH

           MOVE WS-UIWA-NR1-COST-SC TO WS-US-DOLLARS
           PERFORM US-DOLLARS-TO-CAN
           MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-NR1-COST
052711     ADD WS-UIWA-NR1-COST     TO WS-LTI-TOTAL-AMT-NR1-OTH

052311     MOVE WS-UIWA-TAX-AMT-SC  TO WS-US-DOLLARS
052311     PERFORM US-DOLLARS-TO-CAN
052311     MOVE WS-CANADIAN-DOLLARS TO WS-UIWA-TAX-AMT
052711     ADD WS-UIWA-TAX-AMT      TO WS-LTI-TOTAL-AMT-TAX-OTH

052711     IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
052711        PERFORM LTI-CHECK-TOTALS-OTH
052711     END-IF.

           CONTINUE.

      *==============================
082008 LTI-CONVERT-FOR-US-SC.
      *==============================
      **** (CONVERT TRACTOR FUEL) ****
           MOVE WS-UIWA-NR2-QTY     TO WS-LITERS
           PERFORM LITERS-TO-GALLONS
           MOVE WS-GALLONS          TO WS-UIWA-NR2-QTY-SC
052711     ADD WS-UIWA-NR2-QTY-SC   TO WS-LTI-TOTAL-QTY-NR2-OTH

           MOVE WS-UIWA-NR2-COST    TO WS-CANADIAN-DOLLARS
052611     PERFORM LTI-RETURN-TO-US
           MOVE WS-US-DOLLARS       TO WS-UIWA-NR2-COST-SC
052711     ADD WS-UIWA-NR2-COST-SC  TO WS-LTI-TOTAL-AMT-NR2-OTH

      **** (CONVERT OTHER FUEL  ) ****
           MOVE WS-UIWA-OTH-QTY     TO WS-LITERS
           PERFORM LITERS-TO-GALLONS
           MOVE WS-GALLONS          TO WS-UIWA-OTH-QTY-SC
052711     ADD WS-UIWA-OTH-QTY-SC   TO WS-LTI-TOTAL-QTY-OTH-OTH

           MOVE WS-UIWA-OTH-COST    TO WS-CANADIAN-DOLLARS
052611     PERFORM LTI-RETURN-TO-US
           MOVE WS-US-DOLLARS       TO WS-UIWA-OTH-COST-SC
052711     ADD WS-UIWA-OTH-COST-SC  TO WS-LTI-TOTAL-AMT-OTH-OTH

      **** (CONVERT TRAILER FUEL) ****
           MOVE WS-UIWA-REF-QTY     TO WS-LITERS
           PERFORM LITERS-TO-GALLONS
           MOVE WS-GALLONS          TO WS-UIWA-REF-QTY-SC
052711     ADD WS-UIWA-REF-QTY-SC   TO WS-LTI-TOTAL-QTY-REF-OTH

           MOVE WS-UIWA-REF-COST    TO WS-CANADIAN-DOLLARS
052611     PERFORM LTI-RETURN-TO-US
           MOVE WS-US-DOLLARS       TO WS-UIWA-REF-COST-SC
052711     ADD WS-UIWA-REF-COST-SC  TO WS-LTI-TOTAL-AMT-REF-OTH

      **** (CONVERT NR1 FUEL    ) ****
           MOVE WS-UIWA-NR1-QTY     TO WS-LITERS
           PERFORM LITERS-TO-GALLONS
           MOVE WS-GALLONS          TO WS-UIWA-NR1-QTY-SC
052711     ADD WS-UIWA-NR1-QTY-SC   TO WS-LTI-TOTAL-QTY-NR1-OTH

           MOVE WS-UIWA-NR1-COST    TO WS-CANADIAN-DOLLARS
052611***  PERFORM CAN-DOLLARS-TO-US
052611     PERFORM LTI-RETURN-TO-US
           MOVE WS-US-DOLLARS       TO WS-UIWA-NR1-COST-SC
052711     ADD WS-UIWA-NR1-COST-SC  TO WS-LTI-TOTAL-AMT-NR1-OTH

052311     MOVE WS-UIWA-TAX-AMT     TO WS-CANADIAN-DOLLARS
052311     PERFORM LTI-RETURN-TO-US
052311     MOVE WS-US-DOLLARS       TO WS-UIWA-TAX-AMT-SC
052711     ADD WS-UIWA-TAX-AMT-SC   TO WS-LTI-TOTAL-AMT-TAX-OTH

052711     IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
052711        PERFORM LTI-CHECK-TOTALS-OTH
052711     END-IF.

           CONTINUE.

      *==============================
082008 LTI-CONVERT-FOR-US-ACC.
      *==============================
      **** (CONVERT TRACTOR FUEL) ****
           MOVE WS-UIWA-NR2-QTY-SC  TO WS-LITERS
           PERFORM LITERS-TO-GALLONS
           MOVE WS-GALLONS          TO WS-UIWA-NR2-QTY
052711     ADD WS-UIWA-NR2-QTY      TO WS-LTI-TOTAL-QTY-NR2-OTH

           MOVE WS-UIWA-NR2-COST-SC TO WS-CANADIAN-DOLLARS
           PERFORM CAN-DOLLARS-TO-US
           MOVE WS-US-DOLLARS       TO WS-UIWA-NR2-COST
052711     ADD WS-UIWA-NR2-COST     TO WS-LTI-TOTAL-AMT-NR2-OTH

      **** (CONVERT OTHER FUEL  ) ****
           MOVE WS-UIWA-OTH-QTY-SC  TO WS-LITERS
           PERFORM LITERS-TO-GALLONS
           MOVE WS-GALLONS          TO WS-UIWA-OTH-QTY
052711     ADD WS-UIWA-OTH-QTY      TO WS-LTI-TOTAL-QTY-OTH-OTH

           MOVE WS-UIWA-OTH-COST-SC TO WS-CANADIAN-DOLLARS
           PERFORM CAN-DOLLARS-TO-US
           MOVE WS-US-DOLLARS       TO WS-UIWA-OTH-COST
052711     ADD WS-UIWA-OTH-COST     TO WS-LTI-TOTAL-AMT-OTH-OTH

      **** (CONVERT TRAILER FUEL) ****
           MOVE WS-UIWA-REF-QTY-SC  TO WS-LITERS
           PERFORM LITERS-TO-GALLONS
           MOVE WS-GALLONS          TO WS-UIWA-REF-QTY
052711     ADD WS-UIWA-REF-QTY      TO WS-LTI-TOTAL-QTY-REF-OTH

           MOVE WS-UIWA-REF-COST-SC TO WS-CANADIAN-DOLLARS
           PERFORM CAN-DOLLARS-TO-US
           MOVE WS-US-DOLLARS       TO WS-UIWA-REF-COST
052711     ADD WS-UIWA-REF-COST     TO WS-LTI-TOTAL-AMT-REF-OTH

      **** (CONVERT NR1 FUEL    ) ****
           MOVE WS-UIWA-NR1-QTY-SC  TO WS-LITERS
           PERFORM LITERS-TO-GALLONS
           MOVE WS-GALLONS          TO WS-UIWA-NR1-QTY
052711     ADD WS-UIWA-NR1-QTY      TO WS-LTI-TOTAL-QTY-NR1-OTH

           MOVE WS-UIWA-NR1-COST-SC TO WS-CANADIAN-DOLLARS
           PERFORM CAN-DOLLARS-TO-US
           MOVE WS-US-DOLLARS       TO WS-UIWA-NR1-COST
052711     ADD WS-UIWA-NR1-COST     TO WS-LTI-TOTAL-AMT-NR1-OTH

052311     MOVE WS-UIWA-TAX-AMT-SC  TO WS-CANADIAN-DOLLARS
052311     PERFORM CAN-DOLLARS-TO-US
052311     MOVE WS-US-DOLLARS       TO WS-UIWA-TAX-AMT
052711     ADD WS-UIWA-TAX-AMT      TO WS-LTI-TOTAL-AMT-TAX-OTH

052711     IF WS-LTI-SUB1 = WS-LTI-SPLIT-COUNT
052711        PERFORM LTI-CHECK-TOTALS-OTH
052711     END-IF.

           CONTINUE.

      *------------------------------
052611 LTI-RETURN-TO-US.
      *------------------------------
MB0911     IF US-TO-CAN-RATE = ZERO
MB0911        MOVE 1 TO US-TO-CAN-RATE
MB0911     END-IF.
           DIVIDE WS-CANADIAN-DOLLARS BY US-TO-CAN-RATE
               GIVING WS-US-DOLLARS ROUNDED.

      *------------------------------
052611 LTI-RETURN-TO-CAN.
      *------------------------------
MB0911     IF CAN-TO-US-RATE = ZERO
MB0911        MOVE 1 TO CAN-TO-US-RATE
MB0911     END-IF.
           DIVIDE WS-US-DOLLARS BY CAN-TO-US-RATE
               GIVING WS-CANADIAN-DOLLARS ROUNDED.

      *---------------------------------
052711 LTI-CHECK-TOTALS-OTH.
      *---------------------------------
      ***** THIS IS THE LAST SPLIT, THEREFORE, WE NEED TO MAKE SURE THAT
      ***** WE AREN'T OFF ON OUR TOTALS BECAUSE OF ROUNDING; IF SO
      ***** WE NEED TO ADJUST THE LAST SPLIT TRANSACTION AMOUNT
      ***** (WE HAVE ALREADY DID THIS FOR THE AMOUNTS THAT WE SPLIT ON;
      *****  WHETHER THAT BE SC OR ACCT.  NOW WE NEED TO DO THE SAME FOR
      *****  FOR THE AMOUNTS THAT WE ARE CONVERTING , TO ENSURE BOTH
      ****   SC AND ACCT TOTALS ARE NOT OFF DUE TO ROUNDING)

      *****CHECK AMOUNTS
           IF WS-LTI-TOTAL-AMT-NR1-OTH = WS-LTI-HOLD-AMT-NR1-OTH
              CONTINUE
           ELSE
              IF WS-LTI-TOTAL-AMT-NR1-OTH > WS-LTI-HOLD-AMT-NR1-OTH
                 COMPUTE WS-LTI-AMT-TO-SUBTRACT =
                     WS-LTI-TOTAL-AMT-NR1-OTH - WS-LTI-HOLD-AMT-NR1-OTH
                 IF WS-LTI-SC-CURRENCY
                    SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                               WS-UIWA-NR1-COST
                 ELSE
                    SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                               WS-UIWA-NR1-COST-SC
                 END-IF
              ELSE
                 IF WS-LTI-TOTAL-AMT-NR1-OTH < WS-LTI-HOLD-AMT-NR1-OTH
                    COMPUTE WS-LTI-AMT-TO-ADD =
                      WS-LTI-HOLD-AMT-NR1-OTH - WS-LTI-TOTAL-AMT-NR1-OTH
                    IF WS-LTI-SC-CURRENCY
                       ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-NR1-COST
                    ELSE
                       ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-NR1-COST-SC
                    END-IF
                 END-IF
              END-IF
           END-IF.

           IF WS-LTI-TOTAL-AMT-NR2-OTH = WS-LTI-HOLD-AMT-NR2-OTH
              CONTINUE
           ELSE
              IF WS-LTI-TOTAL-AMT-NR2-OTH > WS-LTI-HOLD-AMT-NR2-OTH
                 COMPUTE WS-LTI-AMT-TO-SUBTRACT =
                     WS-LTI-TOTAL-AMT-NR2-OTH - WS-LTI-HOLD-AMT-NR2-OTH
                 IF WS-LTI-SC-CURRENCY
                    SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                               WS-UIWA-NR2-COST
                 ELSE
                    SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                               WS-UIWA-NR2-COST-SC
                 END-IF
              ELSE
                 IF WS-LTI-TOTAL-AMT-NR2-OTH < WS-LTI-HOLD-AMT-NR2-OTH
                    COMPUTE WS-LTI-AMT-TO-ADD =
                      WS-LTI-HOLD-AMT-NR2-OTH - WS-LTI-TOTAL-AMT-NR2-OTH
                    IF WS-LTI-SC-CURRENCY
                       ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-NR2-COST
                    ELSE
                       ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-NR2-COST-SC
                    END-IF
                 END-IF
              END-IF
           END-IF.

           IF WS-LTI-TOTAL-AMT-REF-OTH = WS-LTI-HOLD-AMT-REF-OTH
              CONTINUE
           ELSE
              IF WS-LTI-TOTAL-AMT-REF-OTH > WS-LTI-HOLD-AMT-REF-OTH
                 COMPUTE WS-LTI-AMT-TO-SUBTRACT =
                     WS-LTI-TOTAL-AMT-REF-OTH - WS-LTI-HOLD-AMT-REF-OTH
                 IF WS-LTI-SC-CURRENCY
                    SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                               WS-UIWA-REF-COST
                 ELSE
                    SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                               WS-UIWA-REF-COST-SC
                 END-IF
              ELSE
                 IF WS-LTI-TOTAL-AMT-REF-OTH < WS-LTI-HOLD-AMT-REF-OTH
                    COMPUTE WS-LTI-AMT-TO-ADD =
                      WS-LTI-HOLD-AMT-REF-OTH - WS-LTI-TOTAL-AMT-REF-OTH
                    IF WS-LTI-SC-CURRENCY
                       ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-REF-COST
                    ELSE
                       ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-REF-COST-SC
                    END-IF
                 END-IF
              END-IF
           END-IF.

           IF WS-LTI-TOTAL-AMT-OTH-OTH = WS-LTI-HOLD-AMT-OTH-OTH
              CONTINUE
           ELSE
              IF WS-LTI-TOTAL-AMT-OTH-OTH > WS-LTI-HOLD-AMT-OTH-OTH
                 COMPUTE WS-LTI-AMT-TO-SUBTRACT =
                     WS-LTI-TOTAL-AMT-OTH-OTH - WS-LTI-HOLD-AMT-OTH-OTH
                 IF WS-LTI-SC-CURRENCY
                    SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                               WS-UIWA-OTH-COST
                 ELSE
                    SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                               WS-UIWA-OTH-COST-SC
                 END-IF
              ELSE
                 IF WS-LTI-TOTAL-AMT-OTH-OTH < WS-LTI-HOLD-AMT-OTH-OTH
                    COMPUTE WS-LTI-AMT-TO-ADD =
                      WS-LTI-HOLD-AMT-OTH-OTH - WS-LTI-TOTAL-AMT-OTH-OTH
                    IF WS-LTI-SC-CURRENCY
                       ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-OTH-COST
                    ELSE
                       ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-OTH-COST-SC
                    END-IF
                 END-IF
              END-IF
           END-IF.

           IF WS-LTI-TOTAL-AMT-TAX-OTH = WS-LTI-HOLD-AMT-TAX-OTH
              CONTINUE
           ELSE
              IF WS-LTI-TOTAL-AMT-TAX-OTH > WS-LTI-HOLD-AMT-TAX-OTH
                 COMPUTE WS-LTI-AMT-TO-SUBTRACT =
                     WS-LTI-TOTAL-AMT-TAX-OTH - WS-LTI-HOLD-AMT-TAX-OTH
                 IF WS-LTI-SC-CURRENCY
                    SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                               WS-UIWA-TAX-AMT
                 ELSE
                    SUBTRACT WS-LTI-AMT-TO-SUBTRACT FROM
                                               WS-UIWA-TAX-AMT-SC
                 END-IF
              ELSE
                 IF WS-LTI-TOTAL-AMT-TAX-OTH < WS-LTI-HOLD-AMT-TAX-OTH
                    COMPUTE WS-LTI-AMT-TO-ADD =
                      WS-LTI-HOLD-AMT-TAX-OTH - WS-LTI-TOTAL-AMT-TAX-OTH
                    IF WS-LTI-SC-CURRENCY
                       ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-TAX-AMT
                    ELSE
                       ADD WS-LTI-AMT-TO-ADD TO WS-UIWA-TAX-AMT-SC
                    END-IF
                 END-IF
              END-IF
           END-IF.

      *****CHECK QUANTITY
           IF WS-LTI-TOTAL-QTY-NR1-OTH = WS-LTI-HOLD-QTY-NR1-OTH
              CONTINUE
           ELSE
              IF WS-LTI-TOTAL-QTY-NR1-OTH > WS-LTI-HOLD-QTY-NR1-OTH
                 COMPUTE WS-LTI-QTY-TO-SUBTRACT =
                     WS-LTI-TOTAL-QTY-NR1-OTH - WS-LTI-HOLD-QTY-NR1-OTH
                 IF WS-LTI-SC-CURRENCY
                    SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                               WS-UIWA-NR1-QTY
                 ELSE
                    SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                               WS-UIWA-NR1-QTY-SC
                 END-IF
              ELSE
                 IF WS-LTI-TOTAL-QTY-NR1-OTH < WS-LTI-HOLD-QTY-NR1-OTH
                    COMPUTE WS-LTI-QTY-TO-ADD =
                      WS-LTI-HOLD-QTY-NR1-OTH - WS-LTI-TOTAL-QTY-NR1-OTH
                    IF WS-LTI-SC-CURRENCY
                       ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-NR1-QTY
                    ELSE
                       ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-NR1-QTY-SC
                    END-IF
                 END-IF
              END-IF
           END-IF.

           IF WS-LTI-TOTAL-QTY-NR2-OTH = WS-LTI-HOLD-QTY-NR2-OTH
              CONTINUE
           ELSE
              IF WS-LTI-TOTAL-QTY-NR2-OTH > WS-LTI-HOLD-QTY-NR2-OTH
                 COMPUTE WS-LTI-QTY-TO-SUBTRACT =
                     WS-LTI-TOTAL-QTY-NR2-OTH - WS-LTI-HOLD-QTY-NR2-OTH
                 IF WS-LTI-SC-CURRENCY
                    SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                               WS-UIWA-NR2-QTY
                 ELSE
                    SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                               WS-UIWA-NR2-QTY-SC
                 END-IF
              ELSE
                 IF WS-LTI-TOTAL-QTY-NR2-OTH < WS-LTI-HOLD-QTY-NR2-OTH
                    COMPUTE WS-LTI-QTY-TO-ADD =
                      WS-LTI-HOLD-QTY-NR2-OTH - WS-LTI-TOTAL-QTY-NR2-OTH
                    IF WS-LTI-SC-CURRENCY
                       ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-NR2-QTY
                    ELSE
                       ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-NR2-QTY-SC
                    END-IF
                 END-IF
              END-IF
           END-IF.

           IF WS-LTI-TOTAL-QTY-REF-OTH = WS-LTI-HOLD-QTY-REF-OTH
              CONTINUE
           ELSE
              IF WS-LTI-TOTAL-QTY-REF-OTH > WS-LTI-HOLD-QTY-REF-OTH
                 COMPUTE WS-LTI-QTY-TO-SUBTRACT =
                     WS-LTI-TOTAL-QTY-REF-OTH - WS-LTI-HOLD-QTY-REF-OTH
                 IF WS-LTI-SC-CURRENCY
                    SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                               WS-UIWA-REF-QTY
                 ELSE
                    SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                               WS-UIWA-REF-QTY-SC
                 END-IF
              ELSE
                 IF WS-LTI-TOTAL-QTY-REF-OTH < WS-LTI-HOLD-QTY-REF-OTH
                    COMPUTE WS-LTI-QTY-TO-ADD =
                      WS-LTI-HOLD-QTY-REF-OTH - WS-LTI-TOTAL-QTY-REF-OTH
                    IF WS-LTI-SC-CURRENCY
                       ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-REF-QTY
                    ELSE
                       ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-REF-QTY-SC
                    END-IF
                 END-IF
              END-IF
           END-IF.

           IF WS-LTI-TOTAL-QTY-OTH-OTH = WS-LTI-HOLD-QTY-OTH-OTH
              CONTINUE
           ELSE
              IF WS-LTI-TOTAL-QTY-OTH-OTH > WS-LTI-HOLD-QTY-OTH-OTH
                 COMPUTE WS-LTI-QTY-TO-SUBTRACT =
                     WS-LTI-TOTAL-QTY-OTH-OTH - WS-LTI-HOLD-QTY-OTH-OTH
                 IF WS-LTI-SC-CURRENCY
                    SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                               WS-UIWA-OTH-QTY
                 ELSE
                    SUBTRACT WS-LTI-QTY-TO-SUBTRACT FROM
                                               WS-UIWA-OTH-QTY-SC
                 END-IF
              ELSE
                 IF WS-LTI-TOTAL-QTY-OTH-OTH < WS-LTI-HOLD-QTY-OTH-OTH
                    COMPUTE WS-LTI-QTY-TO-ADD =
                      WS-LTI-HOLD-QTY-OTH-OTH - WS-LTI-TOTAL-QTY-OTH-OTH
                    IF WS-LTI-SC-CURRENCY
                       ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-OTH-QTY
                    ELSE
                       ADD WS-LTI-QTY-TO-ADD TO WS-UIWA-OTH-QTY-SC
                    END-IF
                 END-IF
              END-IF
           END-IF.

      *---------------------------------
082008 LTI-RESTORE-LARGE-TRANS-HOLD.
      *---------------------------------
      ***** RESTORING WORK AREAS WITH DATA FOR THE ENTIRE TRANSACTION
      ***** THAT WERE SAVED OFF BEFORE TRANS WAS SPLIT UP
           MOVE WS-LTIH-FMLOG        TO FUEL-MANAGEMENT-DAILY-LOG-RECD
           MOVE WS-LTIH-CASH-AMT     TO WS-UIWA-CASH-AMT
           MOVE WS-LTIH-TAX-AMT-SC   TO WS-UIWA-TAX-AMT-SC
JS0618     IF WS-LTIH-TOTAL-TAX-SC > ZERO
JS0618        MOVE WS-LTIH-TOTAL-TAX-SC TO WS-UIWA-TAX-AMT-SC
JS0618        MOVE WS-UIWA-TAX-AMT-SC   TO WS-CANADIAN-DOLLARS
JS0618        PERFORM CAN-DOLLARS-TO-US
JS0618        MULTIPLY WS-US-DOLLARS BY +1
JS0618           GIVING WS-UIWA-TAX-AMT-US ROUNDED
JS0618     END-IF
           MOVE WS-LTIH-BILLABLE     TO WS-BILLABLE
           MOVE WS-LTIH-NON-BILLABLE TO WS-NON-BILLABLE
           MOVE WS-LTIH-CURXMN2      TO WS2-CURXMN
           MOVE WS-LTIH-CURXMN       TO WS-CURXMN
           MOVE WS-LTIH-CONTROL-NR   TO WS-CONTROL-NR
           MOVE WS-LTIH-DRAFT-AMT    TO ODR-DRAFT-AMT
                                     IN ORDRFIL-DETAIL-RECD
           MOVE WS-LTIH-FP-TRANS-AMT TO COM-FP-TRANS-AMT
           CONTINUE.

      *--------------------------------
       20010-CHECK-FOR-EXIT.
      *--------------------------------
           IF (EIBAID = DFHCLEAR) OR
              (EIBAID = DFHPA1  ) OR
              (EIBAID = DFHPA2  ) OR
              (EIBAID = DFHPA3  )
              IF CHECK-ENTRY-IN-PROGRESS
                 MOVE CHECK-NR-BIGGER TO OUT-COMENT
                 MOVE CHECK-NR-BIGGER-N TO POS-ERROR-NUMBER
                 MOVE -1 TO FPCHKL
ED0810           MOVE 'N'               TO WS-NOTIFY-IRIS-FL
                 PERFORM SETUP-SEND-MAIN-ENTRY-SCREEN
                 PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
              END-IF
              PERFORM CLEAR-AND-EXIT-TO-CICS
           END-IF.

      *--------------------------------
       20020-RECEIVE-MAP.
      *--------------------------------
           EXEC CICS RECEIVE
                MAP    ('FPMAPB')
                MAPSET ('USISET')
                FROM   (UNFORMATTED-AREA)
                LENGTH (UNFORMATTED-LENG)
                RESP   (EIBRESP)
           END-EXEC
           PERFORM CHECK-FOR-NORMAL-EIBRESP.
           MOVE SPACES TO UNFORMATTED-AREA.

      *--------------------------------
       20030-CHECK-FOR-DRAFT-ENTRY.
      *--------------------------------
           IF CHECK-ENTRY-IN-PROGRESS
              IF FPESCI IS EQUAL TO '.NOI.'
                 MOVE COM-OPERATOR-INFO TO SAVE-OPERATOR-INFO
                 MOVE 'Y'    TO WS-EXIT-PROGRAM-FLAG
                 MOVE SAVE-OPERATOR-INFO TO COM-OPERATOR-INFO
                 MOVE -1 TO FPCMT1L
                 MOVE YOU-ARE-RELEASED TO OUT-COMENT
                 MOVE YOU-ARE-RELEASED-N TO POS-ERROR-NUMBER
ED0810           MOVE 'N'               TO WS-NOTIFY-IRIS-FL
                 PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
              ELSE
                 MOVE COM-FP-I-DATA TO CHECK-ENTRY-DATA
                 PERFORM FP-1100.

      *--------------------------------
       20040-GET-CONVERSION-RATES.
      *--------------------------------
JS1111     MOVE '20040-GET-CONVERSION-RATES' TO CXUTS0ML-PARAGRAPH.

MB0911**** (GET CONVERSION RATES BY LINKING TO CXXCO0CL

MB0911     INITIALIZE CXXCO0CL-COMMAREA.
MB0911     MOVE 'USD'         TO CA-CXXCO0CL-BASE-CUR-CD.
MB0911     MOVE 'CAD'         TO CA-CXXCO0CL-CNV-TO-CUR-CD.
MB0911     PERFORM 20042-LINK-CXXCO0CL.
MB0911     IF EIBRESP = DFHRESP(NORMAL)
MB0911         MOVE CA-XCCL-CURR-CNV-RT TO US-TO-CAN-RATE
MB0911         INITIALIZE CXXCO0CL-COMMAREA
MB0911         MOVE 'CAD'     TO CA-CXXCO0CL-BASE-CUR-CD
MB0911         MOVE 'USD'     TO CA-CXXCO0CL-CNV-TO-CUR-CD
MB0911         PERFORM 20042-LINK-CXXCO0CL
MB0911         MOVE CA-XCCL-CURR-CNV-RT TO CAN-TO-US-RATE
MB0911     END-IF.

MB0911*------------------------------
MB0911 20042-LINK-CXXCO0CL.
MB0911*------------------------------
DR0422     MOVE '20042-LINK-CXXCO0CL'       TO CXUTS0ML-PARAGRAPH.
MB0911     MOVE SPACES        TO CA-CXXCO0CL-CUR-RT-EFF-DT.
MB0911     EXEC CICS LINK
MB0911          PROGRAM  ('CXXCO0CL')
MB0911          COMMAREA (CXXCO0CL-COMMAREA)
MB0911          LENGTH   (LENGTH OF CXXCO0CL-COMMAREA)
MB0911          RESP     (EIBRESP)
MB0911     END-EXEC.
MB0911     PERFORM CHECK-FOR-NORMAL-EIBRESP.
MB0911     IF CA-CXXCO0CL-RTN-CD = '9'
MB0911         PERFORM 9900-HANDLE-ABNORMAL-RESP
MB0911     END-IF.
MB0911     IF CA-XCCL-CURR-CNV-RT NOT NUMERIC
MB0911         MOVE 1            TO CA-XCCL-CURR-CNV-RT
MB0911     END-IF.

      *--------------------------------
       20050-GET-SC-INFO.
      *--------------------------------
DR0422     MOVE '20050-GET-SC-INFO'         TO CXUTS0ML-PARAGRAPH.

           MOVE COM-FP-SC-CODE TO  WS-UIWA-SC-CODE.
           MOVE WS-UIWA-SC-CODE TO SCMSTR-KEY.
           MOVE SPACES         TO  SERVICE-CENTER-MASTER-RECORD.
           EXEC CICS READ
                DATASET ('SCMSTR')
                INTO    (SERVICE-CENTER-MASTER-RECORD)
                RIDFLD  (SCMSTR-KEY)
                RESP    (EIBRESP)
           END-EXEC
DR0422     MOVE SCMSTR-KEY        TO CXUTS0ML-COMMAND
           PERFORM CHECK-FOR-NORMAL-EIBRESP
           MOVE SCMSTR-KEY TO WS-LAST-SCMM-READ
           PERFORM 60200-CHECK-SCMSTR-NUMERICS

      **** (READ CDADDR) ****
           INITIALIZE COMDATA-ADDRESS-RECORD.
CP0910     MOVE 'SC' TO CAR-CUSTOMER-TYPE.
CP0910     MOVE WS-UIWA-SC-CODE TO CAR-CUSTOMER-CODE.
           MOVE 'A' TO CAR-ADDRESS-TYPE.
           EXEC CICS READ
                DATASET ('CDADDR')
                RIDFLD  (CAR-KEY)
                INTO    (COMDATA-ADDRESS-RECORD)
                RESP    (EIBRESP)
           END-EXEC.
DR0422     MOVE CAR-KEY           TO CXUTS0ML-COMMAND.
           PERFORM CHECK-FOR-NOTFND-EIBRESP.
CP0910     MOVE CAR-TAX-ID          TO WS-HLD-CAR-TAX-ID.
CP0910     IF COM-PNET-BRIDGE-FLAG-YES AND
CP0910        COM-PNET-CHAIN-CODE > SPACES
CP0910        MOVE 'CH' TO CAR-CUSTOMER-TYPE
CP0910        MOVE COM-PNET-CHAIN-CODE TO CAR-CUSTOMER-CODE
CP0910        EXEC CICS READ
CP0910             DATASET ('CDADDR')
CP0910             RIDFLD  (CAR-KEY)
CP0910             INTO    (COMDATA-ADDRESS-RECORD)
CP0910             RESP    (EIBRESP)
CP0910        END-EXEC
DR0422        MOVE CAR-KEY           TO CXUTS0ML-COMMAND
CP0910        PERFORM CHECK-FOR-NOTFND-EIBRESP
CP0910     END-IF.

      *--------------------------------
       20060-GET-CARD-CUST-INFO.
      *--------------------------------
CP0807** VARIABLES AND FILE CHANGED FOR FPMASTR REPLACEMENT **
CP0807     MOVE COM-PREMIER-CARD          TO WS-PRM-CARD-NR
CP0807     MOVE WS-UIWA-CARD-NR-16 (16:1) TO WS-PRM-CARD-CKD
CP0807     PERFORM PREMIER-INITIAL-INTERFACE THRU PII-9999

100914     IF CSR-VERIFY-UNIT = 'G'
100914        IF WS-PRMINFO-READ-SW NOT = 'Y'
100914           PERFORM 83300-READ-PRMINFO
100914        END-IF
100914        PERFORM 52000-VALIDATE-CUST-UNIT
100914        IF SQLCODE = +100
100914           MOVE INVALID-UNIT-NR           TO OUT-COMENT
100914           MOVE INVALID-UNIT-NR-N         TO POS-ERROR-NUMBER
100914           PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
100914        END-IF
100914     END-IF.

021908     MOVE 'C' TO WS-UNITMST-UNIT
CP0807     PERFORM 83000-GET-UNITMST.
CP0807     IF EIBRESP = DFHRESP(NOTFND)
CP0807        IF (COM-UNIT-NR = ' XCASH' AND
CP0807            THIS-BE-A-VRU-XTN)     OR
CP0807           CSR-VERIFY-UNIT = 'N'
CP0807               INITIALIZE UNITMST-UNIT-MASTER-RECORD
CP0807               MOVE 'N'                   TO WS-UNITMST-RECD-SW
CP0807               MOVE '1'                   TO UNITMST-UBC-RECD-ID
CP0807               MOVE COM-UNIT-POOL-CUST-ID TO UNITMST-UBC-CUST-ID
CP0807               MOVE 'DEFAULT'             TO UNITMST-UBC-GROUP-ID
CP0807               MOVE COM-UNIT-NR-EXPANDED  TO UNITMST-UBC-UNIT-NR
              ELSE
CP0807           MOVE INVALID-UNIT-NR           TO OUT-COMENT
CP0807           MOVE INVALID-UNIT-NR-N         TO POS-ERROR-NUMBER
CP0807           PERFORM EXIT-FUEL-PGM-INITIAL-SCREEN
CP0807        END-IF
CP0807     END-IF.

CP0807     PERFORM 60500-CHECK-UNITMST-NUMERICS
CP0807     PERFORM 60510-MOVE-UNITMST-VALUES.
CP0807     PERFORM READ-CDNCUST.

      *--------------------------------
       20070-GET-CASH.
      *--------------------------------
           IF ADVAMTI  > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE ADVAMTI                  TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
              MOVE WS-DEEDIT-COST           TO WS-UIWA-CASH-AMT
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO ADVAMTL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           IF NOT WS-XTN-TYPE-LARGE-AMT AND
              WS-UIWA-CASH-AMT > 9999.99
              MOVE -1                    TO ADVAMTL
              MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
              MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *--------------------------------
JS0699 20080-GET-PRODUCT.
      *--------------------------------
           IF PRD1CDI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE PRD1AMTI                 TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
              MOVE WS-DEEDIT-COST           TO WS-UIWA-PR1-COST
                                               WS-UIWA-PR1-COST-SC
              MOVE PRD1CDI                  TO WS-UIWA-PR1-CODE
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                       TO PRD1AMTL
                 MOVE INVALID-AMOUNT-ENTERED   TO OUT-COMENT-1
                 MOVE INVALID-AMOUNT-ENTERED-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE 'Y' TO WS-EXIT-FLAG
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           IF PRD2CDI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE PRD2AMTI                 TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
              MOVE WS-DEEDIT-COST           TO WS-UIWA-PR2-COST
                                               WS-UIWA-PR2-COST-SC
              MOVE PRD2CDI                  TO WS-UIWA-PR2-CODE
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                       TO PRD2AMTL
                 MOVE INVALID-AMOUNT-ENTERED   TO OUT-COMENT-1
                 MOVE INVALID-AMOUNT-ENTERED-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE 'Y' TO WS-EXIT-FLAG
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           IF PRD3CDI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE PRD3AMTI                 TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
              MOVE WS-DEEDIT-COST           TO WS-UIWA-PR3-COST
                                               WS-UIWA-PR3-COST-SC
              MOVE PRD3CDI                  TO WS-UIWA-PR3-CODE
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                       TO PRD3AMTL
                 MOVE INVALID-AMOUNT-ENTERED   TO OUT-COMENT-1
                 MOVE INVALID-AMOUNT-ENTERED-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE 'Y' TO WS-EXIT-FLAG
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *--------------------------------
JS0699 20081-CHECK-PRODUCTS.
      *--------------------------------
MN0207     IF THIS-BE-AN-UNATTENDED-PRE-AUTH
082008         IF WS-AXIA-AUTH-1-PROD-CODE > SPACES
082008             MOVE WS-AXIA-AUTH-1-PROD-CODE TO WS-UIWA-PR1-CODE
MN0207             MOVE .01                      TO WS-UIWA-PR1-COST
MN0207                                              WS-UIWA-PR1-COST-SC
MN0207         END-IF
082008         IF WS-AXIA-AUTH-2-PROD-CODE > SPACES
082008             MOVE WS-AXIA-AUTH-2-PROD-CODE TO WS-UIWA-PR2-CODE
MN0207             MOVE .01                      TO WS-UIWA-PR2-COST
MN0207                                              WS-UIWA-PR2-COST-SC
MN0207         END-IF
082008         IF WS-AXIA-AUTH-3-PROD-CODE > SPACES
082008             MOVE WS-AXIA-AUTH-3-PROD-CODE TO WS-UIWA-PR3-CODE
MN0207             MOVE .01                      TO WS-UIWA-PR3-COST
MN0207                                              WS-UIWA-PR3-COST-SC
MN0207         END-IF
MN0207     END-IF.
MN0207
JS1103     IF WS-UIWA-PR1-CODE    > SPACES OR
JS1103        WS-UIWA-PR2-CODE    > SPACES OR
JS1103        WS-UIWA-PR3-CODE    > SPACES OR
JS1103        WS-UIWA-PR1-COST    > ZEROES OR
JS1103        WS-UIWA-PR2-COST    > ZEROES OR
JS1103        WS-UIWA-PR3-COST    > ZEROES OR
JS0604        COM-PUR-OPTIONS-PROD = '1'
JS1103        PERFORM PRODUCT-CODE-EDITS
JS1103     END-IF

      *** (SEE IF THE DRIVER IS SETUP FOR PRODUCT CODES) ***
JS0604     IF (COM-PUR-OPTIONS-PROD NOT = '1') AND
              (WS-UIWA-PR1-CODE > SPACES OR
               WS-UIWA-PR2-CODE > SPACES OR
               WS-UIWA-PR3-CODE > SPACES)
              MOVE -1 TO PRD1CDL
              MOVE DRIVER-MAY-NOT-PURC-PROD-N TO POS-ERROR-NUMBER
              MOVE PURCHASE-NOT-ALLOWED-NBR   TO CALL-COMPANY-NBR
              MOVE CALL-COMPANY-MSG           TO NEW-OUT-MESSAGE
              MOVE 'Y'                        TO VCWS-ERROR-IND
              MOVE DRIVER-MAY-NOT-PURC-PROD   TO OUT-COMENT
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
           END-IF.

      *** (VALIDATE THE PRODUCT AMOUNTS DON'T EXCEED MAX) ***
           IF NOT WS-XTN-TYPE-LARGE-AMT
              EVALUATE TRUE
                 WHEN WS-UIWA-PR1-COST > 9999.99
                    MOVE -1                    TO PRD1AMTL
                    MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
                    MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 WHEN WS-UIWA-PR2-COST > 9999.99
                    MOVE -1                    TO PRD2AMTL
                    MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
                    MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 WHEN WS-UIWA-PR3-COST > 9999.99
                    MOVE -1                    TO PRD3AMTL
                    MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
                    MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-EVALUATE
           END-IF.

      *--------------------------------
       20090-SETUP-DRIVER-NAME.
      *--------------------------------
CP0807** CHANGE VARIABLES FOR FPMASTR REPLACEMENT **
           IF CO-INPUTS-DRIVER-NAME
CP0807        MOVE UNITMST-DRVR-NAME    TO FPNAMEI.
           IF PRM-LAST-NAME  > SPACES AND
              PRM-FIRST-NAME > SPACES AND
              CO-INPUTS-DRIVER-NAME
              MOVE 20 TO INDX
              MOVE 15 TO INDX-1
              MOVE 24 TO INDX-2
091211        MOVE 'YYN'          TO WS-CXUTSJON-OPTIONS
CP1011        CALL 'CXUTSJON' USING INDX,   PRM-LAST-NAME,
CP1011                              INDX-1, PRM-FIRST-NAME,
CP1011                              INDX-2, UNITMST-DRVR-NAME,
CP1011                              WS-CXUTSJON-OPTIONS
CP0807        MOVE UNITMST-DRVR-NAME TO FPNAMEI
           END-IF.

      *--------------------------------
       20100-SETUP-TRIP-NUMBER.
      *--------------------------------
CP0807** CHANGED VARIABLES FOR FPMASTR REPLACEMENT **
JS1199     IF CSR-TRIP-NUMBER-REQ = 'C'
CP0807        MOVE 'E'                   TO WS-FL-TRIP-FLAG
              IF PRM-DRIVER-TRIP-NR NOT > SPACES
CP0807           MOVE 'T'                TO WS-FL-TRIP-FLAG.
CP0807     IF TRIP-NR-ENTERED
CP0807        MOVE UNITMST-TRIP-NR       TO WS-UIWA-TRIP-NR.
JS1199     IF CSR-TRIP-NUMBER-REQ = 'C'
              IF PRM-DRIVER-TRIP-NR > SPACES
                 MOVE PRM-DRIVER-TRIP-NR TO WS-UIWA-TRIP-NR.

      *--------------------------------
       20110-SETUP-INP-AREA.
      *--------------------------------
           MOVE COM-FP-PRCNTAGES TO INP-DISC.
           MOVE FPNAMEI            TO WS-UIWA-15-BYTES.
           MOVE '+'                TO WS-UIWA-USI-FLAG.
CP0807     MOVE CUST-RGE-SMLNM     TO INP-CO-SMLNAME.
           MOVE ZEROES             TO INP-AUTH-NR.
           MOVE FPINVNRI           TO WS-UIWA-INVOICE-NR.
           MOVE FPFSI              TO WS-UIWA-SERVICE-TYPE.

      *------------------------------
       20120-GET-TRACTOR-FUEL.
      *------------------------------
           IF FPGLNSI  > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE FPGLNSI                  TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-QTYX
              MOVE WS-DEEDIT-QTY            TO WS-UIWA-NR2-QTY
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO FPGLNSL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
              IF NOT WS-XTN-TYPE-LARGE-AMT AND
                 WS-UIWA-NR2-QTY  > 999.99
                 MOVE -1                    TO FPGLNSL
                 MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           IF FPTTLI  > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE FPTTLI                   TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
              MOVE WS-DEEDIT-COST           TO WS-UIWA-NR2-COST
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO FPTTLL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
082008     END-IF.

           IF FPCOSTI  > SPACES
              MOVE 05                       TO WS-CXUTS123-BYTES
              MOVE 03                       TO WS-CXUTS123-DECIMALS
              MOVE FPCOSTI                  TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-PPUX
              MOVE WS-DEEDIT-PPU            TO WS-UIWA-NR2-PPU
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO FPCOSTL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

MP0606     IF WS-UIWA-NR2-COST > 0
CP0406        PERFORM 20121-CHECK-NR2-SUB-PROD
MP0606     ELSE
MP0606        MOVE SPACES                   TO WS-HOLD-NR2-CP-SUFFIX
MP0606     END-IF.

CP0406*---------------------------------
CP0406 20121-CHECK-NR2-SUB-PROD.
CP0406*---------------------------------
CP0406     IF N2SPRDI > SPACES
CP0406        MOVE N2SPRDI                  TO WS-HOLD-NR2-SUB-PROD-IN
CP0406     ELSE
CP0406        PERFORM 87100-GET-NR2-DEF-SUB-PROD
CP0406     END-IF.
CP0406     IF WS-HOLD-NR2-SUB-PROD-IN > SPACES
CP0406        MOVE WS-HOLD-NR2-SUB-PROD-IN  TO WS-SUB-PROD-IN
CP0406        MOVE 'P'                      TO WS-SUB-PROD-CODE-TYPE
CP0406        PERFORM 20122-VALIDATE-NR2-SUB-PROD
CP0406        MOVE WS-SUB-PROD-OUT          TO WS-UIWA-NR2-SUB-PROD
CP0406     END-IF.
JS1111     IF WS-HOLD-NR2-SUB-PROD-IN > SPACES
JS1111        IF COM-COST-PLUS-FLAG = 'Y'
JS1111           PERFORM 20125-CP-FOR-NR2-SUB-PROD
JS1111        ELSE
JS1111           MOVE WS-UIWA-NR2-SUB-PROD  TO WS-SUB-PROD-OUT
JS1111           PERFORM 89000-READ-CDN-SUB-PROD
JS1111        END-IF
JS1111        MOVE DSC-APPLY-FLG            TO WS-UIWA-NR2-SUB-PROD-DSC
JS1111     END-IF.

CP0406*---------------------------------
CP0406 20122-VALIDATE-NR2-SUB-PROD.
CP0406*---------------------------------
CP0406     IF WS-UIWA-NR2-QTY  NOT NUMERIC
CP0406        MOVE ZEROS TO WS-UIWA-NR2-QTY
CP0406     END-IF.
CP0406     IF WS-UIWA-NR2-COST NOT NUMERIC
CP0406        MOVE ZEROS TO WS-UIWA-NR2-COST
CP0406     END-IF.
CP0406     PERFORM 87000-CHECK-SUB-PROD-XLATE
CP0406     IF WS-SUB-PROD-FOUND = 'N' OR
CP0406        WS-SUB-PROD-FUEL-TYPE NOT = 'D2'
CP0406           PERFORM 20123-NR2-SUB-PROD-ERROR
CP0406     END-IF.

CP0406*---------------------------------
CP0406 20123-NR2-SUB-PROD-ERROR.
CP0406*---------------------------------
CP0406     MOVE -1                          TO N2SPRDL
CP0406     MOVE INVALID-NR2-SUB-PROD-MSG    TO OUT-COMENT
CP0406     MOVE INVALID-NR2-SUB-PROD        TO POS-ERROR-NUMBER
CP0406     PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

CP0406*---------------------------------
CP0406 20125-CP-FOR-NR2-SUB-PROD.
CP0406*---------------------------------
CP0406     MOVE WS-UIWA-NR2-SUB-PROD TO WS-SUB-PROD-OUT
CP0406     PERFORM 89000-READ-CDN-SUB-PROD.
CP0406     IF CST-PLUS-SUFFIX > SPACES
CP0406        MOVE CST-PLUS-SUFFIX TO WS-HOLD-NR2-CP-SUFFIX
CP0406     END-IF.

      *------------------------------
       20130-GET-OTHER-FUEL.
      *------------------------------
           IF FPGLNSBI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE FPGLNSBI                 TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-QTYX
              MOVE WS-DEEDIT-QTY            TO WS-UIWA-OTH-QTY
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO FPGLNSBL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
              IF NOT WS-XTN-TYPE-LARGE-AMT AND
                 WS-UIWA-OTH-QTY  > 999.99
                 MOVE -1                    TO FPGLNSBL
                 MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           IF FPTTLBI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE FPTTLBI                  TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
              MOVE WS-DEEDIT-COST           TO WS-UIWA-OTH-COST
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO FPTTLBL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
082008     END-IF.

           IF FPCOSTBI > SPACES
              MOVE 05                       TO WS-CXUTS123-BYTES
              MOVE 03                       TO WS-CXUTS123-DECIMALS
              MOVE FPCOSTBI                 TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-PPUX
              MOVE WS-DEEDIT-PPU            TO WS-UIWA-OTH-PPU
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO FPCOSTBL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

CP0406     PERFORM 20131-CHECK-OTH-SUB-PROD.

CP0406*---------------------------------
CP0406 20131-CHECK-OTH-SUB-PROD.
CP0406*---------------------------------
CP0406     IF FPSPRDI > SPACES
CP0406        MOVE FPSPRDI                  TO WS-HOLD-OTH-SUB-PROD-IN
CP0406     ELSE
CP0406        PERFORM 87400-GET-OTH-DEF-SUB-PROD
CP0406     END-IF.
CP0406     IF WS-HOLD-OTH-SUB-PROD-IN > SPACES
CP0406        MOVE WS-HOLD-OTH-SUB-PROD-IN  TO WS-SUB-PROD-IN
CP0406        MOVE 'P'                      TO WS-SUB-PROD-CODE-TYPE
MP0705        PERFORM 20131-CHECK-OTHER-FUEL-TYPE
CP0406        MOVE WS-SUB-PROD-OUT          TO WS-UIWA-OTH-TYPE
MP0705     END-IF.
JS1111     IF WS-HOLD-OTH-SUB-PROD-IN > SPACES
JS1111        MOVE WS-UIWA-OTH-SUB-PROD  TO WS-SUB-PROD-OUT
JS1111        PERFORM 89000-READ-CDN-SUB-PROD
JS1111        MOVE DSC-APPLY-FLG         TO WS-UIWA-OTH-SUB-PROD-DSC
JS1111     END-IF.

MP0705*---------------------------------
MP0705 20131-CHECK-OTHER-FUEL-TYPE.
MP0705*---------------------------------
CP0406     IF WS-UIWA-OTH-QTY  NOT NUMERIC
CP0406        MOVE ZEROS TO WS-UIWA-OTH-QTY
CP0406     END-IF.
CP0406     IF WS-UIWA-OTH-COST NOT NUMERIC
CP0406        MOVE ZEROS TO WS-UIWA-OTH-COST
CP0406     END-IF.
MP0705     IF WS-UIWA-OTH-QTY      > 0                OR
MP0705        WS-UIWA-OTH-COST     > 0
CP0406           PERFORM 87000-CHECK-SUB-PROD-XLATE
CP0406           IF WS-SUB-PROD-FOUND = 'N' OR
CP0406              WS-SUB-PROD-FUEL-TYPE NOT = 'OT'
MP0705                 MOVE -1                    TO FPSPRDL
MP0705                 MOVE INVALID-OTHER-FUEL-TYPE-MSG
MP0705                                            TO OUT-COMENT
MP0705                 MOVE INVALID-OTHER-FUEL-TYPE
MP0705                                            TO POS-ERROR-NUMBER
MP0705                PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
MP0705           END-IF
MP0705     END-IF.

      *------------------------------
       20140-GET-TRAILER-FUEL.
      *------------------------------
           IF TRGLNI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE TRGLNI                   TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-QTYX
              MOVE WS-DEEDIT-QTY            TO WS-UIWA-REF-QTY
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO TRGLNL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
              IF NOT WS-XTN-TYPE-LARGE-AMT AND
                 WS-UIWA-REF-QTY  > 999.99
                 MOVE -1                    TO TRGLNL
                 MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           IF TRTOTALI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE TRTOTALI                 TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
              MOVE WS-DEEDIT-COST           TO WS-UIWA-REF-COST
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO TRTOTALL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
082008     END-IF.

           IF TRCOSTI > SPACES
              MOVE 05                       TO WS-CXUTS123-BYTES
              MOVE 03                       TO WS-CXUTS123-DECIMALS
              MOVE TRCOSTI                  TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-PPUX
              MOVE WS-DEEDIT-PPU            TO WS-UIWA-REF-PPU
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO TRCOSTL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

MP0606     IF WS-UIWA-REF-COST > 0
CP0406        PERFORM 20141-CHECK-REF-SUB-PROD
MP0606     ELSE
MP0606        MOVE SPACES                   TO WS-HOLD-REF-CP-SUFFIX
MP0606     END-IF.

CP0406*---------------------------------
CP0406 20141-CHECK-REF-SUB-PROD.
CP0406*---------------------------------
CP0406     IF TRSPRDI > SPACES
CP0406        MOVE TRSPRDI               TO WS-HOLD-REF-SUB-PROD-IN
CP0406     ELSE
CP0406        PERFORM 87300-GET-REF-DEF-SUB-PROD
CP0406     END-IF.
CP0406     IF WS-HOLD-REF-SUB-PROD-IN > SPACES
CP0406        MOVE WS-HOLD-REF-SUB-PROD-IN  TO WS-SUB-PROD-IN
CP0406        MOVE 'P'                      TO WS-SUB-PROD-CODE-TYPE
CP0406        PERFORM 20141-VALIDATE-REF-SUB-PROD
CP0406        MOVE WS-SUB-PROD-OUT          TO WS-UIWA-REF-SUB-PROD
CP0406     END-IF.
JS1111     IF WS-HOLD-REF-SUB-PROD-IN > SPACES
JS1111        IF COM-COST-PLUS-FLAG = 'Y'
JS1111           PERFORM 20145-CP-FOR-REF-SUB-PROD
JS1111        ELSE
JS1111           MOVE WS-UIWA-REF-SUB-PROD  TO WS-SUB-PROD-OUT
JS1111           PERFORM 89000-READ-CDN-SUB-PROD
JS1111        END-IF
JS1111        MOVE DSC-APPLY-FLG            TO WS-UIWA-REF-SUB-PROD-DSC
JS1111     END-IF.

CP0406*---------------------------------
CP0406 20141-VALIDATE-REF-SUB-PROD.
CP0406*---------------------------------
CP0406     PERFORM 87000-CHECK-SUB-PROD-XLATE
CP0406     IF WS-SUB-PROD-FOUND = 'N' OR
CP0406        WS-SUB-PROD-FUEL-TYPE NOT = 'RF'
CP0406          PERFORM 20142-REEFER-SUB-PROD-ERROR
CP0406     END-IF.

CP0406*---------------------------------
CP0406 20142-REEFER-SUB-PROD-ERROR.
CP0406*---------------------------------
CP0406     MOVE -1                          TO TRSPRDL
CP0406     MOVE INVALID-REEFER-SUB-PROD-MSG TO OUT-COMENT
CP0406     MOVE INVALID-REEFER-SUB-PROD     TO POS-ERROR-NUMBER
CP0406     PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

CP0406*---------------------------------
CP0406 20145-CP-FOR-REF-SUB-PROD.
CP0406*---------------------------------
CP0406     MOVE WS-UIWA-REF-SUB-PROD TO WS-SUB-PROD-OUT
CP0406     PERFORM 89000-READ-CDN-SUB-PROD.
CP0406     IF CST-PLUS-SUFFIX > SPACES
CP0406        MOVE CST-PLUS-SUFFIX TO WS-HOLD-REF-CP-SUFFIX
CP0406     END-IF.

      *------------------------------
       20150-GET-NR1-FUEL.
      *------------------------------
           IF NR1GLNSI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE NR1GLNSI                 TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-QTYX
              MOVE WS-DEEDIT-QTY            TO WS-UIWA-NR1-QTY
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO NR1GLNSL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
MP0705        IF NOT WS-XTN-TYPE-LARGE-AMT AND
MP0705           WS-UIWA-NR1-QTY + WS-UIWA-NR2-QTY > 999.99
MP0705           MOVE -1                    TO NR1GLNSL
MP0705           MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
MP0705           MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
MP0705           PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
MP0705        END-IF.

           IF NR1TTLI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE NR1TTLI                  TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
              MOVE WS-DEEDIT-COST           TO WS-UIWA-NR1-COST
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO NR1TTLL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
082008     END-IF.

           IF NR1COSTI > SPACES
              MOVE 05                       TO WS-CXUTS123-BYTES
              MOVE 03                       TO WS-CXUTS123-DECIMALS
              MOVE NR1COSTI                 TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-PPUX
              MOVE WS-DEEDIT-PPU            TO WS-UIWA-NR1-PPU
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO NR1COSTL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

MP0606     IF WS-UIWA-NR1-COST > 0
CP0406        PERFORM 20151-CHECK-NR1-SUB-PROD
MP0606     ELSE
MP0606        MOVE SPACES                   TO WS-HOLD-NR1-CP-SUFFIX
MP0606     END-IF.

CP0406*---------------------------------
CP0406 20151-CHECK-NR1-SUB-PROD.
CP0406*---------------------------------
CP0406     IF N1SPRDI > SPACES
CP0406        MOVE N1SPRDI                  TO WS-HOLD-NR1-SUB-PROD-IN
CP0406     ELSE
CP0406        PERFORM 87200-GET-NR1-DEF-SUB-PROD
CP0406     END-IF
CP0406     IF WS-HOLD-NR1-SUB-PROD-IN > SPACES
CP0406        MOVE WS-HOLD-NR1-SUB-PROD-IN  TO WS-SUB-PROD-IN
CP0406        MOVE 'P'                      TO WS-SUB-PROD-CODE-TYPE
CP0406        PERFORM 20151-VALIDATE-NR1-SUB-PROD
CP0406        MOVE WS-SUB-PROD-OUT          TO WS-UIWA-NR1-SUB-PROD
CP0406     END-IF.
JS1111     IF WS-HOLD-NR1-SUB-PROD-IN > SPACES
JS1111        IF COM-COST-PLUS-FLAG = 'Y'
JS1111           PERFORM 20155-CP-FOR-NR1-SUB-PROD
JS1111        ELSE
JS1111           MOVE WS-UIWA-NR1-SUB-PROD  TO WS-SUB-PROD-OUT
JS1111           PERFORM 89000-READ-CDN-SUB-PROD
JS1111        END-IF
JS1111        MOVE DSC-APPLY-FLG            TO WS-UIWA-NR1-SUB-PROD-DSC
JS1111     END-IF.

CP0406*---------------------------------
CP0406 20151-VALIDATE-NR1-SUB-PROD.
CP0406*---------------------------------
CP0406     PERFORM 87000-CHECK-SUB-PROD-XLATE
CP0406     IF WS-SUB-PROD-FOUND = 'N' OR
CP0406        WS-SUB-PROD-FUEL-TYPE NOT = 'D1'
CP0406           PERFORM 20152-NR1-SUB-PROD-ERROR
CP0406     END-IF.

CP0406*---------------------------------
CP0406 20152-NR1-SUB-PROD-ERROR.
CP0406*---------------------------------
CP0406     MOVE -1                          TO N1SPRDL
CP0406     MOVE INVALID-NR1-SUB-PROD-MSG    TO OUT-COMENT
CP0406     MOVE INVALID-NR1-SUB-PROD        TO POS-ERROR-NUMBER
CP0406     PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

CP0406*---------------------------------
CP0406 20155-CP-FOR-NR1-SUB-PROD.
CP0406*---------------------------------
CP0406     MOVE WS-UIWA-NR1-SUB-PROD TO WS-SUB-PROD-OUT
CP0406     PERFORM 89000-READ-CDN-SUB-PROD.
CP0406     IF CST-PLUS-SUFFIX > SPACES
CP0406        MOVE CST-PLUS-SUFFIX TO WS-HOLD-NR1-CP-SUFFIX
CP0406     END-IF.

CP0406*------------------------------
CP0406 20156-CHK-CP-SUB-PROD.
CP0406*------------------------------
CP0406     MOVE 'Y'                     TO WS-CP-FOR-SUBPROD
CP0406     MOVE COM-CP-COST-PLUS-VENDOR TO RP-KEY-TYPE
CP0406     MOVE COM-CP-SUPPLIER-NR      TO RP-SUPPLIER-NUMBER
CP0406     MOVE COM-RMF-RACK-CITY       TO RP-CITY-NUMBER
MB0714     IF EIBTRNID = 'FMBP' OR 'FMMP'
MB0714        PERFORM GCPI-COMPUTE-CALC-DAYS
MB0714     END-IF.
CP0406     IF RP-KEY-TYPE = 'C'
CP0406        PERFORM GCPI-GET-FMRACK-DATA
CP0406     ELSE
CP0406        PERFORM GCPI-GET-SINGLE-FMRACK
CP0406     END-IF
CP0406     IF CP-ERROR-FLAG = ' '
CP0406        PERFORM COMPUTE-COST-PLUS-PRICES THRU CCPP-EXIT
CP0406     END-IF
CP0406     IF CP-ERROR-FLAG = ' '
CP0406        COMPUTE COM-NR2-COST-PLUS-PPG = WS-NR2-COST
CP0406        COMPUTE COM-NR1-COST-PLUS-PPG = WS-NR1-COST
CP0406        COMPUTE COM-REF-COST-PLUS-PPG = WS-REF-COST
CP0406        IF CP-ERROR-FLAG > ' ' AND
CP0406           ERROR-FLAG = ' '
CP0406              MOVE CP-ERROR-FLAG TO ERROR-FLAG
CP0406        END-IF
CP0406     END-IF.

      *------------------------------
       20160-GET-OIL.
      *------------------------------
           IF OILQTSI > SPACES
              MOVE 07                       TO WS-CXUTS123-BYTES
              MOVE 00                       TO WS-CXUTS123-DECIMALS
              MOVE OILQTSI                  TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-QTY-NO-DECX
              MOVE WS-DEEDIT-QTY-NO-DEC     TO WS-UIWA-OIL-QTY
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO OILQTSL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
              IF NOT WS-XTN-TYPE-LARGE-AMT AND
                 WS-UIWA-OIL-QTY  > 99
                 MOVE -1                    TO OILQTSL
                 MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           MOVE WS-UIWA-OIL-QTY TO OILQTSO.

           IF OILCSTI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE OILCSTI                  TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
              MOVE WS-DEEDIT-COST           TO WS-UIWA-OIL-COST
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO OILCSTL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
              IF NOT WS-XTN-TYPE-LARGE-AMT AND
                 WS-UIWA-OIL-COST > 999.99
                 MOVE -1                    TO OILCSTL
                 MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *------------------------------
       20170-GET-TAX.
      *------------------------------
           IF CTAXI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE CTAXI                    TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
              MOVE WS-DEEDIT-COST           TO WS-UIWA-TAX-AMT
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO CTAXL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
082008     END-IF.

      *------------------------------
       20180-GET-EXPECTED-AMT.
      *------------------------------
           IF FPXPAMTI > SPACES
              MOVE 09                       TO WS-CXUTS123-BYTES
              MOVE 02                       TO WS-CXUTS123-DECIMALS
              MOVE FPXPAMTI                 TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-COSTX
              MOVE WS-DEEDIT-COST           TO WS-UIWA-INVOICE-AMT
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO FPXPAMTL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
              IF NOT WS-XTN-TYPE-LARGE-AMT AND
                 WS-UIWA-INVOICE-AMT > 99999.99
                 MOVE -1                    TO FPXPAMTL
                 MOVE INVALID-NUM-VALUE2    TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           EVALUATE TRUE
              WHEN COM-MANUAL-IOL-XTN-YES
                 CONTINUE
              WHEN WS-UIWA-INVOICE-AMT = ZEROES
                 MOVE ZERO-OR-NEG               TO OUT-COMENT
                 MOVE ZERO-OR-NEG-N             TO POS-ERROR-NUMBER
                 MOVE -1                        TO FPXPAMTL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
              WHEN WS-UIWA-INVOICE-AMT NOT = (WS-UIWA-NR2-COST +
                                              WS-UIWA-OTH-COST   +
                                              WS-UIWA-REF-COST   +
                                              WS-UIWA-NR1-COST   +
                                              WS-UIWA-OIL-COST   +
                                              WS-UIWA-PR1-COST-SC +
                                              WS-UIWA-PR2-COST-SC +
                                              WS-UIWA-PR3-COST-SC +
                                              WS-UIWA-TAX-AMT    +
                                              WS-UIWA-CASH-AMT)
                 MOVE -1                        TO FPXPAMTL
                 MOVE INVOICE-TOTAL-ERROR       TO OUT-COMENT
                 MOVE INVOICE-TOTAL-ERROR-N     TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
           END-EVALUATE.

      *------------------------------
       20190-GET-TRAILER-INFO.
      *------------------------------
      **** (GET TRAILER HUB) ****
           IF TRLRHBI > SPACES
              MOVE 08                       TO WS-CXUTS123-BYTES
              MOVE 01                       TO WS-CXUTS123-DECIMALS
              MOVE TRLRHBI                  TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-HUBX
              MOVE WS-DEEDIT-HUB            TO WS-UIWA-TRAILER-HUB
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO TRLRHBL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      **** (GET TRAILER HOURS) ****
           IF TRLRHRI > SPACES
              MOVE 08                       TO WS-CXUTS123-BYTES
              MOVE 01                       TO WS-CXUTS123-DECIMALS
              MOVE TRLRHRI                  TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-HUBX
              MOVE WS-DEEDIT-HUB            TO WS-UIWA-TRAILER-HRS
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO TRLRHRL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      **** (SETUP THE TRAILER NUMBER FIELD IF NEEDED) ****
           IF CDN-TRAILER-NR-FLAG = 'E' AND
              PRM-TRAILER-NR > SPACES
              MOVE PRM-TRAILER-NR TO TRLRNRI, WS-UIWA-TRAILER-NR.

      *------------------------------
       20200-GET-HUB-INFO.
      *------------------------------
           MOVE ZEROES                      TO WS-UIWA-HUB.
           IF FPHUBI > SPACES
              MOVE 08                       TO WS-CXUTS123-BYTES
              MOVE 01                       TO WS-CXUTS123-DECIMALS
              MOVE FPHUBI                   TO WS-CXUTS123-FIELD
              CALL 'CXUTS123' USING WS-CXUTS123-AREA
              MOVE WS-CXUTS123-FIELD        TO WS-DEEDIT-HUBX
              MOVE WS-DEEDIT-HUB            TO WS-UIWA-HUB
              IF WS-CXUTS123-ERR-FOUND
                 MOVE -1                    TO FPHUBL
                 MOVE INVALID-NUM-VALUE     TO OUT-COMENT
                 MOVE INVALID-NUM-VALUE-N   TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
              MOVE WS-UIWA-HUB              TO FPHUBO
           END-IF.

           PERFORM 40000-CHECK-FOR-TRI-STATE.
           IF WS-TRI-STATE-ACCT
              IF WS-UIWA-HUB NOT > ZEROES
                 MOVE UNIT-NR-REQ   TO ERROR-TYPE
                 MOVE UNIT-NR-REQ-N TO POS-ERROR-NUMBER
                 MOVE '*'           TO ERROR-FLAG
                 MOVE -1            TO FPHUBL
                 MOVE ERROR-TYPE TO OUT-COMENT-1
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *------------------------------
       20210-CHECK-FOR-MESSAGE.
      *------------------------------
           IF THERE-IS-A-MESSAGE-PENDING AND
              MSGSTSI NOT = 'Y'
              MOVE INVALID-RESP-MSG-QUERY TO OUT-COMENT
              MOVE INVALID-RESP-MSG-QUERY-N TO POS-ERROR-NUMBER
              MOVE -1 TO MSGSTSL
ED0810        MOVE 'N'                    TO WS-NOTIFY-IRIS-FL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *------------------------------
JS0603 20215-SETUP-USER-WORK-AREA.
      *------------------------------
      *** (THIS RTN WILL SETUP THE USER WORK AREA FOR REMAINING FLDS) **
           IF PONRI < SPACES
              MOVE SPACES TO PONRI.
           IF ADVTRIPI < SPACES
              MOVE SPACES TO ADVTRIPI.
           IF TRLRNRI  < SPACES
              MOVE SPACES TO TRLRNRI.

           MOVE PONRI     TO WS-UIWA-PO-NR
           MOVE ADVTRIPI  TO WS-UIWA-TRIP-NR
           MOVE TRLRNRI   TO WS-UIWA-TRAILER-NR.
           MOVE FPCHKI    TO WS-UIWA-CHECK-NRX.

JS0703*** (SETUP THE SECURITY CARD IF NEEDED) ***
JS0703     MOVE ALL '0'                    TO WS-UIWA-SC-SECURITY-CARD
JS0703     IF SECUCDI > SPACES    AND
JS0703        SECUCDI NUMERIC
JS0703        MOVE SECUCDI                 TO WS-PRM-CARD-BASE-A
JS0703        PERFORM DETERMINE-PREFIX
JS0703        MOVE WS-PRM-CARD             TO WS-UIWA-SC-SECURITY-CARD
JS0703     END-IF.

      *------------------------------
       20300-CHECK-CASH-AVAIL-BY-GAL.
      *------------------------------
102810     IF CDN-FLEET-LIMIT-FLAG = 'Y'
MB1013       AND WS-PROPRIETARY-CARD = 'Y'
102810       AND WS-FLEET-LIMIT-CSH-AVAIL NOT > SPACE
102810        PERFORM GET-FLEET-CASH-LIMIT
102810     END-IF
CP1098     IF CSR-CASH-PER-GALLON-FLAG = 'Y'    AND
              PRM-CASH-PER-GALLON-LIMIT < 9.99  AND
CP1098        (CSR-CASH-IS-ON-THE-CARD OR
102810         WS-FLEET-LIMIT-CSH-AVAIL > SPACE)
                 PERFORM ADJUST-CASH-AVAIL-BY-GALLONS.

      *------------------------------
       20305-CHECK-FOR-MANUAL-IOL.
      *------------------------------
           IF COM-MANUAL-IOL-XTN-YES
              IF WS-UIWA-NR2-QTY = ZEROES
                 MOVE ZERO-OR-NEG   TO ERROR-TYPE
                 MOVE ZERO-OR-NEG-N TO POS-ERROR-NUMBER
                 MOVE -1            TO FPGLNSL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
              MOVE SCM-IOL-RCP       TO WS-UIWA-IOL-RCP
              PERFORM SPR-SETUP-IOL-AUTH
JS0699        COMPUTE WS-UIWA-NR2-PPU ROUNDED = WS-UIWA-IOL-RCP
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-NR2-COST +
                                            WS-UIWA-TAX-AMT.

      *------------------------------
JS0699 20306-CHECK-CANADIAN-TAX.
      *------------------------------
           IF SCM-IS-IN-CANADA       AND
              SCM-AUTO-CALC-TAX-YES  AND
              SCPM-AUTO-CALC-TAX-YES
SB0114        PERFORM 20306-BACKOUT-CANADIAN-TAXES
SB0114     END-IF.
SB0114
SB0114*------------------------------
SB0114 20306-BACKOUT-CANADIAN-TAXES.
SB0114*------------------------------
SB0114     IF WS-UIWA-TAX-AMT > ZEROES
SB0114        MOVE TAX-NOT-ALLOWED   TO OUT-COMENT
SB0114        MOVE TAX-NOT-ALLOWED-N TO POS-ERROR-NUMBER
SB0114        MOVE -1                TO CTAXL
SB0114        PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
SB0114     END-IF.
SB0114
SB0114     MOVE 'Y' TO WS-TAX-COMPUTED-FLAG.
SB0114
SB0114     MOVE 'B'                       TO CTLA-FUNCTION-CODE.
SB0114     MOVE SCM-LOCATION-STATE-2      TO CTLA-PROVINCE
SB0114     MOVE WS-BUSINESS-DATE-CYYMMDD  TO CTLA-MQ-TRAN-DATE
SB0114     MOVE EIBTIME                   TO CTLA-MQ-TRAN-TIME
SB0114     MOVE FMDL-RK-CONTROL-NUMBER    TO CTLA-MQ-CONTROL-NBR
SB0114     MOVE ZEROS                     TO CTLA-CAN-CONVERSION-RATE
SB0114     MOVE SPACE                     TO CTLA-CAN-CONVERSION-SW
SB0114     MOVE WS-USER-INPUT-WORK-AREA   TO CTLA-USER-INPUT-WORK-AREA
SB0114
SB0114     PERFORM 20306-LINK-TO-TSFMO0CT
SB0114
SB0114     MOVE CTLA-USER-INPUT-WORK-AREA TO WS-USER-INPUT-WORK-AREA.

      *------------------------------
JS0699 20306-COMPUTE-TAX-FOR-FUEL.
      *------------------------------
      **** (THIS RTN WILL COMPUTE THE TAX AMOUNT FOR FUEL      ) ****
      **** (FUEL IS ONLY SUBJECT TO THE GST/HST EXCEPT IN      ) ****
      **** (QUEBEC WHERE THE QST ALSO APPLIES.                 ) ****
      **** (THE FOLLOWING IS A BREAK DOWN OF THE TAX RATES     ) ****
      **** (   PROVINCE             GST/HST  PST/QST           ) ****
      **** (   ------------------   -------  -------           ) ****
      **** (   ALBERTA                7%       N/A             ) ****
      **** (   BRITISH COLUMBIA       7%       N/A ON FUEL     ) ****
      **** (   MANITOBA               7%       N/A ON FUEL     ) ****
      **** (   NEW BRUNSWICK          15%      N/A             ) ****
      **** (   NEWFOUNDLAND           15%      N/A             ) ****
      **** (   NORTHWEST TERRITORIES  7%       N/A             ) ****
      **** (   NOVA SCOTIA            15%      N/A             ) ****
      **** (   NUNAVUT                7%       N/A             ) ****
      **** (   ONTARIO                7%       N/A ON FUEL     ) ****
      **** (   PRINCE EDWARD ISLAND   7%       N/A ON FUEL     ) ****
      **** (   QUEBEC                 7%       7.5%-INCREMENTAL) ****
      **** (   SASKATCHEWAN           7%       N/A             ) ****
      **** (   YUKON TERRITORY        7%       N/A             ) ****
      **** ***************************************************** ****
           COMPUTE WS-TAX-COST-HOLD = WS-TAX-COST.
           MOVE ZEROES TO WS-TAX-PST-RATE
                          WS-TAX-GST-RATE
CP0506     PERFORM 20306-GET-SCSTATE.
CP0506     EVALUATE TRUE
CP0506        WHEN SCSR-FUEL-INC-SW = 'Y' AND
CP0506             SCSR-FUEL-PST-RATE > ZEROS
CP0506                COMPUTE WS-TAX-CALC-AMT = 1 + SCSR-FUEL-PST-RATE
CP0506                COMPUTE WS-TAX-PPL      ROUNDED =
CP0506                        WS-TAX-PPL      / WS-TAX-CALC-AMT
CP0506                COMPUTE WS-TAX-COST     ROUNDED =
CP0506                        WS-TAX-COST     / WS-TAX-CALC-AMT
CP0506                COMPUTE WS-TAX-PST-RATE ROUNDED =
CP0506                        WS-TAX-COST-HOLD - WS-TAX-COST
CP0506
CP0506                COMPUTE WS-TAX-CALC-AMT = 1 + SCSR-FUEL-GST-RATE
CP0506                COMPUTE WS-TAX-PPL      ROUNDED =
CP0506                        WS-TAX-PPL      / WS-TAX-CALC-AMT
CP0506                COMPUTE WS-TAX-COST     ROUNDED =
CP0506                        WS-TAX-COST     / WS-TAX-CALC-AMT
CP0506                COMPUTE WS-TAX-GST-RATE ROUNDED =
CP0506                        WS-TAX-COST-HOLD - WS-TAX-COST
CP0506        WHEN SCSR-FUEL-PST-RATE > ZEROS
CP0506                COMPUTE WS-TAX-CALC-AMT = 1 + SCSR-FUEL-PST-RATE
CP0506                                            + SCSR-FUEL-GST-RATE
CP0506                COMPUTE WS-TAX-PPL      ROUNDED =
CP0506                        WS-TAX-PPL      / WS-TAX-CALC-AMT
CP0506                COMPUTE WS-TAX-COST     ROUNDED =
CP0506                        WS-TAX-COST     / WS-TAX-CALC-AMT
CP0506**              **** (COMPUTE THE GST & PST) ****
CP0506                COMPUTE WS-TAX-GST-RATE ROUNDED =
CP0506                        WS-TAX-COST      * SCSR-FUEL-GST-RATE
CP0506                COMPUTE WS-TAX-PST-RATE  ROUNDED =
CP0506                        WS-TAX-COST      * SCSR-FUEL-PST-RATE
CP0506        WHEN OTHER
CP0506                COMPUTE WS-TAX-CALC-AMT = 1 + SCSR-FUEL-GST-RATE
CP0506                COMPUTE WS-TAX-PPL      ROUNDED =
CP0506                        WS-TAX-PPL      / WS-TAX-CALC-AMT
CP0506                COMPUTE WS-TAX-COST     ROUNDED =
CP0506                        WS-TAX-COST     / WS-TAX-CALC-AMT
CP0506                COMPUTE WS-TAX-GST-RATE ROUNDED =
CP0506                        WS-TAX-COST-HOLD - WS-TAX-COST
CP0506     END-EVALUATE.

      **** (COMPUTE THE TAX AMOUNT) ****
           COMPUTE WS-TAX-AMOUNT = WS-TAX-COST-HOLD -
                                   WS-TAX-COST.

CP0506*------------------------------
CP0506 20306-GET-SCSTATE.
CP0506*------------------------------
DR0422     MOVE '20306-GET-SCSTATE'         TO CXUTS0ML-PARAGRAPH.

CP0506     IF WS-READ-SCSTATE-SW NOT = 'Y'
CP0506        MOVE SCM-LOCATION-STATE TO SCSR-STATE
CP0506        EXEC CICS READ
CP0506             DATASET ('SCSTATE')
CP0506             INTO    (SERVICE-CENTER-STATE-RECORD)
CP0506             RIDFLD  (SCSR-KEY)
CP0506             RESP    (EIBRESP)
CP0506        END-EXEC
DR0422        MOVE SCSR-KEY          TO CXUTS0ML-COMMAND
CP0506        PERFORM CHECK-FOR-NOTFND-EIBRESP
CP0506        MOVE 'Y' TO  WS-READ-SCSTATE-SW
CP0506        PERFORM 60300-CHECK-SCSTATE-NUMERICS
CP0506     END-IF.

SB0114*----------------------------------
SB0114 20306-CALC-CANADIAN-TAX.
SB0114*----------------------------------
030514     IF SCM-IS-IN-CANADA
SD1219*       IF THIS-BE-AN-IOL-XTN  OR
SD1219*          SCM-NATS-FLAG-YES
SD1219        IF SCM-NATS-FLAG-YES
030514           NEXT SENTENCE
030514        ELSE
030514           PERFORM 20306-CALC-TAX-AFTER-DISCOUNT
030514        END-IF
030514     END-IF.

SB0114*----------------------------------
SB0114 20306-CALC-TAX-AFTER-DISCOUNT.
SB0114*----------------------------------
SB0114* SAVE ORIGINAL UIWA AREA
SB0114     MOVE WS-USER-INPUT-WORK-AREA        TO WS-ORIG-UIWA-AREA
SB0114     MOVE FUEL-MANAGEMENT-DAILY-LOG-RECD TO WS-ORIG-FMLOG-AREA
SB0114
SB0114     MOVE WS-BILLABLE              TO WS-HOLD-BILLABLE
SB0114     MOVE WS-NON-BILLABLE          TO WS-HOLD-NON-BILLABLE
SB0114     MOVE WS-UIWA-NR2-COST-SC      TO WS-HOLD-UIWA-NR2-COST-SC
SB0114     MOVE WS-UIWA-NR2-PPU-SC       TO WS-HOLD-UIWA-NR2-PPU-SC
SB0114     MOVE WS-UIWA-NR2-SUB-PROD     TO WS-HOLD-UIWA-NR2-SUB-PROD
SB0114     MOVE WS-UIWA-NR2-QTY          TO WS-HOLD-UIWA-NR2-QTY
SB0114     MOVE WS-UIWA-NR2-QTY-SC       TO WS-HOLD-UIWA-NR2-QTY-SC
SB0114     MOVE WS-UIWA-NR2-QTY-US       TO WS-HOLD-UIWA-NR2-QTY-US
SB0114     MOVE WS-UIWA-NR1-COST-SC      TO WS-HOLD-UIWA-NR1-COST-SC
SB0114     MOVE WS-UIWA-NR1-PPU-SC       TO WS-HOLD-UIWA-NR1-PPU-SC
SB0114     MOVE WS-UIWA-NR1-SUB-PROD     TO WS-HOLD-UIWA-NR1-SUB-PROD
SB0114     MOVE WS-UIWA-NR1-QTY          TO WS-HOLD-UIWA-NR1-QTY
SB0114     MOVE WS-UIWA-NR1-QTY-SC       TO WS-HOLD-UIWA-NR1-QTY-SC
SB0114     MOVE WS-UIWA-NR1-QTY-US       TO WS-HOLD-UIWA-NR1-QTY-US
SB0114     MOVE WS-UIWA-REF-COST-SC      TO WS-HOLD-UIWA-REF-COST-SC
SB0114     MOVE WS-UIWA-REF-PPU-SC       TO WS-HOLD-UIWA-REF-PPU-SC
SB0114     MOVE WS-UIWA-REF-SUB-PROD     TO WS-HOLD-UIWA-REF-SUB-PROD
SB0114     MOVE WS-UIWA-REF-QTY          TO WS-HOLD-UIWA-REF-QTY
SB0114     MOVE WS-UIWA-REF-QTY-SC       TO WS-HOLD-UIWA-REF-QTY-SC
SB0114     MOVE WS-UIWA-REF-QTY-US       TO WS-HOLD-UIWA-REF-QTY-US
SB0114     MOVE WS-UIWA-OTH-COST-SC      TO WS-HOLD-UIWA-OTH-COST-SC
SB0114     MOVE WS-UIWA-OTH-PPU-SC       TO WS-HOLD-UIWA-OTH-PPU-SC
SB0114     MOVE WS-UIWA-OTH-SUB-PROD     TO WS-HOLD-UIWA-OTH-SUB-PROD
SB0114     MOVE WS-UIWA-OTH-QTY          TO WS-HOLD-UIWA-OTH-QTY
SB0114     MOVE WS-UIWA-OTH-QTY-SC       TO WS-HOLD-UIWA-OTH-QTY-SC
SB0114     MOVE WS-UIWA-OTH-QTY-US       TO WS-HOLD-UIWA-OTH-QTY-US
SB0114     MOVE WS-UIWA-OIL-COST-SC      TO WS-HOLD-UIWA-OIL-COST-SC
SB0114     MOVE WS-UIWA-OIL-QTY          TO WS-HOLD-UIWA-OIL-QTY
SB0114     MOVE WS-UIWA-PR1-COST         TO WS-HOLD-UIWA-PR1-COST
SB0114     MOVE WS-UIWA-PR1-COST-SC      TO WS-HOLD-UIWA-PR1-COST-SC
SB0114     MOVE WS-UIWA-PR1-COST-US      TO WS-HOLD-UIWA-PR1-COST-US
SB0114     MOVE WS-UIWA-PR2-COST         TO WS-HOLD-UIWA-PR2-COST
SB0114     MOVE WS-UIWA-PR2-COST-SC      TO WS-HOLD-UIWA-PR2-COST-SC
SB0114     MOVE WS-UIWA-PR2-COST-US      TO WS-HOLD-UIWA-PR2-COST-US
SB0114     MOVE WS-UIWA-PR3-COST         TO WS-HOLD-UIWA-PR3-COST
SB0114     MOVE WS-UIWA-PR3-COST-SC      TO WS-HOLD-UIWA-PR3-COST-SC
SB0114     MOVE WS-UIWA-PR3-COST-US      TO WS-HOLD-UIWA-PR3-COST-US
SB0114     MOVE WS-UIWA-TAX-AMT-SC       TO WS-HOLD-UIWA-TAX-AMT-SC
SB0114                                      WS-ORIG-UIWA-TAX-AMT-SC
061815     MOVE ZEROS                    TO WS-NR2-SELECT-DISCOUNT
061815                                      WS-NR1-SELECT-DISCOUNT
061815                                      WS-REF-SELECT-DISCOUNT
061815                                      WS-OTH-SELECT-DISCOUNT
061815                                      WS-OIL-SELECT-DISCOUNT
061815                                      WS-PR1-SELECT-DISCOUNT
061815                                      WS-PR2-SELECT-DISCOUNT
061815                                      WS-PR3-SELECT-DISCOUNT
061815                                      WS-TOT-SELECT-DISCOUNT
SB0114
SB0114     IF WS-HOLD-UIWA-NR2-COST-SC > ZERO
SB0114        PERFORM 20306-CLEAR-UIWA-FIELDS
SB0114        MOVE WS-HOLD-UIWA-NR2-COST-SC  TO WS-UIWA-NR2-COST-SC
SB0114        MOVE WS-HOLD-UIWA-NR2-PPU-SC   TO WS-UIWA-NR2-PPU-SC
SB0114        MOVE WS-HOLD-UIWA-NR2-SUB-PROD TO WS-UIWA-NR2-SUB-PROD
SB0114        MOVE WS-HOLD-UIWA-NR2-QTY      TO WS-UIWA-NR2-QTY
SB0114        MOVE WS-HOLD-UIWA-NR2-QTY-SC   TO WS-UIWA-NR2-QTY-SC
SB0114        MOVE WS-HOLD-UIWA-NR2-QTY-US   TO WS-UIWA-NR2-QTY-US
SB0114        IF COM-DIRECT-BILLING-FUEL = '1'
SB0114           MOVE WS-HOLD-UIWA-NR2-COST-SC TO WS-NON-BILLABLE
SB0114        ELSE
SB0114           MOVE WS-HOLD-UIWA-NR2-COST-SC TO WS-BILLABLE
SB0114        END-IF
SB0114        PERFORM 20306-PRODUCT-DISCOUNT
SB0114        COMPUTE WS-HOLD-UIWA-NR2-COST-SC = WS-UIWA-NR2-COST-SC
SB0214                            - FMDL-SC-RD-SC-SELECT-DISCOUNT
061815        IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
061815          ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
061815               TO WS-NR2-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
061815        END-IF
SB0114     END-IF
SB0114
SB0114     IF WS-HOLD-UIWA-NR1-COST-SC > ZERO
SB0114        PERFORM 20306-CLEAR-UIWA-FIELDS
SB0114        MOVE WS-HOLD-UIWA-NR1-COST-SC  TO WS-UIWA-NR1-COST-SC
SB0114        MOVE WS-HOLD-UIWA-NR1-PPU-SC   TO WS-UIWA-NR1-PPU-SC
SB0114        MOVE WS-HOLD-UIWA-NR1-SUB-PROD TO WS-UIWA-NR1-SUB-PROD
SB0114        MOVE WS-HOLD-UIWA-NR1-QTY      TO WS-UIWA-NR1-QTY
SB0114        MOVE WS-HOLD-UIWA-NR1-QTY-SC   TO WS-UIWA-NR1-QTY-SC
SB0114        MOVE WS-HOLD-UIWA-NR1-QTY-US   TO WS-UIWA-NR1-QTY-US
SB0114        IF COM-DIRECT-BILLING-FUEL = '1'
SB0114           MOVE WS-HOLD-UIWA-NR1-COST-SC TO WS-NON-BILLABLE
SB0114        ELSE
SB0114           MOVE WS-HOLD-UIWA-NR1-COST-SC TO WS-BILLABLE
SB0114        END-IF
SB0114        PERFORM 20306-PRODUCT-DISCOUNT
SB0114        COMPUTE WS-HOLD-UIWA-NR1-COST-SC = WS-UIWA-NR1-COST-SC
SB0214                         - FMDL-SC-RD-SC-SELECT-DISCOUNT
061815        IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
061815          ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
061815               TO WS-NR1-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
061815        END-IF
SB0114     END-IF
SB0114
SB0114     IF WS-HOLD-UIWA-REF-COST-SC > ZERO
SB0114        PERFORM 20306-CLEAR-UIWA-FIELDS
SB0114        MOVE WS-HOLD-UIWA-REF-COST-SC  TO WS-UIWA-REF-COST-SC
SB0114        MOVE WS-HOLD-UIWA-REF-PPU-SC   TO WS-UIWA-REF-PPU-SC
SB0114        MOVE WS-HOLD-UIWA-REF-SUB-PROD TO WS-UIWA-REF-SUB-PROD
SB0114        MOVE WS-HOLD-UIWA-REF-QTY      TO WS-UIWA-REF-QTY
SB0114        MOVE WS-HOLD-UIWA-REF-QTY-SC   TO WS-UIWA-REF-QTY-SC
SB0114        MOVE WS-HOLD-UIWA-REF-QTY-US   TO WS-UIWA-REF-QTY-US
SB0114        IF COM-DIRECT-BILLING-FUEL = '1'
SB0114           MOVE WS-HOLD-UIWA-REF-COST-SC TO WS-NON-BILLABLE
SB0114        ELSE
SB0114           MOVE WS-HOLD-UIWA-REF-COST-SC TO WS-BILLABLE
SB0114        END-IF
SB0114        PERFORM 20306-PRODUCT-DISCOUNT
SB0114        COMPUTE WS-HOLD-UIWA-REF-COST-SC = WS-UIWA-REF-COST-SC
SB0214                         - FMDL-SC-RD-SC-SELECT-DISCOUNT
061815        IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
061815          ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
061815               TO WS-REF-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
061815        END-IF
SB0114     END-IF
SB0114
SB0114     IF WS-HOLD-UIWA-OTH-COST-SC > ZERO
SB0114        PERFORM 20306-CLEAR-UIWA-FIELDS
SB0114        MOVE WS-HOLD-UIWA-OTH-COST-SC  TO WS-UIWA-OTH-COST-SC
SB0114        MOVE WS-HOLD-UIWA-OTH-PPU-SC   TO WS-UIWA-OTH-PPU-SC
SB0114        MOVE WS-HOLD-UIWA-OTH-SUB-PROD TO WS-UIWA-OTH-SUB-PROD
SB0114        MOVE WS-HOLD-UIWA-OTH-QTY      TO WS-UIWA-OTH-QTY
SB0114        MOVE WS-HOLD-UIWA-OTH-QTY-SC   TO WS-UIWA-OTH-QTY-SC
SB0114        MOVE WS-HOLD-UIWA-OTH-QTY-US   TO WS-UIWA-OTH-QTY-US
SB0114        IF COM-DIRECT-BILLING-FUEL = '1'
SB0114           MOVE WS-HOLD-UIWA-OTH-COST-SC TO WS-NON-BILLABLE
SB0114        ELSE
SB0114           MOVE WS-HOLD-UIWA-OTH-COST-SC TO WS-BILLABLE
SB0114        END-IF
SB0114        PERFORM 20306-PRODUCT-DISCOUNT
SB0114        COMPUTE WS-HOLD-UIWA-OTH-COST-SC = WS-UIWA-OTH-COST-SC
SB0214                         - FMDL-SC-RD-SC-SELECT-DISCOUNT
061815        IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
061815          ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
061815               TO WS-OTH-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
061815        END-IF
SB0114     END-IF
SB0114
SB0114     IF WS-HOLD-UIWA-OIL-COST-SC > ZERO
SB0114        PERFORM 20306-CLEAR-UIWA-FIELDS
SB0114        MOVE WS-HOLD-UIWA-OIL-COST-SC  TO WS-UIWA-OIL-COST-SC
SB0114        MOVE WS-HOLD-UIWA-OIL-QTY      TO WS-UIWA-OIL-QTY
SB0114        IF COM-DIRECT-BILLING-OIL = '1'
SB0114           MOVE WS-HOLD-UIWA-OIL-COST-SC TO WS-NON-BILLABLE
SB0114        ELSE
SB0114           MOVE WS-HOLD-UIWA-OIL-COST-SC TO WS-BILLABLE
SB0114        END-IF
SB0114        PERFORM 20306-PRODUCT-DISCOUNT
SB0114        COMPUTE WS-HOLD-UIWA-OIL-COST-SC = WS-UIWA-OIL-COST-SC
SB0214                         -  FMDL-SC-RD-SC-SELECT-DISCOUNT
061815        IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
061815          ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
061815               TO WS-OIL-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
061815        END-IF
SB0114     END-IF
SB0114
SB0114     IF WS-HOLD-UIWA-PR1-COST-SC > ZERO
SB0114        PERFORM 20306-CLEAR-UIWA-FIELDS
SB0114        MOVE WS-HOLD-UIWA-PR1-COST-SC  TO WS-UIWA-PR1-COST-SC
SB0114        PERFORM 20306-PRODUCT-DISCOUNT
SB0114        COMPUTE WS-HOLD-UIWA-PR1-COST-SC = WS-UIWA-PR1-COST-SC
SB0214                         -  FMDL-SC-RD-SC-SELECT-DISCOUNT
061815        IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
061815          ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
061815               TO WS-PR1-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
061815        END-IF
SB0114     END-IF
SB0114
SB0114     IF WS-HOLD-UIWA-PR2-COST-SC > ZERO
SB0114        PERFORM 20306-CLEAR-UIWA-FIELDS
SB0114        MOVE WS-HOLD-UIWA-PR2-COST-SC  TO WS-UIWA-PR2-COST-SC
SB0114        PERFORM 20306-PRODUCT-DISCOUNT
SB0114        COMPUTE WS-HOLD-UIWA-PR2-COST-SC = WS-UIWA-PR2-COST-SC
SB0214                         -  FMDL-SC-RD-SC-SELECT-DISCOUNT
061815        IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
061815          ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
061815               TO WS-PR2-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
061815        END-IF
SB0114     END-IF
SB0114
SB0114     IF WS-HOLD-UIWA-PR3-COST-SC > ZERO
SB0114        PERFORM 20306-CLEAR-UIWA-FIELDS
SB0114        MOVE WS-HOLD-UIWA-PR3-COST-SC  TO WS-UIWA-PR3-COST-SC
SB0114        PERFORM 20306-PRODUCT-DISCOUNT
SB0114        COMPUTE WS-HOLD-UIWA-PR3-COST-SC = WS-UIWA-PR3-COST-SC
SB0214                         -  FMDL-SC-RD-SC-SELECT-DISCOUNT
061815        IF FMDL-SC-RD-SC-SELECT-DISCOUNT > ZERO
061815          ADD FMDL-SC-RD-SC-SELECT-DISCOUNT
061815               TO WS-PR3-SELECT-DISCOUNT WS-TOT-SELECT-DISCOUNT
061815        END-IF
SB0114     END-IF
SB0114
SB0114     IF WS-HOLD-UIWA-NR1-COST-SC > ZERO
SB0114        MOVE WS-HOLD-UIWA-NR1-COST-SC TO WS-UIWA-NR1-COST-SC
SB0114     END-IF
SB0114     IF WS-HOLD-UIWA-NR2-COST-SC > ZERO
SB0114        MOVE WS-HOLD-UIWA-NR2-COST-SC TO WS-UIWA-NR2-COST-SC
SB0114     END-IF
SB0114     IF WS-HOLD-UIWA-REF-COST-SC > ZERO
SB0114        MOVE WS-HOLD-UIWA-REF-COST-SC TO WS-UIWA-REF-COST-SC
SB0114     END-IF
SB0114     IF WS-HOLD-UIWA-OTH-COST-SC > ZERO
SB0114        MOVE WS-HOLD-UIWA-OTH-COST-SC TO WS-UIWA-OTH-COST-SC
SB0114     END-IF
SB0114     IF WS-HOLD-UIWA-OIL-COST-SC > ZERO
SB0114        MOVE WS-HOLD-UIWA-OIL-COST-SC TO WS-UIWA-OIL-COST-SC
SB0114     END-IF
SB0114     IF WS-HOLD-UIWA-PR1-COST-SC > ZERO
SB0114        MOVE WS-HOLD-UIWA-PR1-COST-SC TO WS-UIWA-PR1-COST-SC
SB0114     END-IF
SB0114     IF WS-HOLD-UIWA-PR2-COST-SC > ZERO
SB0114        MOVE WS-HOLD-UIWA-PR2-COST-SC TO WS-UIWA-PR2-COST-SC
SB0114     END-IF
SB0114     IF WS-HOLD-UIWA-PR3-COST-SC > ZERO
SB0114        MOVE WS-HOLD-UIWA-PR3-COST-SC TO WS-UIWA-PR3-COST-SC
SB0114     END-IF
SB0114
SB0114     MOVE WS-HOLD-BILLABLE          TO WS-BILLABLE
SB0114     MOVE WS-HOLD-NON-BILLABLE      TO WS-NON-BILLABLE
SB0114
SB0114     MOVE 'C'                       TO CTLA-FUNCTION-CODE.
SB0114     MOVE SCM-LOCATION-STATE-2      TO CTLA-PROVINCE
SB0114
SB0114     IF FMDL-RK-TRANSACTION-DATE NUMERIC
SB0114     AND FMDL-RK-TRANSACTION-DATE > ZEROS
SB0114        MOVE FMDL-RK-TRANSACTION-DATE  TO CTLA-MQ-TRAN-DATE
SB0114     ELSE
SB0114        MOVE WS-BUSINESS-DATE-CYYMMDD  TO CTLA-MQ-TRAN-DATE
SB0114     END-IF
SB0114
SB0114     IF FMDL-TR-TRANSACTION-TIME NUMERIC
SB0114     AND FMDL-TR-TRANSACTION-TIME > ZEROS
SB0114        MOVE FMDL-TR-TRANSACTION-TIME  TO CTLA-MQ-TRAN-TIME
SB0114     ELSE
SB0114        MOVE EIBTIME                   TO CTLA-MQ-TRAN-TIME
SB0114     END-IF
SB0114
SB0114     MOVE FMDL-RK-CONTROL-NUMBER    TO CTLA-MQ-CONTROL-NBR
SB0114     MOVE WS-USER-INPUT-WORK-AREA   TO CTLA-USER-INPUT-WORK-AREA
SB0114
030114     MOVE ZEROES            TO CTLA-CAN-CONVERSION-RATE
030114     IF COM-US-COMP-CN-SC
030114        MOVE CAN-TO-US-RATE TO CTLA-CAN-CONVERSION-RATE
030114     END-IF.
SB0114
SB0114* IF US CUSTOMER CONVERT TO US CURRENCY
030114     IF (COM-ACCOUNT-CURR-TYPE NOT = 'M') AND
030114        (COM-US-COMP-CN-SC)
SB0114         MOVE 'Y' TO CTLA-CAN-CONVERSION-SW
SB0114     ELSE
SB0114         MOVE SPACE TO CTLA-CAN-CONVERSION-SW
SB0114     END-IF
SB0114
SB0114     PERFORM 20306-LINK-TO-TSFMO0CT.
SB0114
SB0114* RESTORE FMLOG RECORD
SB0114     MOVE WS-ORIG-FMLOG-AREA   TO FUEL-MANAGEMENT-DAILY-LOG-RECD.
SB0114
SB0114* MOVE THE USER-INPUT-WORK-AREA RETURNED FROM TSFMO0CT TO
SB0114* WS-USER-INPUT-WORK-AREA
SB0114     MOVE CTLA-USER-INPUT-WORK-AREA TO WS-USER-INPUT-WORK-AREA
SB0114
SB0114* SAVE OFF THE NEW TAX-AMT CALCULATED IN TSFMO0CT
SB0114     MOVE WS-UIWA-TAX-AMT      TO WS-HOLD-UIWA-TAX-AMT-SC
SB0114
SB0114* RESTORE THE ORGINAL UIWA AREA SAVED AT THE START OF THIS PROCESS
SB0114     MOVE WS-ORIG-UIWA-AREA    TO WS-USER-INPUT-WORK-AREA.
SB0114
SB0114* MOVE THE ORIGINAL TAX-AMT TO THE NEW FMLOG FIELD
SB0114     MOVE WS-ORIG-UIWA-TAX-AMT-SC  TO WS-UIWA-TAX-AMT-ORIG
SB0114
SB0114* UPDATE UIWA AREA WITH THE NEW TAX-AMT
SB0114     MOVE WS-HOLD-UIWA-TAX-AMT-SC TO WS-UIWA-TAX-AMT-SC
SB0114                                     FMDL-CN-TAX-AMT-CN
SB0114                                     FMDL-SC-TAX-AMT
030114                                     WS-UIWA-TAX-AMT
030114                                     WS-UIWA-TAX-AMT-US
030114                                     FMDL-CN-TAX-AMT-US
030114                                     FMDL-BC-TAX-AMT.
030114
030114*IF US CUSTOMER CONVERT TO US CURRENCY
030114     IF COM-ACCOUNT-CURR-TYPE NOT = 'M'
030114        IF COM-US-COMP-CN-SC
030114           MOVE WS-UIWA-TAX-AMT-SC TO WS-CANADIAN-DOLLARS
030114           PERFORM CAN-DOLLARS-TO-US
030614           MULTIPLY WS-US-DOLLARS BY +1
030614                    GIVING WS-UIWA-TAX-AMT ROUNDED,
030614                           WS-UIWA-TAX-AMT-US ROUNDED,
030614                           FMDL-CN-TAX-AMT-US ROUNDED,
030614                           FMDL-BC-TAX-AMT ROUNDED
030114        END-IF
SB0114     END-IF.
SB0114
SB0114*------------------------------
SB0114 20306-LINK-TO-TSFMO0CT.
SB0114*------------------------------
DR0422     MOVE '20306-LINK-TO-TSFMO0CT'    TO CXUTS0ML-PARAGRAPH.
SB0114     EXEC CICS LINK
SB0114          PROGRAM  ('TSFMO0CT')
SB0114          COMMAREA (CANADIAN-TAX-LINK-AREA)
SB0114          LENGTH   (LENGTH OF CANADIAN-TAX-LINK-AREA)
SB0114          RESP     (EIBRESP)
SB0114     END-EXEC
SB0114
SB0114     PERFORM CHECK-FOR-NORMAL-EIBRESP.

SB0114*------------------------------
SB0114 20306-CLEAR-UIWA-FIELDS.
SB0114*------------------------------
SB0114
SB0214     MOVE ZEROS                  TO FMDL-SC-RD-SC-SELECT-DISCOUNT
SB0114                                    WS-UIWA-NR2-PPU-SC
SB0114                                    WS-UIWA-NR1-PPU-SC
SB0114                                    WS-UIWA-REF-PPU-SC
SB0114                                    WS-UIWA-NR2-COST-SC
SB0114                                    WS-UIWA-NR1-COST-SC
SB0114                                    WS-UIWA-REF-COST-SC
SB0114                                    WS-UIWA-OTH-COST-SC
SB0114                                    WS-UIWA-OIL-COST-SC
SB0114                                    WS-UIWA-PR1-COST-SC
SB0114                                    WS-UIWA-PR2-COST-SC
SB0114                                    WS-UIWA-PR3-COST-SC
SB0114                                    WS-UIWA-NR2-QTY
SB0114                                    WS-UIWA-NR1-QTY
SB0114                                    WS-UIWA-REF-QTY
SB0114                                    WS-UIWA-OTH-QTY
SB0114                                    WS-UIWA-OIL-QTY
SB0114                                    WS-UIWA-NR2-QTY-SC
SB0114                                    WS-UIWA-NR1-QTY-SC
SB0114                                    WS-UIWA-REF-QTY-SC
SB0114                                    WS-UIWA-OTH-QTY-SC
SB0114                                    WS-UIWA-NR2-QTY-US
SB0114                                    WS-UIWA-NR1-QTY-US
SB0114                                    WS-UIWA-REF-QTY-US
SB0114                                    WS-UIWA-OTH-QTY-US
SB0114                                    WS-BILLABLE
SB0114                                    WS-NON-BILLABLE.

SB0114*------------------------------
SB0114 20306-PRODUCT-DISCOUNT.
SB0114*------------------------------
SB0114     MOVE 'B' TO FMCD-REQ-TYPE
SB0114     PERFORM BUILD-FMCD-COMMAREA
SB0114     PERFORM LINK-TO-TSFMO0CD.
SB0114
SB0114* ON RETURN
SB0114     MOVE FMCD-SC-MASTER-RECORD
SB0114       TO SERVICE-CENTER-MASTER-RECORD.
SB0114
SB0114     IF SCM-SELF-SERV-CASH-PRICE NOT NUMERIC
SB0114        MOVE ZERO TO SCM-SELF-SERV-CASH-PRICE
SB0114     END-IF.
SB0114
SB0114     MOVE FMCD-FMLOG-RECORD
SB0114       TO FUEL-MANAGEMENT-DAILY-LOG-RECD.
SB0114
SB0214     IF FMDL-SC-RD-SC-SELECT-DISCOUNT NOT NUMERIC
SB0114        MOVE ZERO TO FMDL-SC-SC-SELECT-DISCOUNT
SB0114     END-IF.
SB0114

      *------------------------------
       20307-CHECK-RMF.
      *------------------------------
      **** (IF NO FUEL WAS PURCHASED THEN IT CAN NOT BE RMF) ****
           COMPUTE WS-TOTAL-GALLONS = WS-UIWA-NR2-QTY +
                                      WS-UIWA-OTH-QTY +
                                      WS-UIWA-REF-QTY +
                                      WS-UIWA-NR1-QTY.
           IF WS-TOTAL-GALLONS = ZERO
              MOVE 'N' TO COM-RMF-FLAG.

      *-----------------------------
       20310-CHECK-COST-PLUS-USE.
      *-----------------------------
      **** (SAVE THE CURRENT RETAIL PPG FIELDS) ****
           MOVE WS-UIWA-NR2-PPU      TO WS-RETAIL-PPG-NR2.
           MOVE WS-UIWA-NR1-PPU      TO WS-RETAIL-PPG-NR1.
           MOVE WS-UIWA-REF-PPU      TO WS-RETAIL-PPG-TRAILER.

      **** (IF NO CAP COST PLUS RE-FIGURE THE PPG AND COST) ****
           IF COM-COST-PLUS-TYPE = 'U'
              PERFORM 20311-CHECK-COST-PLUS-USE-TR
              PERFORM 20312-CHECK-COST-PLUS-USE-RF
              PERFORM 20313-CHECK-COST-PLUS-USE-N1
           END-IF.

      *-----------------------------
       20311-CHECK-COST-PLUS-USE-TR.
      *-----------------------------
           IF WS-UIWA-NR2-PPU > ZEROES
              IF (COM-DIRECT-BILLING-IN-PROCESS AND
                  WS-UIWA-NR2-PPU < COM-NR2-COST-PLUS-PPG) OR
                 (THIS-BE-TERMINAL-FUEL)                   OR
                 (COM-RMF-FLAG = 'Y'   )
              MOVE 'Y' TO COM-COST-PLUS-TYPEU
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT -
                                            WS-UIWA-NR2-COST
              COMPUTE WS-UIWA-NR2-PPU  ROUNDED = COM-NR2-COST-PLUS-PPG
              COMPUTE WS-UIWA-NR2-COST ROUNDED = WS-UIWA-NR2-QTY *
                                            WS-UIWA-NR2-PPU
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
                                            WS-UIWA-NR2-COST.

      *-----------------------------
       20312-CHECK-COST-PLUS-USE-RF.
      *-----------------------------
           IF WS-UIWA-REF-PPU > ZEROES
              IF (COM-DIRECT-BILLING-IN-PROCESS AND
                  WS-UIWA-REF-PPU < COM-REF-COST-PLUS-PPG) OR
                 (THIS-BE-TERMINAL-FUEL)                   OR
                 (COM-RMF-FLAG = 'Y'   )
              MOVE 'Y' TO COM-COST-PLUS-TYPEU
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT -
                                            WS-UIWA-REF-COST
              COMPUTE WS-UIWA-REF-PPU  ROUNDED = COM-REF-COST-PLUS-PPG
              COMPUTE WS-UIWA-REF-COST ROUNDED = WS-UIWA-REF-QTY *
                                                 WS-UIWA-REF-PPU
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
                                            WS-UIWA-REF-COST.

      *-----------------------------
       20313-CHECK-COST-PLUS-USE-N1.
      *-----------------------------
           IF WS-UIWA-NR1-PPU > ZEROES
              IF (COM-DIRECT-BILLING-IN-PROCESS AND
                  WS-UIWA-NR1-PPU < COM-NR1-COST-PLUS-PPG) OR
                 (THIS-BE-TERMINAL-FUEL)                   OR
                 (COM-RMF-FLAG = 'Y'   )
              MOVE 'Y' TO COM-COST-PLUS-TYPEU
              COMPUTE WS-UIWA-INVOICE-AMT  = WS-UIWA-INVOICE-AMT -
                                             WS-UIWA-NR1-COST
              COMPUTE WS-UIWA-NR1-PPU  ROUNDED = COM-NR1-COST-PLUS-PPG
              COMPUTE WS-UIWA-NR1-COST ROUNDED = WS-UIWA-NR1-QTY *
                                                 WS-UIWA-NR1-PPU
              COMPUTE WS-UIWA-INVOICE-AMT  = WS-UIWA-INVOICE-AMT +
                                             WS-UIWA-NR1-COST.

      *-----------------------------
JS0501 20315-CHECK-PAC-PRIDE.
      *-----------------------------
           MOVE 'N' TO COM-PAC-PRIDE-FLAG
           IF SCM-PAC-PRIDE-FLAG = 'Y'
              MOVE 'Y' TO COM-PAC-PRIDE-FLAG
              PERFORM 20315-CPP-GET-COMPANY-MARKUP
              PERFORM 20315-CPP-RECOMPUTE-TRACTOR
              PERFORM 20315-CPP-RECOMPUTE-NR1
              PERFORM 20315-CPP-RECOMPUTE-OTHER
              PERFORM 20315-CPP-RECOMPUTE-TRAILER

              MOVE 'Y'                   TO CDN-FOCUS-DISCOUNT-FLAG
                                            SCM-FOCUS-DISCOUNT-FLAG
              INITIALIZE               RMR-FOCUS-REBATE-INFO
MN0606        INITIALIZE               RMR-FOCUS-REBATE-INFO-ADDL
              MOVE 'Y'                   TO RMR-FOCUS-DISCOUNT-TYPE
              COMPUTE RMR-FOCUS-CPG-TOTAL-DISC = WS-PPRIDE-MARKUP-SC *
                                                 100
              COMPUTE RMR-FOCUS-CPG-RETAINED   = WS-PPRIDE-MARKUP-SC *
                                                 100
              MOVE 'SC'                  TO RMR-FOCUS-CPG-USE-FLAG
              MOVE RMR-FOCUS-REBATE-INFO TO FMRX-DISCOUNT-INFO
MN0606        MOVE RMR-FOCUS-REBATE-INFO-ADDL
                                         TO FMRX-FOCUS-REBATE-INFO-ADDL
              PERFORM 71110-CHECK-FOCUS-DISCOUNT
           END-IF.

      *-----------------------------
JS0501 20315-CPP-RECOMPUTE-TRACTOR.
      *-----------------------------
      *** RECOMPUTE PRICE FOR TRACTOR FUEL ***
           IF WS-UIWA-NR2-COST > ZEROES
              IF WS-PPRIDE-TRANSFER-PPG = ZEROES
                 MOVE WS-UIWA-NR2-PPU       TO WS-PPRIDE-TRANSFER-PPG
              END-IF
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT -
                                            WS-UIWA-NR2-COST
              COMPUTE WS-UIWA-NR2-PPU = WS-UIWA-NR2-PPU +
                                            SCPM-PP-PAC-MARKUP  +
                                            WS-PPRIDE-MARKUP-SC

              COMPUTE WS-UIWA-NR2-COST ROUNDED = WS-UIWA-NR2-QTY *
                                                 WS-UIWA-NR2-PPU
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
                                            WS-UIWA-NR2-COST.

      *-----------------------------
JS0501 20315-CPP-RECOMPUTE-OTHER.
      *-----------------------------
      *** RECOMPUTE PRICE FOR TRACTOR FUEL ***
           IF WS-UIWA-OTH-COST > ZEROES
              IF WS-PPRIDE-TRANSFER-PPG = ZEROES
                 MOVE WS-UIWA-NR2-PPU       TO WS-PPRIDE-TRANSFER-PPG
              END-IF
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT -
                                            WS-UIWA-OTH-COST
              COMPUTE WS-UIWA-OTH-PPU  = WS-UIWA-OTH-PPU +
                                         SCPM-PP-PAC-MARKUP  +
                                         WS-PPRIDE-MARKUP-SC

              COMPUTE WS-UIWA-OTH-COST ROUNDED = WS-UIWA-OTH-QTY *
                                                 WS-UIWA-OTH-PPU
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
                                            WS-UIWA-OTH-COST.

      *-----------------------------
JS0501 20315-CPP-RECOMPUTE-TRAILER.
      *-----------------------------
      *** RECOMPUTE PRICE FOR TRAILER FUEL ***
           IF WS-UIWA-REF-COST > ZEROES
              IF WS-PPRIDE-TRANSFER-PPG = ZEROES
                 MOVE WS-UIWA-NR2-PPU       TO WS-PPRIDE-TRANSFER-PPG
              END-IF
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT -
                                            WS-UIWA-REF-COST
              COMPUTE WS-UIWA-REF-PPU  = WS-UIWA-REF-PPU +
                                         SCPM-PP-PAC-MARKUP  +
                                         WS-PPRIDE-MARKUP-SC

              COMPUTE WS-UIWA-REF-COST ROUNDED = WS-UIWA-REF-QTY *
                                                 WS-UIWA-REF-PPU
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
                                            WS-UIWA-REF-COST.

      *-----------------------------
JS0501 20315-CPP-RECOMPUTE-NR1.
      *-----------------------------
      *** RECOMPUTE PRICE FOR NR1 TRACTOR FUEL ***
           IF WS-UIWA-NR1-COST > ZEROES
              IF WS-PPRIDE-TRANSFER-PPG = ZEROES
                 MOVE WS-UIWA-NR2-PPU       TO WS-PPRIDE-TRANSFER-PPG
              END-IF
              COMPUTE WS-UIWA-INVOICE-AMT  = WS-UIWA-INVOICE-AMT -
                                             WS-UIWA-NR1-COST
              COMPUTE WS-UIWA-NR1-PPU      = WS-UIWA-NR1-PPU +
                                             SCPM-PP-PAC-MARKUP  +
                                             WS-PPRIDE-MARKUP-SC
              COMPUTE WS-UIWA-NR1-COST ROUNDED = WS-UIWA-NR1-QTY *
                                                 WS-UIWA-NR1-PPU
              COMPUTE WS-UIWA-INVOICE-AMT = WS-UIWA-INVOICE-AMT +
                                            WS-UIWA-NR1-COST.

      *-----------------------------
JS0501 20315-CPP-GET-COMPANY-MARKUP.
      *-----------------------------
      *** CHECK TO SEE IF COMPANY OVERRIDES DEFAULT RATES ***
      *** IF NOT USE RATES FROM SCSTATE (SC10)            ***
           IF CDN-PPRIDE-ORIDE = 'Y'
              MOVE CDN-PPRIDE-ORIDE-MARKUP TO WS-PPRIDE-MARKUP-SC
           ELSE
              MOVE SCPM-PP-CDN-MARKUP-US   TO WS-PPRIDE-MARKUP-SC
           END-IF.

      *-----------------------------
       20320-CHECK-CASH-AMT-9999.
      *-----------------------------
      **** (DO NOT ALLOW MORE THAN 999.99 IN CASH TO BE ENTERED  ) ****
      **** (CHECK THIS FIELD BEFORE IT IS CONVERTED              ) ****
           IF WS-UIWA-CASH-AMT > +999.99
              MOVE '*'                          TO ERROR-FLAG
              MOVE EXCESSIVE-ADVANCE-REQUEST1   TO OUT-COMENT
              MOVE EXCESSIVE-ADVANCE-REQUEST-N  TO POS-ERROR-NUMBER
              MOVE -1                           TO ADVAMTL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20330-ADJUST-AMTS-REBLD-SCN.
      *-----------------------------
      **** (ADJUST THE INPUT FIELDS DEPENDING ON THE COUNTRY) ****
      **** (INP  FIELDS CONTAIN THE COMPANY BASE CURRENCY   ) ****
      **** (INP2 FIELDS CONTAIN THE SERVICE CENTER CURRENCY ) ****
      **** (INP3 FIELDS CONTAIN THE US AMOUNT               ) ****
           IF COM-US-COMP-US-SC OR COM-CN-COMP-CN-SC
              PERFORM CONVERT-FOR-NO-ACCOUNT.
           IF COM-US-COMP-CN-SC
              PERFORM CONVERT-FOR-US-ACCOUNT.
           IF COM-CN-COMP-US-SC
              PERFORM CONVERT-FOR-CN-ACCOUNT.

      **** (BUILD THE INP3 FIELDS) ****
           PERFORM CONVERT-FOR-US-AMOUNTS.

      **** (MOVE FORMATTED INFORMATION BACK OUT TO SCREEN        ) ****
      **** (UNLESS THE PPG AND COST HAS BEEN ALTERED BY COST PLUS) ****
      **** ( OR CANADIAN TRANSACTION                             ) ****
           IF COM-COST-PLUS-PRICE-ALTERED OR
              WS-TAX-COMPUTED-FLAG = 'Y'  OR
              COM-PAC-PRIDE-FLAG   = 'Y'
              NEXT SENTENCE
           ELSE
              PERFORM DISPLAY-MAP-DATA.

      *-----------------------------
       20340-CHECK-FOR-MNX-XTN.
      *-----------------------------
           IF MNX-TRANSACTION-FLAG = SPACE
              PERFORM 10500-CHECK-FOR-MNX-XTN
           END-IF.

      *-----------------------------
       20350-CALC-COST-FOR-TERM-FUEL.
      *-----------------------------
      **** (PLUG AVERAGE PRICE PER GALLON ON TERMINAL FUEL WHEN) ****
      **** (SUCH IS NOT SUPPLIED                               ) ****
           IF THIS-BE-TERMINAL-FUEL
              PERFORM 20351-CALC-COST-FOR-TF-TR
              PERFORM 20352-CALC-COST-FOR-TF-OT
              PERFORM 20353-CALC-COST-FOR-TF-N1
           END-IF.

      *-----------------------------
       20351-CALC-COST-FOR-TF-TR.
      *-----------------------------
CP0807** CHANGED VARIABLES FOR FPMASTR REPLACMENT **
           IF (WS-UIWA-NR2-QTY > ZEROES) AND
              (WS-UIWA-NR2-PPU = 0 OR WS-UIWA-NR2-COST = 0)
CP0807        ADD UNITMST-PTD-NR-GALS,
CP0807            UNITMST-CURR-DAY-NR-GALS,
CP0807            UNITMST-PREV-DAY-NR-GALS   GIVING WS-YTD-GALLONS
CP0807        ADD UNITMST-CURR-DAY-REQ-AMT,  UNITMST-PTD-TOTAL-REQ-AMT,
CP0807            UNITMST-PREV-DAY-REQ-AMT   GIVING WS-YTD-FUEL-TOTAL
              IF WS-YTD-GALLONS NOT = ZEROES
                 DIVIDE WS-YTD-FUEL-TOTAL BY WS-YTD-GALLONS
                    GIVING WS-UIWA-NR2-PPU ROUNDED
                 MULTIPLY WS-UIWA-NR2-PPU BY WS-UIWA-NR2-QTY
                    GIVING WS-UIWA-NR2-COST ROUNDED
              ELSE
                 MOVE 1 TO WS-UIWA-NR2-PPU
                 MOVE WS-UIWA-NR2-QTY TO WS-UIWA-NR2-COST.


      *-----------------------------
       20352-CALC-COST-FOR-TF-OT.
      *-----------------------------
CP0807** CHANGED VARIABLES FOR FPMASTR REPLACMENT **
           IF (WS-UIWA-OTH-QTY > ZEROES) AND
              (WS-UIWA-OTH-PPU = ZERO OR WS-UIWA-OTH-COST = ZERO)
CP0807        ADD UNITMST-PTD-NR-GALS,
CP0807            UNITMST-CURR-DAY-NR-GALS,
CP0807            UNITMST-PREV-DAY-NR-GALS    GIVING WS-YTD-GALLONS
CP0807        ADD UNITMST-CURR-DAY-REQ-AMT,  UNITMST-PTD-TOTAL-REQ-AMT,
CP0807            UNITMST-PREV-DAY-REQ-AMT    GIVING WS-YTD-FUEL-TOTAL
              IF WS-YTD-GALLONS IS NOT EQUAL TO 0
                 DIVIDE WS-YTD-FUEL-TOTAL BY WS-YTD-GALLONS
                   GIVING WS-UIWA-OTH-PPU ROUNDED
                 MULTIPLY WS-UIWA-OTH-PPU BY WS-UIWA-OTH-QTY
                   GIVING WS-UIWA-OTH-COST ROUNDED
              ELSE
                 MOVE 1 TO WS-UIWA-OTH-PPU
                 MOVE WS-UIWA-OTH-QTY TO WS-UIWA-OTH-COST.

      *-----------------------------
       20353-CALC-COST-FOR-TF-N1.
      *-----------------------------
           IF (WS-UIWA-NR1-QTY > ZEROES) AND
              (WS-UIWA-NR1-PPU = ZERO OR WS-UIWA-NR1-COST = ZERO)

CP0807** CHANGED VARIABLES FOR FPMASTR REPLACEMENT **
CP0807        ADD UNITMST-PTD-NR-GALS,
CP0807            UNITMST-CURR-DAY-NR-GALS,
CP0807            UNITMST-PREV-DAY-NR-GALS GIVING WS-YTD-GALLONS
CP0807        ADD UNITMST-CURR-DAY-REQ-AMT,  UNITMST-PTD-TOTAL-REQ-AMT,
CP0807            UNITMST-PREV-DAY-REQ-AMT GIVING WS-YTD-FUEL-TOTAL

              IF WS-YTD-GALLONS IS NOT EQUAL TO 0
                 DIVIDE WS-YTD-FUEL-TOTAL BY WS-YTD-GALLONS
                    GIVING WS-UIWA-NR1-PPU ROUNDED
                 MULTIPLY WS-UIWA-NR1-PPU BY WS-UIWA-NR1-QTY
                    GIVING WS-UIWA-NR1-COST ROUNDED
              ELSE
                 MOVE 1 TO WS-UIWA-NR1-PPU
                 MOVE WS-UIWA-NR1-QTY TO WS-UIWA-NR1-COST.

      *-----------------------------
       20360-CHECK-INVOICE-NR.
      *-----------------------------
           IF THIS-BE-AN-UNATTENDED-XTN AND
              WS-UIWA-INVOICE-NR NOT > SPACES
              MOVE 'AGINVOICE'    TO WS-UIWA-INVOICE-NR
              IF COM-COMDATA-COMPLETE-FLAG = 'Y'
                 MOVE PD-DD       TO WS-INVOICE-DD
                 MOVE EIBTIME     TO WS-INVOICE-TIME
                 MOVE WS-INVOICE  TO WS-UIWA-INVOICE-NR.

           IF THIS-BE-TERMINAL-FUEL AND
              THIS-BE-A-PC-REQUEST  AND
              WS-UIWA-INVOICE-NR NOT > SPACES
              MOVE 'TFINVOICE' TO WS-UIWA-INVOICE-NR.

           IF WS-UIWA-INVOICE-NR NOT > SPACES
              MOVE INVOICE-NR-REQUIRED TO OUT-COMENT
              MOVE INVOICE-NR-REQUIRED-N TO POS-ERROR-NUMBER
              MOVE -1 TO FPINVNRL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20370-CHECK-INVOICE-NR-FOR-CC.
      *-----------------------------
           IF (COM-COMDATA-COMPLETE-FLAG = 'Y')
               MOVE 8 TO FIELD-LENGTH
CP1011         CALL 'CXUTSSPR' USING FIELD-LENGTH,
CP1011                               WS-UIWA-INVOICE-NR,
CP1011                               FILL-CHAR
               INSPECT WS-UIWA-INVOICE-NR REPLACING LEADING ' ' BY '0'
               IF WS-UIWA-INVOICE-NR NOT NUMERIC OR
                  WS-UIWA-INVOICE-NR = '00000000'
                  MOVE INVOICE-NR-INVALID TO OUT-COMENT
                  MOVE INVOICE-NR-INVALID-N TO POS-ERROR-NUMBER
                  MOVE -1 TO FPINVNRL
                  PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           IF (COM-COMDATA-COMPLETE-FLAG = 'Y') AND
JS1199        (CSR-VERIFY-UNIT = 'N')           AND
              (NOT THIS-BE-A-PC-REQUEST)
              IF PRM-LAST-FP-INV-NR = WS-UIWA-INVOICE-NR
CP0807           MOVE UNITMST-LAST-XTN-NR    TO CC-INVOICE-NR-CTL
                 MOVE CC-INVOICE-NR-INVALID TO OUT-COMENT
                 MOVE CC-INVOICE-NR-INVALID-N TO POS-ERROR-NUMBER
                 MOVE -1 TO FPINVNRL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20380-CHECK-DRAFT-NR.
      *-----------------------------
           IF WS-UIWA-CHECK-NR1 NUMERIC AND
              WS-UIWA-CHECK-NR1 = ZEROES
              MOVE SPACES TO WS-UIWA-CHECK-NRX.
           IF WS-UIWA-CHECK-NRX > SPACES
              PERFORM VALIDATE-CHECK-NR
              MOVE 1ST-10-BYTES-N TO WS-HOLD-CHECK-NR
                                     WS-UIWA-CHECK-NR1
                                     WS-UIWA-CHECK-NR2.

      *-----------------------------
       20390-SET-FUEL-FLAG.
      *-----------------------------
           IF WS-UIWA-NR2-QTY      > ZEROES OR
              WS-UIWA-NR2-PPU      > ZEROES OR
              WS-UIWA-NR2-COST     > ZEROES OR
              WS-UIWA-OTH-QTY      > ZEROES OR
              WS-UIWA-OTH-PPU      > ZEROES OR
              WS-UIWA-OTH-COST     > ZEROES OR
              WS-UIWA-NR1-QTY      > ZEROES OR
              WS-UIWA-NR1-PPU      > ZEROES OR
              WS-UIWA-NR1-COST     > ZEROES
              MOVE 1 TO TRACTOR-PURCHASE.

      *-----------------------------
       20400-CHECK-OTHER-FUEL-BLOCK.
      *-----------------------------
           IF WS-UIWA-OTH-QTY     > ZERO   OR
              WS-UIWA-OTH-PPU > ZEROES OR
              WS-UIWA-OTH-COST    > ZEROES
              IF CDN-BLENDED-FUEL-BLOCK = 'Y'
                 MOVE OTHER-FUEL-NOT-ALLOWED TO ERROR-TYPE
                 MOVE OTHER-FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE ERROR-TYPE TO OUT-COMENT
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20410-CHECK-NR1-FUEL-BLOCK.
      *-----------------------------
           IF WS-UIWA-NR1-QTY      > ZEROES OR
              WS-UIWA-NR1-PPU      > ZEROES OR
              WS-UIWA-NR1-COST     > ZEROES
              IF CDN-NR-1-FLAG-IS-BLOCKED
                 MOVE NR1-FUEL-NOT-ALLOWED TO ERROR-TYPE
                 MOVE NR1-FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE ERROR-TYPE TO OUT-COMENT
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20420-CHECK-REEFER-FUEL-BLOCK.
      *-----------------------------
           IF WS-UIWA-REF-QTY     > ZEROES OR
              WS-UIWA-REF-PPU > ZEROES OR
              WS-UIWA-REF-COST    > ZEROES
              MOVE 1 TO TRAILER-PURCHASE
CP0807        IF REFER-IS-BLOCKED
                 MOVE NO-REFER-PURC TO ERROR-TYPE
                 MOVE NO-REFER-PURC-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE ERROR-TYPE TO OUT-COMENT
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
040606 20425-CHECK-NR2-FUEL-BLOCK.
      *-----------------------------
           IF CDN-NR-2-FLAG-IS-BLOCKED
              IF WS-UIWA-NR2-QTY      > ZEROES OR
                 WS-UIWA-NR2-PPU      > ZEROES OR
                 WS-UIWA-NR2-COST     > ZEROES
                 MOVE NR2-FUEL-NOT-ALLOWED   TO ERROR-TYPE
                 MOVE NR2-FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*'                    TO ERROR-FLAG
                 MOVE ERROR-TYPE             TO OUT-COMENT
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20430-SET-OIL-FLAG.
      *-----------------------------
           IF (WS-UIWA-OIL-QTY > 0 AND WS-UIWA-OIL-COST = 0) OR
              (WS-UIWA-OIL-QTY = 0 AND WS-UIWA-OIL-COST > 0)
                 MOVE ZERO-OR-NEG   TO ERROR-TYPE
                 MOVE ZERO-OR-NEG-N TO POS-ERROR-NUMBER
                 MOVE '*'           TO ERROR-FLAG
                 MOVE ERROR-TYPE    TO OUT-COMENT
                 MOVE -1            TO OILQTSL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
           IF WS-UIWA-OIL-QTY > ZEROES
              MOVE 1 TO OIL-PURCHASE.

      *-----------------------------
       20440-CHECK-OIL-LIMITS.
      *-----------------------------
           IF OIL-PURCHASE = 1 AND
CP1098        CSR-OIL-FLAG = 'Y'
              PERFORM PREMIER-CARD-OIL-LIMIT
              IF PRM-OIL-INITIAL-QUARTS  < WS-UIWA-OIL-QTY OR
                 PRM-OIL-INITIAL-DOLLARS < WS-UIWA-OIL-COST
                 PERFORM 20441-OIL-LIMITS-EXCEEDED.

      *-----------------------------
       20441-OIL-LIMITS-EXCEEDED.
      *-----------------------------
           MOVE '*'                    TO ERROR-FLAG
           MOVE -1                     TO OILQTSL
           IF LIMITS-ALTERED-FOR-PO = 'Y'
              MOVE PO-LIMIT-EXCEEDED   TO OUT-COMENT
              MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
           END-IF
           MOVE OIL-EXCEEDS-MAX-N TO POS-ERROR-NUMBER
           EVALUATE TRUE
              WHEN COM-US-COMP-US-SC
                 MOVE 'QUARTS'                TO OIL-EXCEEDS-MAX-QTY-MSG
                 MOVE PRM-OIL-INITIAL-QUARTS  TO OIL-EXCEEDS-MAX-QTY
                 MOVE PRM-OIL-INITIAL-DOLLARS TO OIL-EXCEEDS-MAX-DOL
                 MOVE OIL-EXCEEDS-MAX         TO OUT-COMENT
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              WHEN COM-CN-COMP-US-SC
                 MOVE ' QUARTS'               TO OIL-EXCEEDS-MAX-QTY-MSG
                 MOVE PRM-OIL-INITIAL-QUARTS  TO WS-LITERS
                 PERFORM LITERS-TO-QTS
                 MOVE WS-QTS                  TO OIL-EXCEEDS-MAX-QTY
                 MOVE PRM-OIL-INITIAL-DOLLARS TO WS-CANADIAN-DOLLARS
                 PERFORM CAN-DOLLARS-TO-US
                 MOVE WS-US-DOLLARS           TO OIL-EXCEEDS-MAX-DOL
                 MOVE OIL-EXCEEDS-MAX         TO OUT-COMENT
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              WHEN COM-CN-COMP-CN-SC
                 MOVE 'LITERS'                TO OIL-EXCEEDS-MAX-QTY-MSG
                 MOVE PRM-OIL-INITIAL-QUARTS  TO OIL-EXCEEDS-MAX-QTY
                 MOVE PRM-OIL-INITIAL-DOLLARS TO OIL-EXCEEDS-MAX-DOL
                 MOVE OIL-EXCEEDS-MAX         TO OUT-COMENT
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              WHEN COM-US-COMP-CN-SC
                 MOVE ' LITERS'               TO OIL-EXCEEDS-MAX-QTY-MSG
                 MOVE PRM-OIL-INITIAL-QUARTS  TO WS-QTS
                 PERFORM QTS-TO-LITERS
                 MOVE WS-LITERS               TO OIL-EXCEEDS-MAX-QTY
                 MOVE PRM-OIL-INITIAL-DOLLARS TO WS-US-DOLLARS
                 PERFORM US-DOLLARS-TO-CAN
                 MOVE WS-CANADIAN-DOLLARS     TO OIL-EXCEEDS-MAX-DOL
                 MOVE OIL-EXCEEDS-MAX         TO OUT-COMENT
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
           END-EVALUATE.

      *-----------------------------
       20445-CHECK-OIL-XTN-LIMIT.
      *-----------------------------
           IF OIL-PURCHASE = 1
CP0807        IF WS-FL-MAX-OIL-QTS  < WS-UIWA-OIL-QTY
                 MOVE '*'                    TO ERROR-FLAG
                 MOVE -1                     TO OILQTSL
CP0807           MOVE WS-FL-MAX-OIL-QTS      TO XCS-OIL-REQ
                 MOVE EXCESSIVE-OIL-REQUEST  TO ERROR-TYPE
                 IF LIMITS-ALTERED-FOR-PO = 'Y'
                    MOVE PO-LIMIT-EXCEEDED   TO OUT-COMENT
                    MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 END-IF
                 MOVE EXCESSIVE-OIL-REQUEST-N TO POS-ERROR-NUMBER
                 EVALUATE TRUE
                    WHEN COM-US-COMP-US-SC
                       MOVE 'QUARTS'  TO XCS-OIL-REQ-MSG
CP0807                 MOVE WS-FL-MAX-OIL-QTS     TO XCS-OIL-REQ
                       MOVE EXCESSIVE-OIL-REQUEST TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                    WHEN COM-CN-COMP-US-SC
                       MOVE 'QUARTS'  TO XCS-OIL-REQ-MSG
CP0807                 MOVE WS-FL-MAX-OIL-QTS     TO WS-LITERS
                       PERFORM LITERS-TO-QTS
                       MOVE WS-QTS         TO XCS-OIL-REQ
                       MOVE EXCESSIVE-OIL-REQUEST TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                    WHEN COM-CN-COMP-CN-SC
                       MOVE 'LITERS'  TO XCS-OIL-REQ-MSG
CP0807                 MOVE WS-FL-MAX-OIL-QTS     TO XCS-OIL-REQ
                       MOVE EXCESSIVE-OIL-REQUEST TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                    WHEN COM-US-COMP-CN-SC
                       MOVE 'LITERS'  TO XCS-OIL-REQ-MSG
CP0807                 MOVE WS-FL-MAX-OIL-QTS     TO WS-QTS
                       PERFORM QTS-TO-LITERS
                       MOVE WS-LITERS      TO XCS-OIL-REQ
                       MOVE EXCESSIVE-OIL-REQUEST TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 END-EVALUATE.

      *-----------------------------
       20450-CHECK-OIL-COST-LIMIT.
      *-----------------------------
           IF OIL-PURCHASE = 1
              IF WS-UIWA-OIL-COST > 99.99
                 MOVE OIL-AMOUNT-TOO-LARGE   TO ERROR-TYPE
                 MOVE OIL-AMOUNT-TOO-LARGE-N TO POS-ERROR-NUMBER
                 MOVE '*'                    TO ERROR-FLAG
                 MOVE ERROR-TYPE             TO OUT-COMENT
                 MOVE -1                     TO OILCSTL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20460-CHECK-MAX-FUEL-GALLONS.
      *-----------------------------
      **** (DRIVER MAY ONLY PURCHASE UP TO XXX GALLONS OF FUEL) ****
           COMPUTE WS-GALLONS = WS-UIWA-NR2-QTY-SC  +
MB1013                          WS-UIWA-NR1-QTY-SC.

SB0814     IF COM-MAXIMUM-GALLONS < WS-GALLONS
              IF (WS-UIWA-PO-NR > SPACES OR COM-CARD-OFFNET-USED = 'Y')
                    AND
                 CDN-PO-OVERRIDE-MAX-GALLONS = 'Y'
                 CONTINUE
              ELSE
                 MOVE MAXIMUM-GALLON-MESSAGE-N  TO POS-ERROR-NUMBER
                 MOVE COM-MAXIMUM-GALLONS       TO MAXIMUM-GALLON-NR
                 MOVE '*'                       TO ERROR-FLAG
                 MOVE -1                        TO FPGLNSL
                 MOVE ' GALLONS'                TO MAXIMUM-GALLON-MSG
                 IF COM-SC-IS-CANADIAN
                    MOVE ' LITERS'              TO MAXIMUM-GALLON-MSG
                 END-IF
                 MOVE MAXIMUM-GALLON-MESSAGE    TO OUT-COMENT
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

MB1013*-----------------------------
MB1013 20461-CHECK-MAX-RFR-GALLONS.
MB1013*-----------------------------
SB0814     IF COM-MAX-RFR-GALLONS < WS-UIWA-REF-QTY-SC
MB1013        MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
MB1013        MOVE COM-MAX-RFR-GALLONS      TO MAXIMUM-GALLON-NR
MB1013        MOVE '*'                      TO ERROR-FLAG
MB1013        MOVE -1                       TO TRGLNL
MB1013        IF COM-SC-IS-CANADIAN
MB1013           MOVE '  LITERS OF'         TO MAXIMUM-GALLON-MSG
MB1013        ELSE
MB1013           MOVE ' GALLONS OF'         TO MAXIMUM-GALLON-MSG
MB1013        END-IF
MB1013        MOVE MAXIMUM-GALLON-MESSAGE   TO OUT-COMENT
MB1013        PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
MB1013     END-IF.

MB1013*-----------------------------
MB1013 20462-CHECK-MAX-OTH-GALLONS.
MB1013*-----------------------------
SB0814     IF COM-MAX-OTH-GALLONS < WS-UIWA-OTH-QTY-SC
MB1013        MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
MB1013        MOVE COM-MAX-OTH-GALLONS      TO MAXIMUM-GALLON-NR
MB1013        MOVE '*'                      TO ERROR-FLAG
MB1013        MOVE -1                       TO FPGLNSBL
MB1013        IF COM-SC-IS-CANADIAN
MB1013           MOVE '  LITERS OF'         TO MAXIMUM-GALLON-MSG
MB1013        ELSE
MB1013           MOVE ' GALLONS OF'         TO MAXIMUM-GALLON-MSG
MB1013        END-IF
MB1013        MOVE MAXIMUM-GALLON-MESSAGE   TO OUT-COMENT
MB1013        PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
MB1013     END-IF.

      *-----------------------------
       20470-CHECK-FUEL-CONVERSION.
      *-----------------------------
      **** (IF CANADIAN COMPANY @ US LOCATION LIMIT GALLONS TO 263) ****
      **** (WE DO THIS BECAUSE WHEN CONVERTED TO LITERS IT'S > 999) ****
           IF COM-CN-COMP-US-SC
              IF WS-UIWA-NR2-QTY-SC + WS-UIWA-NR1-QTY-SC > 263
                 MOVE MAXIMUM-GALLON-MESSAGE2  TO OUT-COMENT
                 MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE -1  TO FPGLNSL
                 PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.
           IF COM-CN-COMP-US-SC
              IF WS-UIWA-OTH-QTY-SC > 263
                 MOVE MAXIMUM-GALLON-MESSAGE2  TO OUT-COMENT
                 MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE -1  TO FPGLNSBL
                 PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.
           IF COM-CN-COMP-US-SC
              IF WS-UIWA-REF-QTY-SC > 263
                 MOVE MAXIMUM-GALLON-MESSAGE2  TO OUT-COMENT
                 MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE -1  TO TRGLNL
                 PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.

      *-----------------------------
       20480-CHECK-OIL-WITH-FUEL-LIM.
      *-----------------------------
      **** (DRIVER MUST PURCHASE X GALLONS OF FUEL TO GET OIL) ****
           COMPUTE WS-GALLONS = WS-UIWA-NR2-QTY    +
                                WS-UIWA-OTH-QTY    +
                                WS-UIWA-NR1-QTY    +
                                WS-UIWA-REF-QTY.
           IF (OIL-PURCHASE = 1) AND
              (CDN-MIN-GAS-FOR-OIL > WS-GALLONS)
              MOVE MINIMUM-GALLON-MESSAGE2-N TO POS-ERROR-NUMBER
              MOVE '*' TO ERROR-FLAG
              MOVE -1 TO OILCSTL
              EVALUATE TRUE
                 WHEN COM-US-COMP-US-SC
                    MOVE ' GALLONS'          TO MINIMUM-GALLON-MSG2
                    MOVE CDN-MIN-GAS-FOR-OIL TO MINIMUM-GALLON-NR2
                    MOVE MINIMUM-GALLON-MESSAGE2   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 WHEN COM-CN-COMP-US-SC
                    MOVE ' GALLONS'          TO MINIMUM-GALLON-MSG2
                    MOVE CDN-MIN-GAS-FOR-OIL TO WS-LITERS
                    PERFORM LITERS-TO-GALLONS
                    MOVE WS-GALLONS          TO MINIMUM-GALLON-NR2
                    MOVE MINIMUM-GALLON-MESSAGE2   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 WHEN COM-CN-COMP-CN-SC
                    MOVE ' LITERS '          TO MINIMUM-GALLON-MSG2
                    MOVE CDN-MIN-GAS-FOR-OIL TO MINIMUM-GALLON-NR2
                    MOVE MINIMUM-GALLON-MESSAGE2   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 WHEN COM-US-COMP-CN-SC
                    MOVE ' LITERS '          TO MINIMUM-GALLON-MSG2
                    MOVE CDN-MIN-GAS-FOR-OIL TO WS-GALLONS
                    PERFORM GALLONS-TO-LITERS
                    MOVE WS-LITERS           TO MINIMUM-GALLON-NR2
                    MOVE MINIMUM-GALLON-MESSAGE2   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-EVALUATE.

      *-----------------------------
       20490-CHECK-FUEL-GALLON-LIM.
      *-----------------------------
      **** (SEE IF DRIVER HAS EXCEEDED GALLON LIMIT ON CARD) ****
           COMPUTE WS-GALLONS = WS-UIWA-NR2-QTY    +
                                WS-UIWA-NR1-QTY +
                                PRM-DIESEL-USED.

CP1098     IF CSR-DIESEL-LIMIT-FLAG = 'Y'
061615        IF WS-UIWA-NR2-QTY > +0  OR
061615           WS-UIWA-NR1-QTY > +0
                 IF PRM-DIESEL-LIMIT < WS-GALLONS
                    MOVE '*' TO ERROR-FLAG
                    MOVE -1  TO FPGLNSL
                    MOVE ' DIESEL ' TO MAXIMUM-GALLON-MSG3T
                    MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
                    EVALUATE TRUE
                     WHEN COM-US-COMP-US-SC
                       MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
                       COMPUTE MAXIMUM-GALLON-NR3 = PRM-DIESEL-LIMIT -
                                                    PRM-DIESEL-USED
                       MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                     WHEN COM-CN-COMP-US-SC
                       MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
                       COMPUTE WS-LITERS = PRM-DIESEL-LIMIT -
                                           PRM-DIESEL-USED
                       PERFORM LITERS-TO-GALLONS
                       MOVE WS-GALLONS          TO MAXIMUM-GALLON-NR3
                       MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                     WHEN COM-CN-COMP-CN-SC
                       MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
                       COMPUTE MAXIMUM-GALLON-NR3 = PRM-DIESEL-LIMIT -
                                                    PRM-DIESEL-USED
                       MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                     WHEN COM-US-COMP-CN-SC
                       MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
                       COMPUTE WS-GALLONS = PRM-DIESEL-LIMIT -
                                            PRM-DIESEL-USED
                       PERFORM GALLONS-TO-LITERS
                       MOVE WS-LITERS           TO MAXIMUM-GALLON-NR3
                       MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                    END-EVALUATE.

      *-----------------------------
       20500-CHECK-REEFER-GALLON-LIM.
      *-----------------------------
           IF CSR-REEFER-LIMIT-FLAG = 'Y'
061615        IF WS-UIWA-REF-QTY > +0
                 IF PRM-REEFER-LIMIT < PRM-REEFER-USED   +
                                       WS-UIWA-REF-QTY
                    MOVE ' REEFER ' TO MAXIMUM-GALLON-MSG3T
                    MOVE '*' TO ERROR-FLAG
                    MOVE -1  TO TRGLNL
                    MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
                    EVALUATE TRUE
                     WHEN COM-US-COMP-US-SC
                       MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
                       COMPUTE MAXIMUM-GALLON-NR3 = PRM-REEFER-LIMIT -
                                                    PRM-REEFER-USED
                       MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                     WHEN COM-CN-COMP-US-SC
                       MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
                       COMPUTE WS-LITERS = PRM-REEFER-LIMIT -
                                           PRM-REEFER-USED
                       PERFORM LITERS-TO-GALLONS
                       MOVE WS-GALLONS          TO MAXIMUM-GALLON-NR3
                       MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                     WHEN COM-CN-COMP-CN-SC
                       MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
                       COMPUTE MAXIMUM-GALLON-NR3 = PRM-REEFER-LIMIT -
                                                    PRM-REEFER-USED
                       MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                     WHEN COM-US-COMP-CN-SC
                       MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
                       COMPUTE WS-GALLONS = PRM-REEFER-LIMIT -
                                            PRM-REEFER-USED
                       PERFORM GALLONS-TO-LITERS
                       MOVE WS-LITERS           TO MAXIMUM-GALLON-NR3
                       MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
                       PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                    END-EVALUATE.

SB0513*-----------------------------
SB0513 20505-CHECK-OTHER-GALLON-LIM.
SB0513*-----------------------------
SB0513     IF CSR-OTHER-LIMIT-FLAG = 'Y'
061615        IF WS-UIWA-OTH-QTY > +0
072313           IF CSRH-OTHER-QTY-LIMIT < PIR-OTHER-USED   +
072313                                    WS-UIWA-OTH-QTY
SB0513              MOVE ' OTHER  ' TO MAXIMUM-GALLON-MSG3T
SB0513              MOVE '*' TO ERROR-FLAG
SB0513              MOVE -1  TO TRGLNL
SB0513              MOVE MAXIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
SB0513              EVALUATE TRUE
SB0513                WHEN COM-US-COMP-US-SC
SB0513                  MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
072413                  COMPUTE MAXIMUM-GALLON-NR3 =
072413                        CSRH-OTHER-QTY-LIMIT -  PIR-OTHER-USED
SB0513                  MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
SB0513                  PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
SB0513                WHEN COM-CN-COMP-US-SC
SB0513                  MOVE ' GALLONS OF'       TO MAXIMUM-GALLON-MSG3
072313                  COMPUTE WS-LITERS = CSRH-OTHER-QTY-LIMIT -
072313                                      PIR-OTHER-USED
SB0513                  PERFORM LITERS-TO-GALLONS
SB0513                  MOVE WS-GALLONS          TO MAXIMUM-GALLON-NR3
SB0513                  MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
SB0513                  PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
SB0513                WHEN COM-CN-COMP-CN-SC
SB0513                  MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
072313                  COMPUTE MAXIMUM-GALLON-NR3 =
072313                        CSRH-OTHER-QTY-LIMIT -  PIR-OTHER-USED
SB0513                  MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
SB0513                  PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
SB0513                WHEN COM-US-COMP-CN-SC
SB0513                  MOVE ' LITERS OF '       TO MAXIMUM-GALLON-MSG3
072313                  COMPUTE WS-GALLONS = CSRH-OTHER-QTY-LIMIT -
072313                                       PIR-OTHER-USED
SB0513                  PERFORM GALLONS-TO-LITERS
SB0513                  MOVE WS-LITERS           TO MAXIMUM-GALLON-NR3
SB0513                  MOVE MAXIMUM-GALLON-MESSAGE3   TO OUT-COMENT
SB0513                  PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
SB0513              END-EVALUATE.

      *-----------------------------
       20510-CHECK-PURCHASE-FLAGS.
      *-----------------------------
           PERFORM 20511-CHECK-TRACTOR-FLAG.
           PERFORM 20512-CHECK-TRAILER-FLAG.
           PERFORM 20513-CHECK-OIL-FLAG.
           PERFORM 20514-CHECK-PRODUCT-FLAG.
           PERFORM 20515-CHECK-CASH-FLAG.

      *-----------------------------
       20511-CHECK-TRACTOR-FLAG.
      *-----------------------------
           IF TRACTOR-PURCHASE = 1 AND
JS0604        COM-PUR-OPTIONS-FUEL = '0'
              MOVE FUEL-NOT-ALLOWED   TO OUT-COMENT
              MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
              MOVE '*'                TO ERROR-FLAG
              MOVE -1                 TO FPGLNSL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20512-CHECK-TRAILER-FLAG.
      *-----------------------------
           IF TRAILER-PURCHASE = 1 AND
JS0604        COM-PUR-OPTIONS-FUEL = '0'
              MOVE FUEL-NOT-ALLOWED   TO OUT-COMENT
              MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
              MOVE '*'                TO ERROR-FLAG
              MOVE -1                 TO TRGLNL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20513-CHECK-OIL-FLAG.
      *-----------------------------
           IF OIL-PURCHASE = 1 AND
JS0604        (COM-PUR-OPTIONS-OIL = '0')
              MOVE OIL-NOT-ALLOWED   TO OUT-COMENT
              MOVE OIL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
              MOVE '*'               TO ERROR-FLAG
              MOVE -1                TO OILQTSL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20514-CHECK-PRODUCT-FLAG.
      *-----------------------------
           IF PRODUCT-PURCHASE = 1 AND
JS0604        (COM-PUR-OPTIONS-PROD = '0')
              MOVE PROD-NOT-ALLOWED   TO OUT-COMENT
              MOVE PROD-NOT-ALLOWED-N TO POS-ERROR-NUMBER
              MOVE '*'                TO ERROR-FLAG
              MOVE -1                 TO PRD1CDL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20515-CHECK-CASH-FLAG.
      *-----------------------------
           IF WS-UIWA-CASH-AMT > ZEROES AND
JS0604        (COM-PUR-OPTIONS-CASH = '0')
              MOVE CASH-NOT-ALLOWED   TO OUT-COMENT
              MOVE CASH-NOT-ALLOWED-N TO POS-ERROR-NUMBER
              MOVE '*'                TO ERROR-FLAG
              MOVE -1                 TO ADVAMTL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20520-CHECK-PO-OVERRIDE.
      *-----------------------------
      **** (IF PO OVERRIDE NETWORK SEE IF PO WAS ENTERED) ****
           IF (COM-PO-PUR-OPTIONS-AREA = SPACE) OR
              (COM-PO-PUR-OPTIONS-AREA > SPACE AND
               WS-UIWA-PO-NR > SPACE)
              CONTINUE
           ELSE
              PERFORM 20521-CHECK-PO-OVR-FUEL
              PERFORM 20522-CHECK-PO-OVR-TRAILER
              PERFORM 20523-CHECK-PO-OVR-OIL
              PERFORM 20524-CHECK-PO-OVR-PRODUCTS
              PERFORM 20525-CHECK-PO-OVR-CASH
           END-IF.

      *-----------------------------
       20521-CHECK-PO-OVR-FUEL.
      *-----------------------------
           IF COM-PO-PUR-OPTIONS-FUEL = '0'
              IF TRACTOR-PURCHASE = 1
                 MOVE FUEL-NOT-ALLOWED   TO OUT-COMENT
                 MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*'                TO ERROR-FLAG
                 MOVE -1                 TO FPGLNSL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20522-CHECK-PO-OVR-TRAILER.
      *-----------------------------
           IF COM-PO-PUR-OPTIONS-FUEL = '0'
              IF TRAILER-PURCHASE = 1
                 MOVE FUEL-NOT-ALLOWED   TO OUT-COMENT
                 MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*'                TO ERROR-FLAG
                 MOVE -1                 TO TRGLNL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20523-CHECK-PO-OVR-OIL.
      *-----------------------------
           IF COM-PO-PUR-OPTIONS-OIL = '0'
              IF OIL-PURCHASE = 1
                 MOVE OIL-NOT-ALLOWED   TO OUT-COMENT
                 MOVE OIL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*'               TO ERROR-FLAG
                 MOVE -1                TO OILQTSL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20524-CHECK-PO-OVR-PRODUCTS.
      *-----------------------------
           IF COM-PO-PUR-OPTIONS-PROD = '0'
              IF PRODUCT-PURCHASE = 1
                 MOVE PROD-NOT-ALLOWED   TO OUT-COMENT
                 MOVE PROD-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*'                TO ERROR-FLAG
                 MOVE -1                 TO PRD1CDL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20525-CHECK-PO-OVR-CASH.
      *-----------------------------
           IF COM-PO-PUR-OPTIONS-CASH = '0'
              IF WS-UIWA-CASH-AMT > ZEROES
                 MOVE CASH-NOT-ALLOWED   TO OUT-COMENT
                 MOVE CASH-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*'                TO ERROR-FLAG
                 MOVE -1                 TO ADVAMTL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20530-CHECK-PO-REQUIRED.
      *-----------------------------
      **** (SEE IF A PO IS REQUIRED FOR A GIVEN PRODUCT) ****
           IF (CDN-PURCHASE-ORDER-POOL-LIMIT) AND
              (WS-UIWA-PO-NR NOT > SPACES)
              PERFORM 20531-CHECK-PO-REQ-FUEL
              PERFORM 20532-CHECK-PO-REQ-TRAILER
              PERFORM 20533-CHECK-PO-REQ-OIL
              PERFORM 20534-CHECK-PO-REQ-PRODUCTS
              PERFORM 20535-CHECK-PO-REQ-CASH
           END-IF.

      *-----------------------------
       20531-CHECK-PO-REQ-FUEL.
      *-----------------------------
           IF COM-PO-REQUIRED-FOR-FUEL = '1'
              IF TRACTOR-PURCHASE = 1
                 MOVE FUEL-NOT-ALLOWED2  TO OUT-COMENT
                 MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*'                TO ERROR-FLAG
                 MOVE -1                 TO FPGLNSL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20532-CHECK-PO-REQ-TRAILER.
      *-----------------------------
           IF COM-PO-REQUIRED-FOR-FUEL = '1'
              IF TRAILER-PURCHASE = 1
                 MOVE FUEL-NOT-ALLOWED2 TO OUT-COMENT
                 MOVE FUEL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE -1 TO TRGLNL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20533-CHECK-PO-REQ-OIL.
      *-----------------------------
           IF COM-PO-REQUIRED-FOR-OIL = '1'
              IF OIL-PURCHASE = 1
                 MOVE OIL-NOT-ALLOWED2 TO OUT-COMENT
                 MOVE OIL-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE -1 TO OILQTSL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20534-CHECK-PO-REQ-PRODUCTS.
      *-----------------------------
           IF COM-PO-REQUIRED-FOR-PROD = '1'
              IF PRODUCT-PURCHASE = 1
                 MOVE PROD-NOT-ALLOWED2 TO OUT-COMENT
                 MOVE PROD-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE -1 TO PRD1CDL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20535-CHECK-PO-REQ-CASH.
      *-----------------------------
           IF COM-PO-REQUIRED-FOR-CASH = '1'
              IF WS-UIWA-CASH-AMT > ZEROES
                 MOVE CASH-NOT-ALLOWED2 TO OUT-COMENT
                 MOVE CASH-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE '*' TO ERROR-FLAG
                 MOVE -1 TO ADVAMTL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20540-CHECK-CASH-LIMITS.
      *-----------------------------
           MOVE SPACES TO ERROR-FLAG.
           PERFORM 20541-ADJUST-CASH-INFO.
           IF WS-UIWA-CASH-AMT > 0 AND
MB1213        WS-FL-CASH-ADV-FLAG NOT = 'U'
              PERFORM 20542-CHECK-CASH-LIMIT
           END-IF.
           PERFORM 20543-CHECK-CASH-CONVERSION.
           PERFORM 20544-CHECK-CASH-AND-MIN-FUEL.
MP0799     PERFORM 20545-ADJUST-ATM-AMOUNT.

      *-----------------------------
       20541-ADJUST-CASH-INFO.
      *-----------------------------
CP0807*** VARIABLES CHANGED FOR FPMASTR REPLACEMENT
           IF WS-UIWA-CASH-AMT > ZEROES AND
CP0807        WS-CURRENT-DATE-YYDDD NOT = UNITMST-DATE-LAST-XTN
CP0807           MOVE 0 TO UNITMST-DLY-CASH-ADV-USED.
CP0807     IF WS-FL-CASH-ADV-FLAG = 'A'
              PERFORM ACCUM-CASH-TOTALS.
CP1098     IF CSR-CASH-IS-ON-THE-CARD
102810       OR WS-FLEET-LIMIT-CSH-AVAIL > SPACE
              PERFORM PREMIER-CARD-CASH-LIMIT.

      *-----------------------------
       20542-CHECK-CASH-LIMIT.
      *-----------------------------
CP0807     IF WS-UIWA-CASH-AMT + WS-RFL-CASH-ADV-USED    >
CP0807                           WS-RFL-CASH-ADV-INIT
CP0807        COMPUTE WS-US-DOLLARS, WS-CANADIAN-DOLLARS =
CP0807                WS-RFL-CASH-ADV-INIT - WS-RFL-CASH-ADV-USED
              PERFORM COMPUTE-XCS-ADV-REQ-AMT
              MOVE EXCESSIVE-ADVANCE-REQUEST     TO OUT-COMENT
              MOVE EXCESSIVE-ADVANCE-REQUEST-N   TO POS-ERROR-NUMBER
              MOVE NEW-EXCESSIVE-ADVANCE-REQUEST TO NEW-OUT-MESSAGE
              MOVE 'Y'                           TO VCWS-ERROR-IND
MB1213        MOVE '7'                           TO VR-TRANS-FLAG
              MOVE -1 TO ADVAMTL
              IF LIMITS-ALTERED-FOR-PO = 'Y'
                 MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
                 MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
              END-IF
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

CP0807     IF CASH-ADV-DAILY-SET                AND
CP0807        WS-RFL-CASH-ADV-INIT-DLY > ZEROES AND
CP0807        WS-UIWA-CASH-AMT + WS-FL-CASH-ADV-USED-DLY >
CP0807              WS-RFL-CASH-ADV-INIT-DLY
              COMPUTE WS-US-DOLLARS, WS-CANADIAN-DOLLARS =
CP0807           WS-RFL-CASH-ADV-INIT-DLY - WS-FL-CASH-ADV-USED-DLY
              PERFORM COMPUTE-XCS-ADV-REQ-AMT
              MOVE EXCESSIVE-ADVANCE-REQUEST   TO OUT-COMENT
              MOVE EXCESSIVE-ADVANCE-REQUEST-N TO POS-ERROR-NUMBER
              MOVE NEW-EXCESSIVE-ADVANCE-REQUEST TO NEW-OUT-MESSAGE
              MOVE 'Y'                         TO VCWS-ERROR-IND
MB1213        MOVE '7'                         TO VR-TRANS-FLAG
              MOVE -1 TO ADVAMTL
              IF LIMITS-ALTERED-FOR-PO = 'Y'
                 MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
                 MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
              END-IF
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20543-CHECK-CASH-CONVERSION.
      *-----------------------------
      **** (IF A CURRENCY CONVERSION TOOK PLACE, CASH CAN NOT) ****
      **** (EXCEED 999.99                                    ) ****
           IF (COM-CN-COMP-US-SC         OR COM-US-COMP-CN-SC)    AND
             (WS-UIWA-CASH-AMT > 999.99 OR WS-UIWA-CASH-AMT-SC > 999.99)
              MOVE '*' TO ERROR-FLAG
              MOVE -1  TO ADVAMTL
              IF COM-CN-COMP-US-SC
                 MOVE 999.90 TO WS-CANADIAN-DOLLARS
                 PERFORM CAN-DOLLARS-TO-US
                 MOVE WS-US-DOLLARS TO XCS-ADV-REQ-AMT2
                 MOVE EXCESSIVE-ADVANCE-REQUEST2  TO OUT-COMENT
                 MOVE EXCESSIVE-ADVANCE-REQUEST-N TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              ELSE
                 MOVE 999.90 TO WS-US-DOLLARS
                 PERFORM US-DOLLARS-TO-CAN
                 MOVE WS-CANADIAN-DOLLARS TO XCS-ADV-REQ-AMT2
                 MOVE EXCESSIVE-ADVANCE-REQUEST2  TO OUT-COMENT
                 MOVE EXCESSIVE-ADVANCE-REQUEST-N TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20544-CHECK-CASH-AND-MIN-FUEL.
      *-----------------------------
           IF WS-UIWA-CASH-AMT > 0
              IF NOT THIS-BE-A-VRU-XTN
                 PERFORM AUTHORIZE-ADVANCE
ED0213           COMPUTE WS-CASH-GALLONS = WS-UIWA-NR2-QTY +
ED0213                                     WS-UIWA-OTH-QTY +
ED0213                                     WS-UIWA-REF-QTY +
ED0213                                     WS-UIWA-NR1-QTY
ED0213           IF CDN-CUST-USES-UNIT-RFID-TAGS
ED0213           AND SCM-RFID-ENABLED-FL-YES
ED0213           AND PIR-LAST-PURC-LOC-RFID = WS-UIWA-SC-CODE
ED0213           AND PIR-LAST-PURC-QTY-RFID >= CDN-MINIMUM-GALLONS-CASH
ED0213           AND WS-CASH-GALLONS = ZERO
ED0213              PERFORM 20544-CHECK-LST-RFID-TIME
ED0213              IF WS-ELAP-MIN < XCP-FUEL-DEF-TIME-LIMIT-MM
ED0213                 MOVE ' '              TO ERROR-FLAG
ED0213                 MOVE 'Y'              TO WS-RESET-LAST-QTY-RFID
ED0213              END-IF
ED0213           END-IF
                 IF THERE-WAS-AN-ERROR
                    MOVE MINIMUM-GALLON-MESSAGE TO OUT-COMENT
                    MOVE MINIMUM-GALLON-MESSAGE-N TO POS-ERROR-NUMBER
                    MOVE -1 TO ADVAMTL
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ED0213           END-IF
ED0213        END-IF
ED0213     END-IF.

ED0213*------------------------------
ED0213 20544-CHECK-LST-RFID-TIME.
ED0213*------------------------------
ED0213     IF WS-UIWA-SC-CODE NOT > SPACES
ED0213        MOVE SCM-SERVICE-CENTER-CODE TO WS-UIWA-SC-CODE
ED0213     END-IF
ED0213     IF WS-SETUP-XCPRODC-DONE NOT = 'Y'
ED0213        PERFORM SETUP-XCPRODC-AND-DT-TM
ED0213     END-IF
ED0213     IF PIR-LAST-PURC-TIME-RFID NUMERIC
ED0213       AND PIR-LAST-PURC-TIME-RFID > ZERO
ED0213        MOVE PIR-LAST-PURC-TIME-RFID  TO WS-PURC-TIME-UNPACK
ED0213        MOVE WS-PURC-TIME-UNPACK(2:4) TO WS-TIME-4
ED0213     ELSE
ED0213        MOVE ZERO                     TO WS-TIME-1
ED0213     END-IF
ED0213     COMPUTE WS-COMP-MIN = (WS-HOURS-1 * 60) + WS-MINUTES-1
ED0213     END-COMPUTE
SB0413     IF PIR-LAST-PURC-DATE-RFID NOT NUMERIC
SB0413        MOVE WS-CURRENT-DATE-YYDDD TO PIR-LAST-PURC-DATE-RFID
SB0413     END-IF
ED0213     MOVE WS-CURR-MIN TO WS-CURR-MIN-WORK
ED0213     IF PIR-LAST-PURC-DATE-RFID NOT = WS-CURRENT-DATE-YYDDD
ED0213        ADD 1440      TO WS-CURR-MIN-WORK
ED0213     END-IF
ED0213     COMPUTE WS-ELAP-MIN = WS-CURR-MIN-WORK - WS-COMP-MIN
ED0213     END-COMPUTE.

MP0799
MP0799*-----------------------------
MP0799 20545-ADJUST-ATM-AMOUNT.
MP0799*-----------------------------
MP0799     IF THIS-BE-AN-ATM-XTN
MP0799        ADD TSXCO0AT-SURCHARGE-FEE TO WS-UIWA-CASH-AMT
MP0799                                      WS-UIWA-CASH-AMT-SC
MP0799                                      WS-UIWA-CASH-AMT-US.

      *-----------------------------
       20555-CHECK-CAROLINA-MOTORS.
      *-----------------------------
CP0807     IF (WS-FP-ACCT-CODE = 'CA130' OR 'CA237') AND
              WS-UIWA-TRIP-NR NOT > SPACES
              MOVE UNIT-NR-REQ TO ERROR-TYPE
              MOVE UNIT-NR-REQ-N TO POS-ERROR-NUMBER
              MOVE '*' TO ERROR-FLAG
              MOVE -1 TO ADVTRIPL
              MOVE ERROR-TYPE TO OUT-COMENT-1
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20560-CHECK-TRIP-NUMBER.
      *-----------------------------
CP0807     IF TRIP-NR-REQ-THIS-UNIT
              IF WS-UIWA-TRIP-NR NOT > SPACES
                 MOVE TRIP-NR-REQUIRED TO OUT-COMENT
                 MOVE TRIP-NR-REQUIRED-N TO POS-ERROR-NUMBER
                 MOVE -1 TO ADVTRIPL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

CP0807     IF TRIP-NR-REQ-THIS-UNIT
              PERFORM TRIP-NR-EDIT
              IF THERE-WAS-AN-ERROR
                 MOVE TRIP-NR-INVALID     TO OUT-COMENT
                 MOVE TRIP-NR-INVALID-N   TO POS-ERROR-NUMBER
                 MOVE INVALID-TRIP-NR-NBR TO CALL-COMPANY-NBR
                 MOVE 'Y'                 TO VCWS-ERROR-IND
                 MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
                 MOVE -1 TO ADVTRIPL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

MN1008     IF TRIP-NR-REQ-THIS-UNIT
MN1008         IF CDN-CUST-MC-CUSTID = 'Y'
MN1008            MOVE 6 TO FIELD-LENGTH
CP1011            CALL 'CXUTSSPR' USING FIELD-LENGTH,
MN1008                                  WS-UIWA-TRIP-NR,
MN1008                                  WS-ZERO
MN1008            MOVE 6 TO FIELD-LENGTH
CP1011            CALL 'CXUTSSPR' USING FIELD-LENGTH,
MN1008                                  HOLD-TRIP-NUMBER,
MN1008                                  WS-ZERO
MN1008         END-IF
MN1008     END-IF.

CP0807     IF WS-FL-TRIP-FLAG = 'B'
              MOVE WS-UIWA-TRIP-NR TO HOLD-TRIP-NUMBER-I
              IF HOLD-TRIP-NUMBER    NOT = HOLD-TRIP-NUMBER-I
                 MOVE TRIP-NR-INVALID     TO OUT-COMENT
                 MOVE TRIP-NR-INVALID-N   TO POS-ERROR-NUMBER
                 MOVE INVALID-TRIP-NR-NBR TO CALL-COMPANY-NBR
                 MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
                 MOVE 'Y'                 TO VCWS-ERROR-IND
                 MOVE -1 TO ADVTRIPL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

SD0719     IF WS-FL-TRIP-FLAG = 'D'
SD0719        MOVE WS-UIWA-TRIP-NR TO HOLD-TRIP-NUMBER-I
SD0719        IF HOLD-TRIP-NUMBER    NOT = HOLD-TRIP-NUMBER-I
SD0719        AND HOLD-TRIP-NUMBER-2 NOT = HOLD-TRIP-NUMBER-I
SD0719        AND HOLD-TRIP-NUMBER-3 NOT = HOLD-TRIP-NUMBER-I
SD0719           MOVE TRIP-NR-INVALID     TO OUT-COMENT
SD0719           MOVE TRIP-NR-INVALID-N   TO POS-ERROR-NUMBER
SD0719           MOVE INVALID-TRIP-NR-NBR TO CALL-COMPANY-NBR
SD0719           MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
SD0719           MOVE 'Y'                 TO VCWS-ERROR-IND
SD0719           MOVE -1 TO ADVTRIPL
SD0719           PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20570-CHECK-TRAILER-NR.
      *-----------------------------
           PERFORM 20571-CHECK-TRAILER-NR.
MB1112     IF WS-UIWA-RFID-TAG-TYP (1:1) = 'U' AND
MB1112        SCM-LIMIT-RFID-PROMPTS-FL-YES
MB1112        CONTINUE
MB1112     ELSE
MB1112        PERFORM 20572-CHECK-TRAILER-HR
MB1112     END-IF.

      *-----------------------------
       20571-CHECK-TRAILER-NR.
      *-----------------------------
           IF CDN-TRAILER-NR-FLAG = 'C' OR 'V' OR 'P'
              IF (CDN-REFER-ONLY = 'Y' AND TRAILER-PURCHASE = 1) OR
                 (CDN-REFER-ONLY NOT = 'Y')
                 IF WS-UIWA-TRAILER-NR NOT > SPACES
                    MOVE TRAILER-NR-REQUIRED TO OUT-COMENT
                    MOVE TRAILER-NR-REQUIRED-N TO POS-ERROR-NUMBER
                    MOVE -1 TO TRLRNRL
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 END-IF
                 PERFORM TRAILER-NR-EDIT
                 IF THERE-WAS-AN-ERROR
                    MOVE TRAILER-NR-INVALID TO OUT-COMENT
                    MOVE TRAILER-NR-INVALID-N TO POS-ERROR-NUMBER
                    MOVE -1 TO TRLRNRL
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20572-CHECK-TRAILER-HR.
      *-----------------------------
           IF CDN-VERIFY-TRAILER-HOURS = 'C' OR 'V'
              IF TRLRHRI > SPACES
                 PERFORM TRAILER-HR-EDIT
                 IF THERE-WAS-AN-ERROR
                    MOVE TRAILER-HR-INVALID TO OUT-COMENT
                    MOVE TRAILER-HR-INVALID-N TO POS-ERROR-NUMBER
                    MOVE -1 TO TRLRHRL
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 END-IF
              ELSE
                 IF TRAILER-PURCHASE = 1
                    MOVE TRAILER-HR-REQUIRED TO OUT-COMENT
                    MOVE TRAILER-HR-REQUIRED-N TO POS-ERROR-NUMBER
                    MOVE -1 TO TRLRHRL
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 END-IF
              END-IF
           END-IF.

      *-----------------------------
       20580-CHECK-TRAILER-HUB.
      *-----------------------------
           IF CDN-TRAILER-HUB = 'Y'
               IF TRLRHBI NOT > SPACES
                   MOVE TRAILER-HUB-REQUIRED   TO OUT-COMENT
                   MOVE TRAILER-HUB-REQUIRED-N TO POS-ERROR-NUMBER
                   MOVE -1 TO TRLRHBL
                   PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
               END-IF
               PERFORM TRAILER-HUB-EDIT
               IF THERE-WAS-AN-ERROR
                  MOVE TRAILER-HUB-INVALID TO OUT-COMENT
                  MOVE TRAILER-HUB-INVALID-N TO POS-ERROR-NUMBER
                  MOVE -1 TO TRLRHBL
                  PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20590-CHECK-GST-TAX.
      *-----------------------------
           IF COM-CAPTURE-TAX = 'Y'
              EVALUATE TRUE
                 WHEN PGRM-FUNCTION-CASH-ONLY
                   IF WS-UIWA-TAX-AMT > ZEROES
                     MOVE CANADIAN-TAX-AMT-NOT-REQ-N TO POS-ERROR-NUMBER
                     MOVE CANADIAN-TAX-AMT-NOT-REQ   TO OUT-COMENT
                     MOVE -1                         TO CTAXL
                     PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                   END-IF
                 WHEN OTHER
                   IF WS-UIWA-TAX-AMT = ZEROES
                     MOVE CANADIAN-TAX-AMT-REQ-N     TO POS-ERROR-NUMBER
                     MOVE CANADIAN-TAX-AMT-REQ       TO OUT-COMENT
                     MOVE -1                         TO CTAXL
                     PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                   END-IF
              END-EVALUATE.

      *-----------------------------
       20600-CHECK-PO-NUMBER.
      *-----------------------------
           IF CDN-PURCHASE-ORDER-CAPTURE-REQ
              IF WS-UIWA-PO-NR NOT > SPACES
                 MOVE PURCHASE-ORDER-REQUIRED   TO OUT-COMENT
                 MOVE PURCHASE-ORDER-REQUIRED-N TO POS-ERROR-NUMBER
                 MOVE -1 TO PONRL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
           IF COM-PO-REQUIRED = 'Y'
              IF WS-UIWA-PO-NR NOT > SPACES
                 MOVE PO-REQUIRED-TO-FUEL-HERE  TO OUT-COMENT
                 MOVE PO-REQUIRED-TO-FUEL-HERE-N TO POS-ERROR-NUMBER
                 MOVE -1 TO PONRL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
           IF CDN-PURCHASE-ORDER-VALID
              IF WS-UIWA-PO-NR > SPACES
                 PERFORM PURCHASE-ORDER-EDIT
                 IF THERE-WAS-AN-ERROR
                    MOVE PURCHASE-ORDER-INVALID TO OUT-COMENT
                    MOVE PURCHASE-ORDER-INVALID-N TO POS-ERROR-NUMBER
                    MOVE -1 TO PONRL
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-------------------------------
102810 20605-CHECK-SUB-PRODS.
      *-------------------------------
020711***** THIS ROUTINE NOT CURRENTLY USED; IT WILL NEED TO BE
020711***** PERFORMED WHEN LOGIC IS ADDED TO UTILIZE THE ALTERNATIVE
020711***** FUEL DISCOUNT APPLY FLAG
020711***** MOST OF THE LOGIC IN THIS ROUTINE REPLACED BY
020711***** PERFORMING ROUTINE VALIDATE-SUB-PROD-CODES
      ***  IF (CDN-FLEET-LIMIT-FLAG NOT = 'Y')
      ***    AND (S007-PROPRIETARY-CARD = 'Y')
      ***    AND NOT (EIBTRNID = 'FMBP' OR 'FMMP')
      ***     INITIALIZE  WS-TSFMO0LP-COMMAREA
      ***     MOVE 'D' TO FMLP-LIM-PROCESS-IND
      ***     PERFORM PII-SETUP-FMLP-FLDS-II
      ***     PERFORM PII-SETUP-FMLP-FLDS-III
      ***     PERFORM PII-SETUP-FMLP-POSTING
      ***     PERFORM LINK-TO-TSFMO0LP
      ***     IF FMLP-ERROR
      ***        MOVE FMLP-FPCMT1L          TO FPCMT1L
      ***        MOVE FMLP-OUT-COMENT       TO OUT-COMENT
      ***        MOVE FMLP-POS-ERROR-NUMBER TO POS-ERROR-NUMBER
      ***        PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
      ***     END-IF
      ***  END-IF.
           CONTINUE.
      *-------------------------------
102810 20606-SUB-PRODS-MOVED.
      *-------------------------------
           MOVE FMLP-IN-NR2-SUB-PROD TO WS-HOLD-NR2-SUB-PROD-IN
           MOVE FMLP-IN-NR2-QTY      TO WS-UIWA-NR2-QTY
           MOVE FMLP-IN-NR2-COST     TO WS-UIWA-NR2-COST
           MOVE FMLP-IN-NR1-SUB-PROD TO WS-HOLD-NR1-SUB-PROD-IN
           MOVE FMLP-IN-NR1-QTY      TO WS-UIWA-NR1-QTY
           MOVE FMLP-IN-NR1-COST     TO WS-UIWA-NR1-COST
           MOVE FMLP-IN-REF-SUB-PROD TO WS-HOLD-REF-SUB-PROD-IN
           MOVE FMLP-IN-REF-QTY      TO WS-UIWA-REF-QTY
           MOVE FMLP-IN-REF-COST     TO WS-UIWA-REF-COST
           MOVE FMLP-IN-OTH-SUB-PROD TO WS-HOLD-OTH-SUB-PROD-IN
           MOVE FMLP-IN-OTH-QTY      TO WS-UIWA-OTH-QTY
           MOVE FMLP-IN-OTH-COST     TO WS-UIWA-OTH-COST
           MOVE FMLP-IN-PR1-SUB-PROD TO WS-UIWA-PR1-CODE
           MOVE FMLP-IN-PR1-COST     TO WS-UIWA-PR1-COST
           MOVE FMLP-IN-PR2-SUB-PROD TO WS-UIWA-PR2-CODE
           MOVE FMLP-IN-PR2-COST     TO WS-UIWA-PR2-COST
           MOVE FMLP-IN-PR3-SUB-PROD TO WS-UIWA-PR3-CODE
           MOVE FMLP-IN-PR3-COST     TO WS-UIWA-PR3-COST.
      *-----------------------------
       20610-CHECK-HUB.
      *-----------------------------
CP0807     IF (TRACTOR-PURCHASE = 1 AND HUB-READING-REQUIRED)
                           OR
JS1199        (PRODUCT-PURCHASE = 1 AND CSR-HUBOMETER-CAPTURE = 'P')
                           OR
              (THIS-BE-AN-UNATTENDED-PRE-AUTH AND
CP0807                                  HUB-READING-REQUIRED)
DR0117                     OR
DR0117        (TRAILER-PURCHASE = 1 AND CSR-HUBOMETER-CAPTURE = 'R')
102810        PERFORM CHECK-FOR-ADDITIVE
           END-IF.
      *-----------------------------
102810 CHECK-FOR-ADDITIVE.
      *-----------------------------
           MOVE 'Y' TO WS-CHK-HUB
           EVALUATE TRUE
              WHEN WS-UIWA-NR2-COST > ZERO AND FMLP-ADDTV-FLG-NR2 = 'Y'
              WHEN WS-UIWA-NR1-COST > ZERO AND FMLP-ADDTV-FLG-NR1 = 'Y'
              WHEN WS-UIWA-REF-COST > ZERO AND FMLP-ADDTV-FLG-REF = 'Y'
              WHEN WS-UIWA-OTH-COST > ZERO AND FMLP-ADDTV-FLG-OTH = 'Y'
                 MOVE 'N' TO WS-CHK-HUB
           END-EVALUATE
           IF WS-CHK-HUB = 'Y'
              PERFORM 20611-CHECK-HUB
           END-IF.

      *-----------------------------
       20611-CHECK-HUB.
      *-----------------------------
           PERFORM HUBOMETER-EDIT
           IF THERE-WAS-AN-ERROR
              MOVE HUB-MESSAGE      TO OUT-COMENT
              MOVE HUB-MESSAGE-N    TO POS-ERROR-NUMBER
              MOVE -1 TO FPHUBL
              IF HUB-ERROR-FOUND
                 MOVE HUB-READING-NBR  TO CALL-COMPANY-NBR
                 MOVE CALL-COMPANY-MSG TO NEW-OUT-MESSAGE
                 MOVE 'Y'              TO VCWS-ERROR-IND
              END-IF
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20620-VALIDATE-PRICE-INFO.
      *-----------------------------
CC0803     IF EIBTRNID = ('FMBP' OR 'FMMP') OR
CC040A        SCM-BUSINESS-TYPE-CODE = 'WH' OR
JSH318        COM-NET-PRICING-FLAG = 'P'
              CONTINUE
           ELSE
              MOVE 'N' TO WS-EXIT-PPG-CHECK
              PERFORM 20640-SETUP-PPG-CHECK
              IF WS-EXIT-PPG-CHECK = 'N'
                 PERFORM 20650-CHECK-CALC-ERROR
                 PERFORM 20660-VALIDATE-SVC-TYPE
              END-IF
              IF WS-EXIT-PPG-CHECK = 'N'
                 PERFORM 20670-GET-STATE-PPG-INFO
              END-IF
              IF WS-EXIT-PPG-CHECK = 'N'
                 PERFORM 20680-CHECK-MIN-MAX-PPG
              END-IF
              IF WS-EXIT-PPG-CHECK = 'N'
                 PERFORM 20690-SETUP-PPG-VAR-CHECK
              END-IF
              IF WS-EXIT-PPG-CHECK = 'N'
                 PERFORM 20700-CALC-DAYS-SINCE-LST-XTN
                 PERFORM 20710-CHECK-FOR-NEW-PRICE
              END-IF
              IF WS-EXIT-PPG-CHECK = 'N'
                 PERFORM 20720-SEE-IF-PRICE-WAS-ALTER
              END-IF
              IF WS-EXIT-PPG-CHECK = 'N'
                 PERFORM 20730-CHECK-PPG-VARIANCE
              END-IF
           END-IF.

      *-----------------------------
102810 PRE-AUTH-TBL-UPDT.
      *-----------------------------
      ***** CHECK FOR STAND-IN TRANSACTION
           IF (WS-UIWA-SYSTEM-ID NOT NUMERIC
               OR WS-UIWA-SYSTEM-ID NOT = 1)
               AND NOT TRANS-IS-UNATTENDED-PRE-AUTH
041112        IF WS-SETUP-XCPRODC-DONE NOT = 'Y'
                 PERFORM SETUP-XCPRODC-AND-DT-TM
              END-IF
      ***** SETUP CURSOR INDEX
              MOVE WS-UIWA-CARD-NR    TO CRD-NBR  OF DPRPPAUT
              IF WS-UIWA-SC-CODE > SPACES
                 MOVE WS-UIWA-SC-CODE TO MRCH-NBR OF DPRPPAUT
              ELSE
                 MOVE SCM-SERVICE-CENTER-CODE
                                      TO MRCH-NBR OF DPRPPAUT
              END-IF
              MOVE '20'   TO PRE-AUTH-DT OF DPRPPAUT (1:2)
MP0113        MOVE YMD-YY TO PRE-AUTH-DT OF DPRPPAUT (3:2)
MP0113        MOVE YMD-MM TO PRE-AUTH-DT OF DPRPPAUT (6:2)
MP0113        MOVE YMD-DD TO PRE-AUTH-DT OF DPRPPAUT (9:2)
              MOVE '-'    TO PRE-AUTH-DT OF DPRPPAUT (5:1)
                             PRE-AUTH-DT OF DPRPPAUT (8:1)
CP1011        MOVE 'PRE-AUTH-TBL-UPDT' TO CXUTS0ML-PARAGRAPH
CP1011        MOVE 'OPEN CURSOR'       TO CXUTS0ML-COMMAND
              EXEC SQL
                   OPEN CUR_PRE_AUTH_UPDT
              END-EXEC
              PERFORM CHECK-NORMAL-SQL
CP1011        MOVE 'FETCH CURSOR'      TO CXUTS0ML-COMMAND
              EXEC SQL
                   FETCH CUR_PRE_AUTH_UPDT
                   INTO  :DPRPPAUT.PRE-AUTH-DT,
                         :DPRPPAUT.PRE-AUTH-TS,
                         :DPRPPAUT.D1-AMT-LIM,
                         :DPRPPAUT.D2-AMT-LIM,
                         :DPRPPAUT.RFR-AMT-LIM,
                         :DPRPPAUT.OTH-AMT-LIM,
                         :DPRPPAUT.OIL-AMT-LIM,
                         :DPRPPAUT.CASH-AMT-LIM
              END-EXEC
              PERFORM CHECK-NOTFND-SQL
              IF SQLCODE = ZERO
                 EXEC SQL
                      CLOSE CUR_PRE_AUTH_UPDT
                 END-EXEC
020711********** BYPASS THIS CHECK FOR NOW
041112********** MOVE WS-CURR-MIN TO WS-CURR-MIN-WORK
020711********** PERFORM PRE-AUTH-TBL-CHKS
                 PERFORM FINALLY-UPDT-PRE-AUTH-TBL
              ELSE
                 EXEC SQL
                      CLOSE CUR_PRE_AUTH_UPDT
                 END-EXEC
              END-IF
           END-IF.
      *-----------------------------
102810 COMPARE-TO-PRE-AUTH-LIMS.
      *-----------------------------
           EVALUATE TRUE
              WHEN WS-UIWA-NR1-COST > D1-AMT-LIM
              WHEN WS-UIWA-NR2-COST > D2-AMT-LIM
              WHEN WS-UIWA-REF-COST > RFR-AMT-LIM
              WHEN WS-UIWA-OTH-COST > OTH-AMT-LIM
              WHEN WS-UIWA-OIL-COST > OIL-AMT-LIM
              WHEN WS-UIWA-CASH-AMT > CASH-AMT-LIM
                 CONTINUE
              WHEN OTHER
                 MOVE 'Y' TO WS-FORCE-POST-FROM-PRE-AUTH
           END-EVALUATE.
      *-----------------------------
102810 FINALLY-UPDT-PRE-AUTH-TBL.
      *-----------------------------
CP1011     MOVE 'UPDT-PRE-AUTH-TBL' TO CXUTS0ML-PARAGRAPH
CP1011     MOVE 'UPDATE'            TO CXUTS0ML-COMMAND
           MOVE 'P'  TO POST-FLG     OF DPRPPAUT
           MOVE +2   TO MDY-USR-LEN  OF DPRPPAUT
           MOVE 'US' TO MDY-USR-TEXT OF DPRPPAUT
           PERFORM WITH TEST AFTER
                   VARYING TALLY FROM 1 BY 1
                   UNTIL (NOT WS-SQLCODE-WAIT) OR
                         (TALLY = 2)
              EXEC SQL
                UPDATE DBO.PRP_PRE_AUTH
                 SET   POST_FLG = :DPRPPAUT.POST-FLG,
                       MDY_TS   = CURRENT TIMESTAMP,
                       MDY_USR  = :DPRPPAUT.MDY-USR
                 WHERE CRD_NBR     = :DPRPPAUT.CRD-NBR
                   AND MRCH_NBR    = :DPRPPAUT.MRCH-NBR
                   AND PRE_AUTH_DT = :DPRPPAUT.PRE-AUTH-DT
                   AND PRE_AUTH_TS = :DPRPPAUT.PRE-AUTH-TS
              END-EXEC
              MOVE SQLCODE TO WS-SQLCODE
              IF WS-SQLCODE-WAIT
                 EXEC CICS DELAY INTERVAL(5) END-EXEC
              END-IF
           END-PERFORM
           PERFORM CHECK-NORMAL-SQL.
      *-----------------------------
       20630-GET-PRICE-CONTROL-INFO.
      *-----------------------------
DR0422     MOVE '20630-GET-PRICE-CONTROL-INFO' TO CXUTS0ML-PARAGRAPH.
      **** (GET VARIANCE INFORMATION FOR PPG & CALC VALIDATION) ****
      **** (ALSO GET YCODE MANUAL PROCESSING FEE              ) ****
           MOVE SPACES     TO SERVICE-CENTER-PRICE-MASTER
           MOVE 'XX'       TO SCPM-KEY
           EXEC CICS READ
                DATASET ('SCSTATE')
                INTO    (SERVICE-CENTER-PRICE-MASTER)
                RIDFLD  (SCPM-KEY)
                RESP    (EIBRESP)
           END-EXEC
DR0422     MOVE SCPM-KEY          TO CXUTS0ML-COMMAND
           PERFORM CHECK-FOR-NORMAL-EIBRESP
           PERFORM 60300-CHECK-SCSTATE-NUMERICS.

      *-----------------------------
       20640-SETUP-PPG-CHECK.
      *-----------------------------
           MOVE 'N' TO WS-EXIT-PPG-CHECK.
           EVALUATE TRUE
              WHEN PGRM-FUNCTION-CASH-ONLY
                 MOVE WS-UIWA-CASH-AMT TO INP-TOTAL-COST
                 MOVE 0 TO INP-NR-GALLONS,
                           INP-PRICE-GALLON,
                           WS-CDN-DISC,
                           WS-PERCENTAGES,
MP1004                     WS-WORK-TOTAL-AR
                 MOVE 'Y' TO WS-EXIT-PPG-CHECK
              WHEN PGRM-FUNCTION-OIL-ONLY
                 MOVE WS-UIWA-OIL-QTY TO INP-NR-GALLONS
                 MOVE WS-UIWA-OIL-COST TO INP-TOTAL-COST
                 MOVE 0 TO INP-PRICE-GALLON,
                           WS-CDN-DISC,
                           WS-PERCENTAGES,
MP1004                     WS-WORK-TOTAL-AR
                 MOVE 'Y' TO WS-EXIT-PPG-CHECK
              WHEN PGRM-FUNCTION-PRODUCT-ONLY
                 COMPUTE INP-TOTAL-COST = WS-UIWA-PR1-COST +
                                          WS-UIWA-PR2-COST +
                                          WS-UIWA-PR3-COST
                 MOVE 0 TO INP-PRICE-GALLON,
                           WS-CDN-DISC,
                           WS-PERCENTAGES,
MP1004                     WS-WORK-TOTAL-AR,
                           INP-NR-GALLONS
                 MOVE 'Y' TO WS-EXIT-PPG-CHECK
           END-EVALUATE.

      *-----------------------------
       20650-CHECK-CALC-ERROR.
      *-----------------------------
      **** (START PPG VALIDATION) ****
           MOVE FP-CALC-ERR-MESSAGE TO MULTIPLY-ERROR-MESSAGE.

           IF TRAILER-PURCHASE = 1
              PERFORM 20651-CHECK-CALC-ERROR-TRL
           END-IF.
           IF TRACTOR-PURCHASE = 1
              PERFORM 20652-CHECK-CALC-ERROR-TRAC
           END-IF.

      *-----------------------------
       20651-CHECK-CALC-ERROR-TRL.
      *-----------------------------
              MOVE WS-UIWA-REF-QTY      TO INP-NR-GALLONS
              MOVE WS-UIWA-REF-PPU      TO INP-PRICE-GALLON
              MOVE WS-UIWA-REF-COST     TO INP-TOTAL-COST
              MOVE WS-UIWA-REF-QTY-SC   TO INP2-NR-GALLONS
              MOVE WS-UIWA-REF-PPU-SC   TO INP2-PRICE-GALLON
              MOVE WS-UIWA-REF-COST-SC  TO INP2-TOTAL-COST
              PERFORM VERIFY-PRICE
              IF THERE-WAS-AN-ERROR
                 MOVE FP-CALC-ERR-MESSAGE-N TO POS-ERROR-NUMBER
                 MOVE -1  TO TRGLNL
CP0506           MOVE 'I' TO TRGLNA, TRCOSTA, TRTOTALA, TRSPRDA
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20652-CHECK-CALC-ERROR-TRAC.
      *-----------------------------
           IF (WS-UIWA-OTH-QTY > ZEROES OR
               WS-UIWA-OTH-COST > ZEROES)
              MOVE WS-UIWA-OTH-QTY      TO INP-NR-GALLONS
              MOVE WS-UIWA-OTH-PPU      TO INP-PRICE-GALLON
              MOVE WS-UIWA-OTH-COST     TO INP-TOTAL-COST
              MOVE WS-UIWA-OTH-QTY-SC   TO INP2-NR-GALLONS
              MOVE WS-UIWA-OTH-PPU-SC TO INP2-PRICE-GALLON
              MOVE WS-UIWA-OTH-COST-SC  TO INP2-TOTAL-COST
              PERFORM VERIFY-PRICE
              IF THERE-WAS-AN-ERROR
                 MOVE FP-CALC-ERR-MESSAGE-N TO POS-ERROR-NUMBER
                 MOVE -1 TO FPGLNSBL
MP0705           MOVE 'I' TO FPGLNSBA, FPCOSTBA, FPTTLBA, FPSPRDA,
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           IF (WS-UIWA-NR1-QTY > ZEROES OR
               WS-UIWA-NR1-COST > ZEROES)
              MOVE WS-UIWA-NR1-QTY       TO INP-NR-GALLONS
              MOVE WS-UIWA-NR1-PPU       TO INP-PRICE-GALLON
              MOVE WS-UIWA-NR1-COST      TO INP-TOTAL-COST
              MOVE WS-UIWA-NR1-QTY-SC    TO INP2-NR-GALLONS
              MOVE WS-UIWA-NR1-PPU-SC TO INP2-PRICE-GALLON
              MOVE WS-UIWA-NR1-COST-SC   TO INP2-TOTAL-COST
              PERFORM VERIFY-PRICE
              IF THERE-WAS-AN-ERROR
                 MOVE FP-CALC-ERR-MESSAGE-N TO POS-ERROR-NUMBER
                 MOVE -1 TO NR1GLNSL
CP0506           MOVE 'I' TO NR1GLNSA, NR1COSTA, NR1TTLA, N1SPRDA
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           IF (WS-UIWA-NR2-QTY > ZEROES OR
               WS-UIWA-NR2-COST > ZEROES)
              MOVE WS-UIWA-NR2-QTY      TO INP-NR-GALLONS
              MOVE WS-UIWA-NR2-PPU      TO INP-PRICE-GALLON
              MOVE WS-UIWA-NR2-COST     TO INP-TOTAL-COST
              MOVE WS-UIWA-NR2-QTY-SC   TO INP2-NR-GALLONS
              MOVE WS-UIWA-NR2-PPU-SC   TO INP2-PRICE-GALLON
              MOVE WS-UIWA-NR2-COST-SC  TO INP2-TOTAL-COST
              PERFORM VERIFY-PRICE
              IF THERE-WAS-AN-ERROR
                 MOVE FP-CALC-ERR-MESSAGE-N TO POS-ERROR-NUMBER
                 MOVE -1 TO FPGLNSL
CP0506           MOVE 'I' TO FPGLNSA, FPCOSTA, FPTTLA, N2SPRDA
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
       20660-VALIDATE-SVC-TYPE.
      *-----------------------------
      **** (VALIDATE SERVICE TYPE & FUEL PPG) ****
           MOVE INP-PRICE-GALLON  TO HOLD-INP-PRICE-GALLON.

      *** (SEE IF I NEED TO SKIP SERVICE TYPE/FUEL PRICE VALIDATION) ***
           IF NOT FUEL-PRICE-TO-BE-CHECKED
              MOVE 0 TO COM-FP-FULL-PRICE
              MOVE 0 TO COM-FP-MINI-PRICE
              MOVE 0 TO COM-FP-SELF-PRICE.

      **** (VALIDATE SERVICE TYPE FIELD) ****
           IF FPFSI = 'F' OR
              FPFSI = 'M' OR
              FPFSI = 'S' OR
CC0502        FPFSI = 'W'
              NEXT SENTENCE
           ELSE
              MOVE SRVC-TYPE-ERROR-MESSAGE   TO OUT-COMENT
              MOVE SRVC-TYPE-ERROR-MESSAGE-N TO POS-ERROR-NUMBER
              MOVE -1                        TO FPFSL
              MOVE DFHBMASB                  TO FPFSHDA
              MOVE 'I'                       TO FPFSA
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      **** (VALIDATE THAT CUST CAN USE THE SELECTED SVC TYPE) ****
           EVALUATE TRUE ALSO TRUE
CP0807        WHEN SELF-SERVICE-ONLY ALSO FPFSI NOT = 'S'
                 MOVE SRVC-TYPE-ERROR-MESSAGE   TO OUT-COMENT
                 MOVE SRVC-TYPE-ERROR-MESSAGE-N TO POS-ERROR-NUMBER
                 MOVE -1                        TO FPFSL
                 MOVE DFHBMASB                  TO FPFSHDA
                 MOVE 'I'                       TO FPFSA
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
CP0807        WHEN SELF-MINI-SERVICE  ALSO FPFSI     = 'F'
                 MOVE SRVC-TYPE-ERROR-MESSAGE   TO OUT-COMENT
                 MOVE SRVC-TYPE-ERROR-MESSAGE-N TO POS-ERROR-NUMBER
                 MOVE -1                        TO FPFSL
                 MOVE DFHBMASB                  TO FPFSHDA
                 MOVE 'I'                       TO FPFSA
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
           END-EVALUATE.

      **** (SEE IF THIS IS NOT A COMDATA LOCATION) ****
           MOVE COM-FP-SC-CODE TO  SCMSTR-KEY.
           IF SCM-KEY-NUM = '999'
              PERFORM FP-0108
              MOVE 'Y' TO WS-EXIT-PPG-CHECK
           END-IF.

      *-----------------------------
       20670-GET-STATE-PPG-INFO.
      *-----------------------------
      **** (GET STATE PRICE INFORMATION) ****
      **** (POS HAS ALREADY READ THIS INFORMATION) ****
      **** (MAKE SURE TRACTOR FUEL WAS PURCHASED) ****
           IF TRACTOR-PURCHASE NOT = 1 OR
              WS-UIWA-NR2-QTY      = 0
              PERFORM FP-0108
              MOVE 'Y' TO WS-EXIT-PPG-CHECK
           END-IF.

           IF WS-EXIT-PPG-CHECK = 'N'
              PERFORM 20671-GET-STATE-PPG-INFO
           END-IF.

      *-----------------------------
       20671-GET-STATE-PPG-INFO.
      *-----------------------------
DR0422     MOVE '20671-GET-STATE-PPG-INFO'  TO CXUTS0ML-PARAGRAPH.

           IF COM-TS-STATE NOT > SPACES
              MOVE SCM-KEY-ST TO COM-TS-STATE.
           IF NOT THIS-BE-A-PC-REQUEST OR
              THIS-BE-TERMINAL-FUEL
              MOVE SPACES TO SERVICE-CENTER-STATE-RECORD
              MOVE COM-TS-STATE TO SCSR-STATE
              EXEC CICS READ
                   DATASET ('SCSTATE')
                   INTO    (SERVICE-CENTER-STATE-RECORD)
                   RIDFLD  (SCSR-KEY)
                   RESP    (EIBRESP)
              END-EXEC
DR0422        MOVE SCSR-KEY          TO CXUTS0ML-COMMAND
              PERFORM CHECK-FOR-NOTFND-EIBRESP
CP0506        MOVE 'Y' TO  WS-READ-SCSTATE-SW
           END-IF
           PERFORM 60300-CHECK-SCSTATE-NUMERICS.

      *-----------------------------
       20680-CHECK-MIN-MAX-PPG.
      *-----------------------------
      **** (SEE IF ENTERED PRICE IS WITHIN MIN AND MAX FOR STATE) ****
           IF INP2-PRICE-GALLON < SCSR-MIN-FUEL-PRICE OR
              INP2-PRICE-GALLON > SCSR-MAX-FUEL-PRICE
              MOVE SCSR-MIN-FUEL-PRICE TO PRICE-EXCEEDS-MAX-MIN
              MOVE SCSR-MAX-FUEL-PRICE TO PRICE-EXCEEDS-MAX-MAX
              MOVE PRICE-EXCEEDS-MAX   TO OUT-COMENT
              MOVE PRICE-EXCEEDS-MAX-N TO POS-ERROR-NUMBER
              MOVE -1                  TO FPCOSTL
              MOVE 'I'                 TO FPCOSTA
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           IF THIS-BE-TERMINAL-FUEL
              MOVE 'Y' TO WS-EXIT-PPG-CHECK
           END-IF.

      *-----------------------------
       20690-SETUP-PPG-VAR-CHECK.
      *-----------------------------
      **** (ALL AMOUNTS MUST BE VALIDATED IN US) ****
      *    IF COM-CN-COMP-US-SC
      *       MOVE WS-UIWA-NR2-PPU-SC TO INP-PRICE-GALLON,
      *                                    HOLD-INP-PRICE-GALLON.
      *    IF COM-CN-COMP-CN-SC
      *       MOVE WS-UIWA-NR2-PPU TO WS-PPL
      *       PERFORM PPL-TO-PPG
      *       MOVE WS-PPG TO INP-PRICE-GALLON, HOLD-INP-PRICE-GALLON.

           MOVE WS-UIWA-NR2-PPU-SC TO INP-PRICE-GALLON,
                                        HOLD-INP-PRICE-GALLON.

      **** (DONT VALIDATE PPG IF STAND-IN) ****
           IF EIBTRMID IS = '9999'
              PERFORM FP-0108
              MOVE 'Y' TO WS-EXIT-PPG-CHECK
           END-IF.

      *-----------------------------
       20700-CALC-DAYS-SINCE-LST-XTN.
      *-----------------------------
      **** (COMPUTE # OF DAYS SINCE LAST XTN) ****
           IF COM-FP-PRICE-DATE NOT NUMERIC
JS2000        MOVE WS-CURRENT-DATE-YYDDD TO COM-FP-PRICE-DATE.
           IF COM-FP-PRICE-DATE > ZEROES
JS2000        MOVE +223 TO CALENDAR-OPTIONS
JS2000        MOVE COM-FP-PRICE-DATE TO CALENDAR-JULIAN-DATE
CP1011        CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
JS2000        MOVE CALENDAR-DAYS TO WS-CALC-DAYS
           ELSE
              MOVE 999999 TO WS-CALC-DAYS.

      *-----------------------------
       20710-CHECK-FOR-NEW-PRICE.
      *-----------------------------
      **** (IF NO PRICE FOR SERVICE TYPE EXIST ADD IT AND CONTINUE) ****
           IF TRACTOR-PURCHASE  = 1 AND
              WS-UIWA-NR2-QTY > 0
              IF (FPFSI = 'F' AND COM-FP-FULL-PRICE = 0) OR
                 (FPFSI = 'M' AND COM-FP-MINI-PRICE = 0) OR
                 (FPFSI = 'S' AND COM-FP-SELF-PRICE = 0)
                 PERFORM LOG-THE-PRICE
                 PERFORM FP-0108
                 MOVE 'Y' TO WS-EXIT-PPG-CHECK.

      *-----------------------------
       20720-SEE-IF-PRICE-WAS-ALTER.
      *-----------------------------
           IF COM-PNET-BULK-FUEL-YES            OR
              COM-PNET-NEGOTIATED-PRICING = 'Y' OR
              COM-COST-PLUS-PRICE-ALTERED
              PERFORM FP-0108
              MOVE 'Y' TO WS-EXIT-PPG-CHECK.

      *-----------------------------
       20730-CHECK-PPG-VARIANCE.
      *-----------------------------
      **** (DETERMINE WHICH VARIANCE TO USE) ****
JS0298     PERFORM 20731-DETERMINE-VARIANCE.
           PERFORM 20731-SETUP-PPG-VAR1.
           PERFORM 20732-CHECK-PPG-VAR1.
           IF WS-EXIT-PPG-CHECK = 'N'
              PERFORM 20733-CHECK-PPG-TAX
           END-IF.
           IF WS-EXIT-PPG-CHECK = 'N'
              PERFORM 20734-CHECK-PPG-VAR2
           END-IF.

      *-----------------------------
JS0298 20731-DETERMINE-VARIANCE.
      *-----------------------------
           EVALUATE TRUE
              WHEN CDN-CREDIT-PRICED-FLAG = 'U' OR
                   CDN-CREDIT-PRICED-FLAG = 'T' OR
SB0315             CDN-CREDIT-PRICED-FLAG = 'Y' OR
SB0315             CDN-CREDIT-PRICED-FLAG = 'F'
                 MOVE SCPM-LEVEL-1-VARIANCE-CREDIT TO
                      WS-SCPM-LEVEL-1-VARIANCE
              WHEN CDN-CREDIT-PRICED-FLAG = 'C' AND
                   COM-CREDIT-PRICED-FLAG = 'Y'
                 MOVE SCPM-LEVEL-1-VARIANCE-CREDIT TO
                      WS-SCPM-LEVEL-1-VARIANCE
              WHEN OTHER
                 MOVE SCPM-LEVEL-1-VARIANCE TO
                      WS-SCPM-LEVEL-1-VARIANCE
           END-EVALUATE.

      *-----------------------------
       20731-SETUP-PPG-VAR1.
      *-----------------------------
      ***** (CHECK THE LEVEL 1 VARIANCE) ****
           MOVE ZEROES TO WS-PPG-VAR.
           EVALUATE TRUE
              WHEN FPFSI = 'F'
                 COMPUTE WS-PPG-VAR = COM-FP-FULL-PRICE -
                                      INP-PRICE-GALLON
              WHEN FPFSI = 'M'
                 COMPUTE WS-PPG-VAR = COM-FP-MINI-PRICE -
                                      INP-PRICE-GALLON
              WHEN FPFSI = 'S'
                 COMPUTE WS-PPG-VAR = COM-FP-SELF-PRICE -
                                      INP-PRICE-GALLON
           END-EVALUATE.
           IF WS-PPG-VAR < 0 THEN
              COMPUTE WS-PPG-VAR = WS-PPG-VAR * -1
           END-IF.

      *-----------------------------
       20732-CHECK-PPG-VAR1.
      *-----------------------------

SD0321* If this is an SP11, always log the price
SD0321     IF THIS-BE-A-SMART-FUEL-AUTH
SD0321         PERFORM LOG-THE-PRICE
SD0321         PERFORM FP-0108
SD0321         MOVE 'Y' TO WS-EXIT-PPG-CHECK
SD0321     ELSE
              EVALUATE TRUE
                 WHEN WS-PPG-VAR > WS-SCPM-LEVEL-1-VARIANCE
                    IF WS-CALC-DAYS > SCPM-LEVEL-1-DAYS
                       PERFORM LOG-THE-PRICE
                       PERFORM FP-0108
                       MOVE 'Y' TO WS-EXIT-PPG-CHECK
                    END-IF
                 WHEN OTHER
                    IF WS-PPG-VAR > +.009 OR
JS2000                 COM-FP-PRICE-DATE NOT = WS-CURRENT-DATE-YYDDD
                       PERFORM LOG-THE-PRICE
                    END-IF
                    MOVE 'Y' TO WS-EXIT-PPG-CHECK
                    PERFORM FP-0108
              END-EVALUATE
           END-IF
           .

      *-----------------------------
       20733-CHECK-PPG-TAX.
      *-----------------------------
      **** (BEFORE CHECKING LEVEL 2 VARIANCE CHECK FOR TAX) ****
           IF (SCSR-TAX-EITHER) AND (COM-SCM-TAX-IN-POSTED)
              IF WS-TAX-TRIED = 'N'
                 COMPUTE INP-PRICE-GALLON = INP-PRICE-GALLON +
                                            SCSR-TAX-RATE
                 MOVE 'Y' TO WS-TAX-TRIED
                 MOVE WS-PPG-VAR TO WS-TAX-TRIED-VAR
                 PERFORM 20732-CHECK-PPG-VAR1.
           IF (SCSR-TAX-EITHER AND COM-SCM-TAX-NOT-IN-POSTED)
              IF WS-TAX-TRIED = 'N'
                 COMPUTE INP-PRICE-GALLON = INP-PRICE-GALLON -
                                            SCSR-TAX-RATE
                 MOVE WS-PPG-VAR TO WS-TAX-TRIED-VAR
                 MOVE 'Y' TO WS-TAX-TRIED
                 PERFORM 20732-CHECK-PPG-VAR1.

      **** (SAVE THE PPG THAT WAS CLOSEST TO THE POSTED PPG) ****
           IF WS-EXIT-PPG-CHECK = 'N'
              IF WS-TAX-TRIED = 'Y'
                 IF WS-PPG-VAR < WS-TAX-TRIED-VAR
                    MOVE INP-PRICE-GALLON TO WS-TAX-PPG-HOLD
                 END-IF
                 MOVE WS-TAX-TRIED-VAR TO WS-PPG-VAR.

      *-----------------------------
       20734-CHECK-PPG-VAR2.
      *-----------------------------
      **** (RESET PPG AND PPG VAR TO ORIGINAL VALUES) ****
           MOVE HOLD-INP-PRICE-GALLON TO INP-PRICE-GALLON.
           MOVE 'N'                   TO WS-TAX-TRIED.

      **** (CHECK LEVEL 2 VARIANCE) ****
           IF WS-PPG-VAR NOT > SCPM-LEVEL-2-VARIANCE
              IF WS-CALC-DAYS > SCPM-LEVEL-2-DAYS
                 PERFORM LOG-THE-PRICE
                 PERFORM FP-0108
                 MOVE 'Y' TO WS-EXIT-PPG-CHECK
              ELSE
                 IF (EIBAID               = DFHPF3)      OR
                    (COM-PNET-BRIDGE-FLAG = 'X' OR 'L')
                    PERFORM LOG-THE-PRICE
                    PERFORM FP-0108
                    MOVE 'Y' TO WS-EXIT-PPG-CHECK
                 ELSE
                    PERFORM SEND-FUEL-PRICE-ERROR.
           IF WS-PPG-VAR > SCPM-LEVEL-2-VARIANCE
              IF WS-CALC-DAYS > SCPM-LEVEL-2-DAYS
                 PERFORM LOG-THE-PRICE
                 PERFORM FP-0108
                 MOVE 'Y' TO WS-EXIT-PPG-CHECK
              ELSE
                 MOVE '*NO OVERRIDE' TO PRICE-ERROR-OVER-FLAG,
                                        PRICE-ERROR-OVER-FLAG-TAX,
                 PERFORM SEND-FUEL-PRICE-ERROR.

      *-------------------------------
       FP-0108.
      *-------------------------------
           MOVE HOLD-INP-PRICE-GALLON TO INP-PRICE-GALLON.

           IF FPFSI = 'M'
              MOVE 'S' TO WS-UIWA-SERVICE-TYPE.
           IF TRACTOR-PURCHASE = 1 AND
              WS-UIWA-NR2-QTY > 0
              ADD WS-UIWA-OTH-QTY TO INP-NR-GALLONS
              ADD WS-UIWA-OTH-COST TO INP-TOTAL-COST
              ADD WS-UIWA-NR1-QTY TO INP-NR-GALLONS
              ADD WS-UIWA-NR1-COST TO INP-TOTAL-COST.

           MOVE SPACES TO WS-FF-LOG-RECD.

           PERFORM DISCOUNT-CALCULATIONS
           IF THERE-WAS-AN-ERROR
              MOVE -1 TO FPFSL
              MOVE DFHBMASB TO FPFSHDA
              MOVE 'I' TO FPFSA
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *------------------------------
       20740-CHECK-LIMIT-FOR-CRD-NETW.
      *------------------------------
      **** (CHECK LIMITS FOR LIMITED NETW BY CARD) ****
           IF CDN-LIM-NETW-BY-CARD = 'Y' AND
              PRM-LIM-NETW-BY-CARD = 'Y'
              IF COM-NETWORK-BY-CARD = 'Y'
                 PERFORM CHECK-LIM-NETW-LIMITS.

      *-------------------------------
       20750-COMPUTE-BILLABLE-AND-NON.
      *-------------------------------
      **** (COMPUTE THE BILLABLE AND NON BILLABLE AMOUNTS.   ) ****
      **** (THE PRODUCT AMOUNTS HAVE ALREADY BEEN ADDED IN BY) ****
      **** (THE PRODUCT-CODE-EDIT ROUTINE                    ) ****
           COMPUTE WS-CURXMN = WS-UIWA-NR2-COST +
                               WS-UIWA-OTH-COST +
                               WS-UIWA-REF-COST +
                               WS-UIWA-NR1-COST +
                               WS-UIWA-OIL-COST +
                               WS-UIWA-PR1-COST +
                               WS-UIWA-PR2-COST +
                               WS-UIWA-PR3-COST +
                               WS-UIWA-TAX-AMT.
           COMPUTE WS-TOTAL-REQUEST = WS-CURXMN +
                                      WS-UIWA-CASH-AMT.
           COMPUTE WS2-CURXMN = WS-UIWA-NR2-COST-SC +
                                WS-UIWA-OTH-COST-SC +
                                WS-UIWA-REF-COST-SC +
                                WS-UIWA-NR1-COST-SC +
                                WS-UIWA-OIL-COST-SC +
                                WS-UIWA-PR1-COST-SC +
                                WS-UIWA-PR2-COST-SC +
                                WS-UIWA-PR3-COST-SC +
                                WS-UIWA-TAX-AMT-SC.
           COMPUTE WS2-TOTAL-REQUEST = WS2-CURXMN +
                                       WS-UIWA-CASH-AMT-SC.
           COMPUTE WS3-CURXMN = WS-UIWA-NR2-COST-US +
                                WS-UIWA-OTH-COST-US +
                                WS-UIWA-REF-COST-US +
                                WS-UIWA-NR1-COST-US +
                                WS-UIWA-OIL-COST-US +
                                WS-UIWA-PR1-COST-US +
                                WS-UIWA-PR2-COST-US +
                                WS-UIWA-PR3-COST-US +
                                WS-UIWA-TAX-AMT-US.
           COMPUTE WS3-TOTAL-REQUEST = WS3-CURXMN +
                                       WS-UIWA-CASH-AMT-US.
082008***** NEED TO SAVE OFF THE PRODUCT AMOUNTS THAT GO INTO THESE
082008     MOVE WS-BILLABLE           TO WS-LTIH-PROD-BILLABLE
082008     MOVE WS2-BILLABLE          TO WS-LTIH-PROD-BILLABLE2
082008     MOVE WS-NON-BILLABLE       TO WS-LTIH-PROD-NON-BILLABLE
082008     MOVE WS2-NON-BILLABLE      TO WS-LTIH-PROD-NON-BILLABLE2
082008     MOVE WS2-BILLABLE-FUEL     TO WS-LTIH-PROD-BILLABLE-FUEL
082008     MOVE WS2-NON-BILLABLE-FUEL TO WS-LTIH-PROD-NON-BILLABLE-FUEL

MB0912     MOVE 'N' TO WS-TAX-ADDED.
JS0604     IF COM-DIRECT-BILLING-FUEL = '1'
              ADD WS-UIWA-NR2-COST, WS-UIWA-REF-COST,
                  WS-UIWA-OTH-COST, WS-UIWA-NR1-COST
                  TO WS-NON-BILLABLE
              ADD WS-UIWA-NR2-COST-SC, WS-UIWA-REF-COST-SC,
                  WS-UIWA-OTH-COST-SC, WS-UIWA-NR1-COST-SC
                  TO WS2-NON-BILLABLE, WS2-NON-BILLABLE-FUEL
MB0912        IF WS-UIWA-TAX-AMT > 0 OR WS-UIWA-TAX-AMT-SC > 0
MB0912           ADD WS-UIWA-TAX-AMT    TO WS-NON-BILLABLE
MB0912           ADD WS-UIWA-TAX-AMT-SC TO WS2-NON-BILLABLE
MB0912                                     WS2-NON-BILLABLE-FUEL
MB0912           MOVE 'Y' TO WS-TAX-ADDED
MB0912        END-IF
           ELSE
              ADD WS-UIWA-NR2-COST, WS-UIWA-REF-COST,
                  WS-UIWA-OTH-COST, WS-UIWA-NR1-COST
                  TO WS-BILLABLE
              ADD WS-UIWA-NR2-COST-SC, WS-UIWA-REF-COST-SC,
                  WS-UIWA-OTH-COST-SC, WS-UIWA-NR1-COST-SC
MB0912            TO WS2-BILLABLE, WS2-BILLABLE-FUEL
MB0912        IF WS-UIWA-TAX-AMT > 0 OR WS-UIWA-TAX-AMT-SC > 0
MB0912           ADD WS-UIWA-TAX-AMT    TO WS-BILLABLE
MB0912           ADD WS-UIWA-TAX-AMT-SC TO WS2-BILLABLE
MB0912                                     WS2-BILLABLE-FUEL
MB0912           MOVE 'Y' TO WS-TAX-ADDED
MB0912        END-IF
MB0912     END-IF.
JS0604     IF COM-DIRECT-BILLING-OIL = '1'
              ADD WS-UIWA-OIL-COST TO WS-NON-BILLABLE
              ADD WS-UIWA-OIL-COST-SC TO WS2-NON-BILLABLE
MB0912        IF WS-UIWA-TAX-AMT > 0 AND WS-TAX-ADDED = 'N'
MB0912           ADD WS-UIWA-TAX-AMT    TO WS-NON-BILLABLE
MB0912           ADD WS-UIWA-TAX-AMT-SC TO WS2-NON-BILLABLE
MB0912                                     WS2-NON-BILLABLE-FUEL
MB0912           MOVE 'Y' TO WS-TAX-ADDED
MB0912        END-IF
           ELSE
              ADD WS-UIWA-OIL-COST TO WS-BILLABLE
MB0912        ADD WS-UIWA-OIL-COST-SC TO WS2-BILLABLE
MB0912        IF WS-UIWA-TAX-AMT > 0 AND WS-TAX-ADDED = 'N'
MB0912           ADD WS-UIWA-TAX-AMT    TO WS-BILLABLE
MB0912           ADD WS-UIWA-TAX-AMT-SC TO WS2-BILLABLE
MB0912                                     WS2-BILLABLE-FUEL
MB0912           MOVE 'Y' TO WS-TAX-ADDED
MB0912        END-IF
MB0912     END-IF.
JS0604     IF COM-DIRECT-BILLING-CASH = '1'
              ADD WS-UIWA-CASH-AMT TO WS-NON-BILLABLE
              ADD WS-UIWA-CASH-AMT-SC TO WS2-NON-BILLABLE
           ELSE
              ADD WS-UIWA-CASH-AMT TO WS-BILLABLE
              ADD WS-UIWA-CASH-AMT-SC TO WS2-BILLABLE.
MB0912     IF WS-TAX-ADDED = 'N'
              IF WS-BILLABLE > ZEROES AND
                 WS-BILLABLE NOT = WS-UIWA-CASH-AMT
                 ADD WS-UIWA-TAX-AMT    TO WS-BILLABLE
                 ADD WS-UIWA-TAX-AMT-SC TO WS2-BILLABLE,
                                           WS2-BILLABLE-FUEL
              ELSE
                 ADD WS-UIWA-TAX-AMT    TO WS-NON-BILLABLE
                 ADD WS-UIWA-TAX-AMT-SC TO WS2-NON-BILLABLE,
                                           WS2-NON-BILLABLE-FUEL
MB0912        END-IF
MB0912     END-IF.

           PERFORM 20750-COMPUTE-US-AMOUNTS.

      *------------------------------
       20750-COMPUTE-US-AMOUNTS.
      *------------------------------
      ***** (WS3-BILLABLE AND WS3-NON-BILLABLE CONTAIN THE US AMOUNTS) *
           EVALUATE TRUE
              WHEN COM-CO-IS-US
                 MOVE WS-BILLABLE          TO WS3-BILLABLE
                 MOVE WS-NON-BILLABLE      TO WS3-NON-BILLABLE
              WHEN COM-SC-IS-US
                 MOVE WS2-BILLABLE         TO WS3-BILLABLE
                 MOVE WS2-NON-BILLABLE     TO WS3-NON-BILLABLE
              WHEN COM-CN-COMP-CN-SC
                 MOVE WS-BILLABLE          TO WS-CANADIAN-DOLLARS
                 PERFORM CAN-DOLLARS-TO-US
                 MOVE WS-US-DOLLARS        TO WS3-BILLABLE
                 MOVE WS-NON-BILLABLE      TO WS-CANADIAN-DOLLARS
                 PERFORM CAN-DOLLARS-TO-US
                 MOVE WS-US-DOLLARS        TO WS3-NON-BILLABLE
           END-EVALUATE.

      *-------------------------------
       20755-SET-BILLABLE-FLAGS.
      *-------------------------------
           SET WS-BILLABLE-IS-NOT-ALL-CASH TO TRUE.
           IF WS-UIWA-CASH-AMT > ZEROES
              IF WS-UIWA-CASH-AMT = WS-BILLABLE OR
                 WS-UIWA-CASH-AMT-SC = WS2-BILLABLE
                 SET WS-BILLABLE-IS-ALL-CASH TO TRUE.

      *------------------------------
       20757-CHECK-FOR-ZERO-AMT.
      *------------------------------
           IF WS-BILLABLE     = ZEROES AND
              WS-NON-BILLABLE = ZEROES
              IF NOT THIS-BE-AN-UNATTENDED-PRE-AUTH
                 MOVE ZERO-OR-NEG               TO OUT-COMENT
                 MOVE ZERO-OR-NEG-N             TO POS-ERROR-NUMBER
                 MOVE -1                        TO FPXPAMTL
                 IF THIS-BE-AN-UNATTENDED-AUTH
102810             OR FORCE-POST-FROM-PRE-AUTH
                    PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
                 ELSE
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-------------------------------
       20760-CHECK-AUTO-PRINT-FLAG.
      *-------------------------------
      **** (THIS IS ONE UGLY IF - I AM AFRAID TO TOUCH IT) ****
           IF THIS-IS-A-POSSIBLE-PRINT
              IF FPAUTOI = 'Y' OR 'N'
                 NEXT SENTENCE
              ELSE
                 IF NOT MNX-TRANSACTION AND
                    COM-PRM-NETWORKING NOT = 'D'
                    MOVE MUST-ANSWER-Y-N TO OUT-COMENT-1
                    MOVE MUST-ANSWER-Y-N-N TO POS-ERROR-NUMBER
                    MOVE '*' TO ERROR-FLAG
                    MOVE -1 TO FPAUTOL
ED0810              MOVE 'N'               TO WS-NOTIFY-IRIS-FL
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 ELSE
                    IF MNX-TRANSACTION
                       IF WS-UIWA-CASH-AMT > 0
                          MOVE 'A' TO FPCHKA
                          MOVE '8' TO FPCHKHDA
                          MOVE 'ENTER THE CHECK NR (TWICE) THAT WILL BE
      -                        'ISSUED-' TO FPCHKHDO
                          MOVE 'PRINT CHECK ON PRINTER-' TO FPAUTHDO
                          MOVE '?' TO FPAUTOO
                          MOVE '8' TO FPAUTHDA
                          MOVE 'A' TO FPAUTOA
                          MOVE MUST-ANSWER-Y-N TO OUT-COMENT-1
                          MOVE MUST-ENTER-CHECK TO OUT-COMENT-2
                          MOVE MUST-ENTER-CHECK-N TO POS-ERROR-NUMBER
                          MOVE '*' TO ERROR-FLAG
                          MOVE -1 TO FPCHKL
ED0810                    MOVE 'N'               TO WS-NOTIFY-IRIS-FL
                          PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                       ELSE
                          MOVE 'N' TO FPAUTOI
                    ELSE
                       IF WS-BILLABLE > 0
                          MOVE 'A' TO FPCHKA
                          MOVE '8' TO FPCHKHDA
                          MOVE '8' TO FPAUTHDA
                          MOVE 'A' TO FPAUTOA
                          MOVE 'ENTER THE CHECK NR (TWICE) THAT WILL BE
      -                        'ISSUED-' TO FPCHKHDO
                          MOVE 'PRINT CHECK ON PRINTER-' TO FPAUTHDO
                          MOVE '?' TO FPAUTOO
                          MOVE MUST-ANSWER-Y-N TO OUT-COMENT-1
                          MOVE MUST-ENTER-CHECK TO OUT-COMENT-2
                          MOVE MUST-ENTER-CHECK-N TO POS-ERROR-NUMBER
                          MOVE '*' TO ERROR-FLAG
                          MOVE -1 TO FPCHKL
ED0810                    MOVE 'N'               TO WS-NOTIFY-IRIS-FL
                          PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                       ELSE
                          MOVE 'N' TO FPAUTOI
           ELSE
              MOVE 'N' TO FPAUTOI.

      *-------------------------------
       20770-CHECK-DRAFT-ENTRY.
      *-------------------------------
           IF WS-UIWA-CHECK-NRX NOT > SPACES AND
              FPAUTOI = 'N'                  AND
              NOT THIS-IS-A-SETTLEMENT-ITEM  AND
              NOT THIS-BE-TERMINAL-FUEL
              EVALUATE TRUE
                 WHEN MNX-TRANSACTION
                    PERFORM 20771-CHECK-DRAFT-ENTRY-MNX
                 WHEN COM-PRM-NETWORKING = 'D'
                    PERFORM 20772-CHECK-DRAFT-ENTRY-DB
                 WHEN OTHER
                    MOVE -1 TO FPCHKL
                    MOVE MUST-ENTER-CHECK TO OUT-COMENT
                    MOVE MUST-ENTER-CHECK-N TO POS-ERROR-NUMBER
ED0810              MOVE 'N'               TO WS-NOTIFY-IRIS-FL
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-EVALUATE.

      *-------------------------------
       20771-CHECK-DRAFT-ENTRY-MNX.
      *-------------------------------
           IF WS-UIWA-CASH-AMT > ZEROES
              MOVE -1 TO FPCHKL
              MOVE 'ENTER THE CHECK NR (TWICE) THAT WILL BE ISSUED-'
                TO FPCHKHDO
              MOVE MUST-ENTER-CHECK TO OUT-COMENT
              MOVE MUST-ENTER-CHECK-N TO POS-ERROR-NUMBER
              MOVE 'A' TO FPCHKA
              MOVE '8' TO FPCHKHDA
ED0810        MOVE 'N'               TO WS-NOTIFY-IRIS-FL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-------------------------------
       20772-CHECK-DRAFT-ENTRY-DB.
      *-------------------------------
           IF WS-BILLABLE > ZEROES
              MOVE -1 TO FPCHKL
              MOVE 'ENTER THE CHECK NR (TWICE) THAT WILL BE ISSUED-'
                TO FPCHKHDO
              MOVE MUST-ENTER-CHECK TO OUT-COMENT
              MOVE MUST-ENTER-CHECK-N TO POS-ERROR-NUMBER
              MOVE 'A' TO FPCHKA
              MOVE '8' TO FPCHKHDA
ED0810        MOVE 'N'               TO WS-NOTIFY-IRIS-FL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-------------------------------
       20780-VALIDATE-DRIVER-NAME.
      *-------------------------------
           MOVE WS-UIWA-DRV-NAME TO WS-DRVNM.
           MOVE 0            TO ORDRPTR-RRN.
           SET LTR-INDX, DRV-INDX TO 1.
           IF WS-UIWA-DRV-NAME NOT > SPACES
              EVALUATE TRUE
                 WHEN THIS-BE-AN-UNATTENDED-AUTH
102810           WHEN FORCE-POST-FROM-PRE-AUTH
                    MOVE 'AGNAME'  TO WS-UIWA-DRV-NAME
                 WHEN THIS-BE-AN-ATM-XTN
                    MOVE 'ATMNAME' TO WS-UIWA-DRV-NAME
              END-EVALUATE.

           PERFORM
             VARYING DRV-INDX FROM 1 BY 1
             UNTIL   DRV-INDX = 3
               PERFORM 20781-VALIDATE-NAME-CHAR
               SUBTRACT 1 FROM TABNBR (LTR-INDX) GIVING LTR-VALUE
               IF DRV-INDX = 1
                  MULTIPLY 676 BY LTR-VALUE GIVING ORDRPTR-RRN
               ELSE
                  MULTIPLY 26 BY LTR-VALUE
                  ADD LTR-VALUE TO ORDRPTR-RRN
               END-IF
           END-PERFORM.
           ADD TABNBR (LTR-INDX) TO ORDRPTR-RRN.

      *-------------------------------
       20781-VALIDATE-NAME-CHAR.
      *-------------------------------
           PERFORM
              VARYING LTR-INDX FROM 1 BY 1
              UNTIL WS-DRVN (DRV-INDX) = LTR-SRCH (LTR-INDX) OR
                    WS-DRVN (DRV-INDX) < LTR-SRCH (LTR-INDX) OR
                    LTR-INDX           > 25
           END-PERFORM
           IF WS-DRVN (DRV-INDX) NOT = LTR-SRCH (LTR-INDX)
              EVALUATE TRUE
                 WHEN THIS-BE-AN-UNATTENDED-AUTH
102810           WHEN FORCE-POST-FROM-PRE-AUTH
                    MOVE ' ' TO ERROR-FLAG
                    MOVE 'AGNAME' TO WS-UIWA-DRV-NAME
                 WHEN THIS-BE-AN-ATM-XTN
                    MOVE ' ' TO ERROR-FLAG
                    MOVE 'ATMNAME' TO WS-UIWA-DRV-NAME
                 WHEN OTHER
                    MOVE INVALID-CHAR-IN-NAME TO OUT-COMENT
                    MOVE INVALID-CHAR-IN-NAME-N TO POS-ERROR-NUMBER
                    MOVE -1 TO FPNAMEL
                    MOVE 'I' TO FPNAMEA
                    MOVE DFHBMASB TO FPNAMHDA
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-------------------------------
       20790-CHECK-CARD-PURC-LIMIT.
      *-------------------------------
      **** (SEE IF CARD PURCHASE LIMIT WAS EXCEEDED) ****
           IF (CSR-PURC-LIMIT-ON-CARD) AND
              (NOT THIS-BE-A-VRU-XTN)  AND
              (PRM-PURC-USED + WS-CURXMN > PRM-PURC-INITIAL)
              EVALUATE TRUE
                 WHEN COM-CN-COMP-US-SC
                    SUBTRACT PRM-PURC-USED FROM PRM-PURC-INITIAL GIVING
                             WS-CANADIAN-DOLLARS
                    PERFORM CAN-DOLLARS-TO-US
                    MOVE WS-US-DOLLARS TO XCS-PURC-REQ
                 WHEN COM-US-COMP-CN-SC
                    SUBTRACT PRM-PURC-USED FROM PRM-PURC-INITIAL GIVING
                             WS-US-DOLLARS
                    PERFORM US-DOLLARS-TO-CAN
                    MOVE WS-CANADIAN-DOLLARS TO XCS-PURC-REQ
                 WHEN OTHER
                    SUBTRACT PRM-PURC-USED FROM PRM-PURC-INITIAL GIVING
                             XCS-PURC-REQ
              END-EVALUATE
              MOVE CARD-PURCHASE-EXCEEDED     TO OUT-COMENT
              MOVE CARD-PURCHASE-EXCEEDED-N   TO POS-ERROR-NUMBER
              MOVE -1 TO FPCMT1L
              IF LIMITS-ALTERED-FOR-PO = 'Y'
                 MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
                 MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
              END-IF
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-----------------------------
102810 20795-CHECK-FLEET-LIMITS.
      *-----------------------------
      **** (VALIDATE THE FLEET LIMITS) ****
           IF CDN-FLEET-LIMIT-FLAG = 'Y'
              MOVE 'B'                   TO FMLP-LIM-PROCESS-IND
              MOVE WS-CURXMN             TO FMLP-CURXMN
              IF NOT THIS-BE-AN-UNATTENDED-PRE-AUTH
                 PERFORM PII-SETUP-FMLP-POSTING
              END-IF
              PERFORM LINK-TO-TSFMO0LP
              IF FMLP-ERROR
                 MOVE FMLP-FPCMT1L          TO FPCMT1L
                 MOVE FMLP-OUT-COMENT       TO OUT-COMENT
                 MOVE FMLP-POS-ERROR-NUMBER TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
           END-IF.
      *-----------------------------
102810 LINK-TO-TSFMO0LP.
      *-----------------------------
DR0422     MOVE 'LINK-TO-TSFMO0LP'          TO CXUTS0ML-PARAGRAPH.

           EXEC CICS LINK
             PROGRAM  ('TSFMO0LP')
             COMMAREA (WS-TSFMO0LP-COMMAREA)
101014       LENGTH   (LENGTH OF WS-TSFMO0LP-COMMAREA)
             RESP     (EIBRESP)
           END-EXEC
           PERFORM CHECK-FOR-NORMAL-EIBRESP
           IF WS-TSFMO0LP-RETURN-CODE NOT = ZERO
              MOVE WS-TSFMO0LP-RETURN-CODE TO
                   WS-TSFMO0LP-ABEND-CODE
              EXEC CICS ABEND
                ABCODE (WS-TSFMO0LP-ABEND)
              END-EXEC
           END-IF.
      *-------------------------------
       20800-CHECK-UNIT-LIMITS.
      *-------------------------------
           IF PGRM-FUNCTION > ZEROES OR
              THIS-BE-AN-UNATTENDED-PRE-AUTH
              PERFORM 20801-CHECK-TRIP-ALLOWANCE
              PERFORM 20802-COMPUTE-CURRENT-DAY
              PERFORM 20803-CHECK-MAX-DAILY
              PERFORM 20804-CHECK-SPECIAL-LIMITS.

      *-------------------------------
       20801-CHECK-TRIP-ALLOWANCE.
      *-------------------------------
CP0807** CHANGED VARIABLES FOR FPMASTR REPLACEMENT **
CP0807     IF WS-RFL-MAX-PURC-VARIANCE = ZERO
CP0807        MOVE 25  TO WS-RFL-MAX-PURC-VARIANCE.
CP0807     IF TRIP-ALLOWANCE-SET
              MOVE 0   TO WS-RFL-MAX-PURC-VARIANCE
CP0807        IF UNITMST-INIT-TRIP-ALLOW > 0 AND
CP0807           UNITMST-TRIP-ALLOW-USED + WS-CURXMN >
CP0807           UNITMST-INIT-TRIP-ALLOW
                    MOVE TRIP-ALLOW-EXCEEDED     TO OUT-COMENT
                    MOVE TRIP-ALLOW-EXCEEDED-N   TO POS-ERROR-NUMBER
                    MOVE TRIP-ALLOW-EXCEEDED-NBR TO CALL-COMPANY-NBR
                    MOVE CALL-COMPANY-MSG        TO NEW-OUT-MESSAGE
                    MOVE 'Y'                     TO VCWS-ERROR-IND
                    MOVE -1                      TO FPCMT1L
                    IF LIMITS-ALTERED-FOR-PO = 'Y'
                       MOVE PO-LIMIT-EXCEEDED    TO OUT-COMENT
                       MOVE PO-LIMIT-EXCEEDED-N  TO POS-ERROR-NUMBER
                    END-IF
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-------------------------------
       20802-COMPUTE-CURRENT-DAY.
      *-------------------------------
CP0807** VARIABLES CHANGED FOR FPMASTR REPLACEMENT **
           MOVE WS-CURXMN TO WS-CURR-DAY-TOTAL.
CP0807     IF WS-CURRENT-DATE-YYDDD = UNITMST-DATE-LAST-XTN
              COMPUTE WS-CURR-DAY-TOTAL = WS-CURR-DAY-TOTAL          +
CP0807                                    UNITMST-CURR-DAY-REQ-AMT   +
CP0807                                    UNITMST-CURR-DAY-OIL-COST.

      *-------------------------------
       20803-CHECK-MAX-DAILY.
      *-------------------------------
CP0807** VARIABLES CHANGED FOR FPMASTR REPLACEMENT **
CP0807     IF WS-RFL-MAX-PURC-DLY-FUEL   = ZEROES  OR
CP0807        WS-CURR-DAY-TOTAL          < WS-RFL-MAX-PURC-DLY-FUEL
              NEXT SENTENCE
            ELSE
CP0807        MULTIPLY WS-RFL-MAX-PURC-VARIANCE-R BY
CP0807                 WS-RFL-MAX-PURC-DLY-FUEL
                GIVING WS-EXTRA-AMT ROUNDED
CP0807        ADD WS-RFL-MAX-PURC-DLY-FUEL   TO WS-EXTRA-AMT
              IF WS-CURR-DAY-TOTAL NOT > WS-EXTRA-AMT
                MOVE 'O' TO SAVE-BY-GRACE-FLAG
              ELSE
CP0807          MOVE WS-RFL-MAX-PURC-DLY-FUEL   TO PURC-MAX-NR
CP0807          MOVE WS-RFL-MAX-PURC-VARIANCE   TO PURC-VAR-NR
                MOVE WS-EXTRA-AMT               TO PURC-TOTAL-NR
                SUBTRACT WS-CURR-DAY-TOTAL FROM WS-EXTRA-AMT
                MOVE WS-EXTRA-AMT TO PURC-DIFF-NR
                MOVE WS-EXTRA-AMT TO NEW-PURC-DIFF-NBR
CP0807          ADD UNITMST-CURR-DAY-REQ-AMT,
CP0807              UNITMST-CURR-DAY-OIL-COST
                  GIVING WS-EXTRA-AMT
                MOVE WS-EXTRA-AMT               TO PURC-USED-NR
                MOVE PURC-MAX-MESSAGE           TO OUT-COMENT
                MOVE PURC-MAX-MESSAGE-N TO POS-ERROR-NUMBER
                MOVE NEW-PURC-MAX-MESSAGE1      TO NEW-OUT-MSG1
                MOVE NEW-PURC-MAX-MESSAGE2      TO NEW-OUT-MSG2
                MOVE 'Y'                        TO VCWS-ERROR-IND
                MOVE -1 TO FPCMT1L
                IF LIMITS-ALTERED-FOR-PO = 'Y'
                   MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
                   MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
                END-IF
                PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-------------------------------
       20804-CHECK-SPECIAL-LIMITS.
      *-------------------------------
      **** (SPECIAL HANDLEING FOR MISSOURI/NEBRASKA EXPRESS) ****
CP0807     IF (WS-FP-ACCT-CODE = 'MI448' OR 'MI419') AND
              (MNX-SPECIAL)
              IF WS-UIWA-NR2-COST + WS-UIWA-OTH-COST > 60
                 MOVE MAX-PURC-MNX-DRIVER     TO OUT-COMENT
                 MOVE MAX-PURC-MNX-DRIVER-N   TO POS-ERROR-NUMBER
                 MOVE NEW-MAX-PURC-MNX-DRIVER TO NEW-OUT-MESSAGE
                 MOVE 'Y'                     TO VCWS-ERROR-IND
                 MOVE -1 TO FPCMT1L
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

SB0217*---------------------------------
SB0217 20805-CHECK-COMCHEK-FUEL-LMTS.
SB0217*---------------------------------
SB0217**** (SEE IF COMCHEK FUEL WITHDRAWL LIMIT EXCEEDED) ****
SB0217     IF PIR-CMCK-FUEL-LIMIT-USED NOT NUMERIC
SB0217        MOVE ZEROS TO PIR-CMCK-FUEL-LIMIT-USED.
SB0217     IF CSR-CMCK-FUEL-LIMIT NOT NUMERIC
SB0217        MOVE ZEROS TO CSR-CMCK-FUEL-LIMIT.
SB0217
SB0217     IF CDN-LOAD-PAY-NETWORK = 'C'
SB0217     AND (PIR-CMCK-FUEL-LIMIT-USED + WS-CURXMN >
SB0217                                           CSR-CMCK-FUEL-LIMIT)
SB0217        SUBTRACT PIR-CMCK-FUEL-LIMIT-USED
SB0217           FROM CSR-CMCK-FUEL-LIMIT
SB0217              GIVING CMCKMOB-AVAIL-AMT
SB0217        MOVE COMCHEK-MOB-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
SB0217        MOVE COMCHEK-MOB-LIMIT-EXCEEDED   TO OUT-COMENT
SB0217        MOVE -1 TO FPCMT1L
SB0217        PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
SB0217     END-IF.

      *-------------------------------
       20810-CHECK-BRIDGE-ACCT.
      *-------------------------------
           IF CDN-CUST-ACCT-CODE = 'BR000'
              IF NOT COM-PNET-BRIDGE-FLAG-YES
                 MOVE ACCT-BR000-MUST-BE-BRIDGE-N TO POS-ERROR-NUMBER
                 MOVE ACCT-BR000-MUST-BE-BRIDGE   TO OUT-COMENT
                 MOVE -1 TO FPINVNRL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
           IF CDN-CUST-ACCT-CODE = 'BR000'
              IF WS-BILLABLE > ZEROES
                 MOVE FUNDED-NOT-ALLOWED-N TO POS-ERROR-NUMBER
                 MOVE FUNDED-NOT-ALLOWED   TO OUT-COMENT
                 MOVE -1 TO FPINVNRL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-------------------------------
       20820-CHECK-CREDIT.
      *-------------------------------
           IF COM-CC-FUNDED-OVERRIDE
              MOVE 'F' TO COM-COMDATA-COMPLETE-STATUS.
091509     INITIALIZE DCREDITL
           MOVE 'N'    TO WS-EXIT-FLAG.

      *** (IF COMDATA COMPLETE CHECK CREDIT) ***
           IF (COM-COMDATA-COMPLETE-FLAG = 'Y') AND
              (WS3-NON-BILLABLE > ZEROES)       AND
              (COM-CC-FUNDED OR COM-CC-NON-FUNDED OR COM-CC-RECOURSE)
              PERFORM 20821-GET-CC-CREDIT
              PERFORM 20822-CHECK-CC-OVERRIDE
              PERFORM 20823-CHECK-CC-CREDIT1
              IF WS-EXIT-FLAG = 'N'
                 PERFORM 20823-CHECK-CC-CREDIT2
                 PERFORM 20823-CHECK-CC-CREDIT3.

           MOVE 'N'    TO WS-EXIT-FLAG.
           PERFORM 20825-CHECK-NORMAL-CREDIT1.
           PERFORM 20825-CHECK-NORMAL-CREDIT2.
           IF WS-EXIT-FLAG = 'N'
              PERFORM 20825-CHECK-NORMAL-CREDIT3.

      *-------------------------------
       20821-GET-CC-CREDIT.
      *-------------------------------
           EVALUATE TRUE
              WHEN COM-CC-FUNDED
                 MOVE CDN-COMDATA-CMPLT-ACCT-CODE
091509             TO CL-CO-CD OF DCREDITL
              WHEN COM-CC-RECOURSE
                 MOVE COM-CC-SCM-ACCT-CODE
091509             TO CL-CO-CD OF DCREDITL
              WHEN COM-CC-NON-FUNDED
                 CONTINUE
              WHEN OTHER
                 MOVE 'F'    TO COM-COMDATA-COMPLETE-STATUS
                 MOVE CDN-COMDATA-CMPLT-ACCT-CODE
091509             TO CL-CO-CD OF DCREDITL
           END-EVALUATE.

           IF COM-CC-NON-FUNDED
              MOVE COM-COMDATA-COMPLETE-LIMIT TO WS-CC-AVAIL
           ELSE
091509        MOVE 'A' TO WS-CREDITL-READ-SW
091509        PERFORM READ-CREDITL
091509        IF WS-CREDIT-LIMIT = ZEROES
                 MOVE 'Y'    TO WS-CC-CUT-OFF1
                 MOVE ZEROES TO WS-CC-AVAIL
              ELSE
                 MOVE 'N'    TO WS-CC-CUT-OFF1
091509           COMPUTE WS-CC-AVAIL =
091509                WS-CREDIT-LIMIT
091509            - ((WS-UPDATE-OR-AR-BAL
091509              - WS-CASH-RECEIVED)
091509              + WS-CURRENT-DAY)
091509           END-COMPUTE
              END-IF
           END-IF.

      *-------------------------------
       20822-CHECK-CC-OVERRIDE.
      *-------------------------------
      **** (IF FUNDED AND NO LIMIT, CHECK RECOURSE OVERRIDE) ****
           IF (COM-CC-FUNDED                 ) AND
              (WS3-NON-BILLABLE > WS-CC-AVAIL) AND
              (CDN-COMDATA-COMPLETE-HARD     ) AND
              (SCM-RECOURSE-FLAG-AVAIL       )
              MOVE 'O' TO COM-COMDATA-COMPLETE-STATUS
              MOVE 'COMDATA COMPLETE (FO)   ' TO FPCHKHDO
              PERFORM 20821-GET-CC-CREDIT.

      *-------------------------------
       20823-CHECK-CC-CREDIT1.
      *-------------------------------
      **** (SET UP THE COMDATA COMPLETE AVAILABLE) ****
           IF COM-CC-RECOURSE
              IF WS3-NON-BILLABLE  > WS-CC-AVAIL     OR
                 WS3-NON-BILLABLE  > COM-COMDATA-COMPLETE-LIMIT
                 MOVE ZEROES TO WS-CC-AVAIL.

      **** (SEE IF THE COMDATA COMPLETE LIMIT HAS BEEN EXCEEDED) ****
           IF CDN-COMDATA-COMPLETE-HARD
              IF WS3-NON-BILLABLE > WS-CC-AVAIL
                 PERFORM 20829-CREDIT-EXCEEDED
              ELSE
                 MOVE 'Y' TO WS-EXIT-FLAG.

      *-------------------------------
       20823-CHECK-CC-CREDIT2.
      *-------------------------------
      **** (IF SOFT LIMITS ARE USED AND THE RELATIONSHIP HAS NO ) ****
      **** (CREDIT, WE DO NOT CARE SO TURN OFF THE CUT OFF2 FLAG) ****
      **** (WE ONLY CARE IF THEY ARE NOT FUNDED                 ) ****
           IF (CDN-COMDATA-COMPLETE-SOFT) AND
              (COM-CC-CUT-OFF2 = 'Y')     AND
              (COM-CC-FUNDED)
              MOVE 'N' TO COM-CC-CUT-OFF2.

      **** (SOFT LIMITS TO BE USED LOG TO DC QUE IF NEEDED) ****
           IF CDN-COMDATA-COMPLETE-SOFT
              IF WS-CC-CUT-OFF1 = 'Y' OR
                 COM-CC-CUT-OFF2 = 'Y'
                 PERFORM 20829-CREDIT-EXCEEDED.

      *-------------------------------
       20823-CHECK-CC-CREDIT3.
      *-------------------------------
      **** (LINK TO CREDLOD FOR COMDATA COMPLETE AMT) ****
           IF CDN-COMDATA-COMPLETE-SOFT AND
              COM-CC-FUNDED
              PERFORM COPY-CREDLNK
              IF CCL-FUNC-RTC NOT = ZEROES
                 MOVE 'C' TO ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD.

      *-------------------------------
       20825-CHECK-NORMAL-CREDIT1.
      *-------------------------------

091509     MOVE CDN-CUST-ACCT-CODE TO CL-CO-CD OF DCREDITL
           IF (CDN-CUST-ACCT-CODE = 'BR000') OR
              (COM-PNET-BRIDGE-FLAG-YES AND WS3-BILLABLE = ZERO)
              MOVE ZEROES TO CCL-FUNC-RTC
091509*****   THIS AMOUNT NEEDS TO BE LARGER
091509        MOVE +99999999 TO WS-CREDIT-LIMIT
091509        MOVE ZEROES    TO WS-UPDATE-OR-AR-BAL
091509                          WS-CASH-RECEIVED
091509                          WS-CURRENT-DAY
           ELSE
091509        MOVE 'C' TO WS-CREDITL-READ-SW
091509        PERFORM READ-CREDITL
           END-IF


091914     IF WS-BALANCE-BASED AND
091914        CDN-BILL-AT-LOAD
091914        CONTINUE
091914     ELSE
080614        IF WS-CREDIT-LIMIT = ZEROS AND
080614           CDN-COMCASH-FLAG = 'Y'  AND
080614           CCL-FUNC-RTC = ZEROS
080614           MOVE 'Y' TO WS-EXIT-FLAG
091914        END-IF
091914     END-IF.

      **** (IF COMDATA COMPLETE AND SOME IS BILLABLE, BE SURE CUST) ****
      **** (HAS CREDIT                                            ) ****
091914     IF WS-EXIT-FLAG NOT = 'Y'
              IF COM-COMDATA-COMPLETE-FLAG = 'Y'
                 IF WS3-BILLABLE          > ZEROES
                    IF WS-CREDIT-LIMIT > ZEROES     OR
                       CL-OVRD-CD OF DCREDITL = 'O' OR
                       CL-FP-OVRD OF DCREDITL = 'O'
                       NEXT SENTENCE
                    ELSE
                       PERFORM 20829-CREDIT-EXCEEDED.

      *-------------------------------
       20825-CHECK-NORMAL-CREDIT2.
      *-------------------------------
           MOVE WS-TOTAL-REQUEST  TO WS-CURXMN.
           MOVE WS2-TOTAL-REQUEST TO WS2-CURXMN.
           MOVE WS3-TOTAL-REQUEST TO WS3-CURXMN.
           IF THIS-BE-TERMINAL-FUEL
              MOVE 0 TO WS-CURXMN
              MOVE 0 TO WS2-CURXMN
              MOVE 0 TO WS3-CURXMN.

      * GO CHECK FOR HIGH VOLUME CREDIT OVERRIDE
           MOVE SAVE-PCTUP TO FF-PERCENTAGES.

           IF COM-COMDATA-COMPLETE-FLAG = 'Y' AND
              WS3-BILLABLE = ZEROES
              MOVE ZEROES TO CCL-FUNC-RTC
091509*****   THIS AMOUNT NEEDS TO BE LARGER
091509        MOVE +99999999 TO WS-CREDIT-LIMIT
              PERFORM FP-0137
              MOVE 'Y'       TO WS-EXIT-FLAG.

      *-------------------------------
       20825-CHECK-NORMAL-CREDIT3.
      *-------------------------------
JS1199     PERFORM DETERMINE-IF-BALANCE-BASED
JS1199     IF WS-BALANCE-BASED  AND
MP0404        CDN-BILL-AT-LOAD
MP0404        CONTINUE
MP0404     ELSE
091509******** PROGRAM DOES NOT CHECK RETURN CODE OR USE ANYTHING
091509******** RETURNED FROM ROUTINE COPY-CREDLNK, EITHER HERE OR LATER,
091509******** SO IT WILL NO LONGER BE PERFORMED HERE
091509*****   IF (CDN-CUST-ACCT-CODE = 'BR000') OR
091509*****      (COM-PNET-BRIDGE-FLAG-YES AND WS3-BILLABLE = ZERO)
091509*****      PERFORM FP-0137
091509*****   ELSE
091509*****      PERFORM COPY-CREDLNK
091509*****      PERFORM FP-0137
091509*****   END-IF
              PERFORM FP-0137
MP0404     END-IF.

      *-------------------------
       FP-0137.
      *-------------------------
JS0903*** (SEE IF THE HARD HOLD FLAG IS GLOBAL TURNED OFF) ***
JS0903     INITIALIZE PROCCTL-RECORD
JS0903     MOVE 'CONTROL001'        TO PROCCTL-KEY-NAME
JS0903     EXEC CICS READ
JS0903          DATASET ('PROCCTL')
JS0903          INTO    (PROCCTL-RECORD)
JS0903          RIDFLD  (PROCCTL-KEY)
JS0903          RESP    (EIBRESP)
JS0903     END-EXEC.
JS0903     IF PROCCTL-HARD-HOLD NOT = 'Y'
JS0903        MOVE 'N' TO PROCCTL-HARD-HOLD.

JS0903*** (IF COMPANY IS HARD HOLD, VALIDATE XTN AMOUNT VS. CREDIT.) ***
JS0903*** (IF XTN AMT > CREDIT AVAIL, SET CREDIT LIMIT TO ZERO.    ) ***
JS0903*** (THIS WILL CAUSE XTN TO FAIL IN A LATER STEP.            ) ***
091509     IF CL-HARD-CR-HOLD OF DCREDITL   = 'Y' AND
JS0903        PROCCTL-HARD-HOLD             = 'N' AND
JS0903        COM-COMDATA-COMPLETE-FLAG NOT = 'Y'
080210        MOVE CL-CO-CD OF DCREDITL TO WS-CL-CO-CD
091509        PERFORM GET-WS-AVAIL-AMOUNT
080210        MOVE CCL-AVL-CRD-AMT      TO WS-AVAIL
SB0614        IF WS-AVAIL NOT < WS-MERCH-SURCHRG-AMT-ADJ
SB0614           MOVE ZEROS TO CCL-FUNC-RTC
SB0614        END-IF
MP1208        PERFORM 20828-ADJ-PRE-AUTH
091509        IF CCL-FUNC-RTC NOT = ZEROES
091509           IF CL-FP-OVRD OF DCREDITL NOT = 'O'
JS0903              PERFORM 20829-CREDIT-EXCEEDED.

           IF WS-CREDIT-LIMIT > ZERO                         OR
              ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD = ' ' OR
              CL-FP-OVRD OF DCREDITL = 'O'
              CONTINUE
           ELSE
080614        IF CDN-COMCASH-FLAG = 'Y' AND
080614           CCL-FUNC-RTC = ZEROES  AND
080614           WS-CREDIT-LIMIT = ZERO
080614           CONTINUE
080614        ELSE
                 PERFORM 20829-CREDIT-EXCEEDED.

      *-------------------------
091509 GET-WS-AVAIL-AMOUNT.
      *-------------------------
DR0422     MOVE 'GET-WS-AVAIL-AMOUNT'       TO CXUTS0ML-PARAGRAPH.
           INITIALIZE                     CREDIT-CHECK-LINK-AREA
080210     MOVE WS-CL-CO-CD            TO CCL-CREDITL (1:5)
           MOVE WS-CICS-CONTROL-RECORD TO CCL-ONLNDF
           MOVE 1                      TO CCL-FUNC-RTC
           MOVE WS-BILLABLE            TO CCL-AMT
           EXEC CICS LINK
                PROGRAM  ('CXACO0LD')
                COMMAREA (CREDIT-CHECK-LINK-AREA)
                LENGTH   (LENGTH OF CREDIT-CHECK-LINK-AREA)
                RESP     (EIBRESP)
           END-EXEC
           PERFORM CHECK-FOR-NORMAL-EIBRESP.

MP1208*-------------------------
MP1208 20828-ADJ-PRE-AUTH.
MP1208*-------------------------
MP1208*** (THIS WILL ADJUST THE PRE-AUTH VALUES FOR AVAILABLE CREDIT) **
MP1208      MOVE 0                   TO WS-DIRECT-BILLING-PROD.
MP1208      PERFORM
MP1208        VARYING INDX-3 FROM 1 BY 1
MP1208        UNTIL INDX-3                 > 36  OR
MP1208              WS-DIRECT-BILLING-PROD = '1'
MP1208          IF COM-DIRECT-BILLING-PRODUCT (INDX-3) = '1'
MP1208             MOVE '1'          TO WS-DIRECT-BILLING-PROD
MP1208          END-IF
MP1208      END-PERFORM.
MP1208      IF COM-DIRECT-BILLING-FUEL = '1' OR
MP1208         COM-DIRECT-BILLING-OIL  = '1' OR
MP1208         WS-DIRECT-BILLING-PROD  = '1'
MP1208         CONTINUE
MP1208      ELSE
MP1208         IF WS-AVAIL < WS-AUTO-GAS-AVAIL
MP1208            MOVE WS-AVAIL         TO WS-AUTO-GAS-AVAIL
MP1208         END-IF
MP1208      END-IF.
MP1208      IF COM-DIRECT-BILLING-CASH = '1'
MP1208         CONTINUE
MP1208      ELSE
MP1208         IF WS-AVAIL < WS-AUTO-GAS-AVAIL-AMT-CSH
MP1208            MOVE WS-AVAIL         TO WS-AUTO-GAS-AVAIL-AMT-CSH
MP1208         END-IF
MP1208      END-IF.

      *-------------------------
       20829-CREDIT-EXCEEDED.
      *-------------------------
      **** (CREDIT LIMIT HAS BEEN EXCEEDED) ****
           MOVE NO-MSG-NBR       TO CALL-COMPANY-NBR.
           MOVE CALL-COMPANY-MSG TO NEW-OUT-MESSAGE.
           MOVE 'Y'              TO VCWS-ERROR-IND.
           MOVE -1 TO FPINVNRL.

      **** (SEE WHICH CREDIT WAS EXCEEDED) ****
           IF COM-COMDATA-COMPLETE-FLAG = 'Y' AND
              WS3-NON-BILLABLE > WS-CC-AVAIL
              PERFORM 20829-CC-CREDIT-EXCEEDED
           ELSE
              PERFORM 20829-CDN-CREDIT-EXCEEDED.

      *-------------------------
       20829-CC-CREDIT-EXCEEDED.
      *-------------------------
      **** (COMDATA COMPLETE CREDIT EXCEEDED) ****
           IF COM-CC-FUNDED-OVERRIDE
              MOVE 'F' TO COM-COMDATA-COMPLETE-STATUS.

           IF COM-CC-FUNDED
              EVALUATE TRUE
                 WHEN COM-COMDATA-COMPLETE-LIMIT = ZEROES OR
                      SCM-RECOURSE-FLAG-NOT-AVAIL
                    MOVE CDN-COMDATA-CMPLT-ACCT-CODE TO
                         WS-CC-FUNDED-CREDIT-ACCT
                    MOVE WS-CC-FUNDED-CREDIT-ERR-N TO POS-ERROR-NUMBER
                    MOVE WS-CC-FUNDED-CREDIT-ERR   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 WHEN WS3-NON-BILLABLE > COM-COMDATA-COMPLETE-LIMIT
                    MOVE WS-CC-RELATION-CREDIT-ERR-N TO POS-ERROR-NUMBER
                    MOVE WS-CC-RELATION-CREDIT-ERR   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 WHEN OTHER
                    MOVE SCM-COMDATA-COMPLETE-ACCT TO
                         WS-CC-SC-CREDIT-ACCT
                    MOVE WS-CC-SC-CREDIT-ERR-N TO POS-ERROR-NUMBER
                    MOVE WS-CC-SC-CREDIT-ERR   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-EVALUATE
           END-IF.
           IF COM-CC-RECOURSE
              EVALUATE TRUE
                 WHEN WS3-NON-BILLABLE > COM-COMDATA-COMPLETE-LIMIT
                    MOVE WS-CC-RELATION-CREDIT-ERR-N TO POS-ERROR-NUMBER
                    MOVE WS-CC-RELATION-CREDIT-ERR   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
                 WHEN OTHER
                    MOVE SCM-COMDATA-COMPLETE-ACCT TO
                         WS-CC-SC-CREDIT-ACCT
                    MOVE WS-CC-SC-CREDIT-ERR-N TO POS-ERROR-NUMBER
                    MOVE WS-CC-SC-CREDIT-ERR   TO OUT-COMENT
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-EVALUATE
           END-IF.
           IF COM-CC-NON-FUNDED
              MOVE WS-CC-RELATION-CREDIT-ERR2-N TO POS-ERROR-NUMBER
              MOVE WS-CC-RELATION-CREDIT-ERR2   TO OUT-COMENT
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      **** (NO COMDATA COMPLETE XTN SHOULD FALL THRU HERE) ****
           MOVE COM-COMDATA-COMPLETE-STATUS TO NO-TYPE.
           PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-------------------------
       20829-CDN-CREDIT-EXCEEDED.
      *-------------------------
JS0903     MOVE ZEROES           TO ERR-AMT
CP0807     MOVE CUST-RGE-SMLNM   TO ERR-SML-NAM.
           MOVE NO-MSG           TO OUT-COMENT.
           MOVE NO-MSG-N         TO POS-ERROR-NUMBER.
           PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-------------------------
       20830-SEE-IF-RECOURSE-REQ.
      *-------------------------
      **** (IF COMDATA COMPLETE RECOURSE XTN ASK FOR SECU CARD) ****
           IF COM-CC-FUNDED-OVERRIDE   AND
              WS-NON-BILLABLE > ZEROES AND
              SCM-RECOURSE-FLAG-CARD-REQ
              IF COM-ASK-FOR-SECU-CARD = 'Y' OR
                 THIS-IS-A-POS-TRANS
                 NEXT SENTENCE
              ELSE
                 MOVE 'Y' TO COM-ASK-FOR-SECU-CARD
                 MOVE '0' TO SECUCDHA
                 MOVE 'A' TO SECUCDA
                 MOVE -1  TO SECUCDL
                 MOVE WS-CC-RECOURSE-SECURITY-REQ TO OUT-COMENT
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *-------------------------
       20840-VALIDATE-RECOURSE.
      *-------------------------
           IF COM-CC-FUNDED-OVERRIDE   AND
              WS-NON-BILLABLE > ZEROES AND
              SCM-RECOURSE-FLAG-CARD-REQ
              PERFORM 20841-SEE-IF-REC-CARD-ENTERED.

      *------------------------------
       20841-SEE-IF-REC-CARD-ENTERED.
      *------------------------------
      **** (VALIDATE THE SECURITY CARD) ****
           EVALUATE TRUE
JS0703        WHEN WS-UIWA-SC-SECURITY-CARD = ALL '0'
                 MOVE WS-CC-RECOURSE-SECURITY-REQ-N TO POS-ERROR-NUMBER
                 MOVE WS-CC-RECOURSE-SECURITY-REQ   TO OUT-COMENT
                 MOVE -1                            TO SECUCDL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
JS0703        WHEN WS-UIWA-SC-SECURITY-CARD NOT > SPACES
                 MOVE SECURITY-CARD-IS-REQUIRED     TO OUT-COMENT
                 MOVE SECURITY-CARD-IS-REQUIRED-N   TO POS-ERROR-NUMBER
                 MOVE -1                            TO SECUCDL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
JS0703        WHEN WS-UIWA-SC-SECURITY-CARD NOT NUMERIC
                 MOVE SECURITY-CARD-IS-INVALID      TO OUT-COMENT
                 MOVE SECURITY-CARD-IS-INVALID-N    TO POS-ERROR-NUMBER
                 MOVE -1                            TO SECUCDL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
MP*****  MOVE TO HERE TO PREVENT ASRA ****
MP****        WHEN OTHER
MP****           PERFORM 20842-VALIDATE-REC-CARD
MP****           PERFORM 20843-VALIDATE-REC-INFO
           END-EVALUATE.

      *------------------------------
       20842-VALIDATE-REC-CARD.
      *------------------------------
DR0422     MOVE '20842-VALIDATE-REC-CARD'   TO CXUTS0ML-PARAGRAPH.
           MOVE PRM-CARD-RECORD           TO WS-HOLD-PRM-CARD-RECORD
           MOVE WS-UIWA-SC-SECURITY-CARD  TO WS-PRM-CARD
           MOVE WS-PRM-CARD-NR            TO PRM-CARD-NUMB
           EXEC CICS READ
                 DATASET ('PRMCARD')
                 INTO    (PRM-CARD-RECORD)
                 RIDFLD  (PRM-CARD-KEY)
                 RESP    (EIBRESP)
           END-EXEC
DR0422     MOVE PRM-CARD-KEY               TO CXUTS0ML-COMMAND
           PERFORM CHECK-FOR-NOTFND-EIBRESP
           IF EIBRESP = DFHRESP(NORMAL) AND
              PRM-SUB-ACCT-NUMB = 'SECURITY'
              PERFORM 60000-CHECK-PRMCARD
              IF PRM-CARD-ACTIVE
                 MOVE PRM-CARD-EMPLOYEE-ID TO WS-CC-EMPLOYEE-CHECK
                 MOVE PRM-CARD-PIN         TO WS-CC-PIN-CHECK
                 MOVE WS-HOLD-PRM-CARD-RECORD TO PRM-CARD-RECORD
              ELSE
                 MOVE SECURITY-CARD-NOT-ACTIVE TO OUT-COMENT
                 MOVE SECURITY-CARD-IS-INVALID-N TO POS-ERROR-NUMBER
                 MOVE -1 TO SECUCDL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
           ELSE
              MOVE SECURITY-CARD-IS-INVALID TO OUT-COMENT
              MOVE SECURITY-CARD-IS-INVALID-N TO POS-ERROR-NUMBER
              MOVE -1 TO SECUCDL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *------------------------------
       20843-VALIDATE-REC-INFO.
      *------------------------------
           IF WS-CC-EMPLOYEE-CHECK NOT = COM-FP-SC-CODE
              MOVE SECURITY-CARD-IS-INVALID TO OUT-COMENT
              MOVE SECURITY-CARD-IS-INVALID-N TO POS-ERROR-NUMBER
              MOVE -1 TO SECUCDL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
           IF THIS-IS-A-POS-TRANS
ED1203        IF WS-UIWA-SC-SECURITY-PIN NUMERIC
ED1203        AND WS-UIWA-SC-SECURITY-PIN > 0
ED1203           PERFORM 20843A-ENCRYPT-PIN
ED1203           MOVE PS90-PRM-CARD-KEY            TO PRM-PIN-KEY
ED1203           PERFORM 20845A-GET-ENCRYPTED-PIN
ED1203           IF PS90-PIN-BLOCK NOT = PRM-PIN-ENCRYPTED
                    MOVE SECURITY-PIN-IS-INVALID   TO OUT-COMENT
                    MOVE SECURITY-PIN-IS-INVALID-N TO POS-ERROR-NUMBER
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ED1203           END-IF
              ELSE
                 MOVE SECURITY-PIN-IS-INVALID TO OUT-COMENT
                 MOVE SECURITY-PIN-IS-INVALID-N TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
ED1203        END-IF.

ED1203*-------------------------------------
ED1203 20843A-ENCRYPT-PIN.
ED1203*-------------------------------------
ED1203     MOVE +1                   TO PS90-REQUEST-CODE
ED1203     MOVE WS-PRM-CARD-NR       TO PS90-PRM-CARD-KEY
ED1203     MOVE WS-UIWA-SC-SECURITY-PIN
ED1203                               TO PS90-PRM-CARD-PIN
ED1203
ED1203     EXEC CICS LINK
ED1203          PROGRAM    ('CXPSO090')
ED1203          COMMAREA   (CXPSO090-COMM-AREA)
ED1203          LENGTH     (LENGTH OF CXPSO090-COMM-AREA)
ED1203          DATALENGTH (LENGTH OF CXPSO090-COMM-AREA)
ED1203          RESP       (EIBRESP)
ED1203     END-EXEC
ED1203     IF  (EIBRESP = DFHRESP(NORMAL))
ED1203     AND (PS90-RETURN-CODE = +0)
ED1203        CONTINUE
ED1203     ELSE
ED1203        MOVE '0000000000000000' TO PS90-PIN-BLOCK
ED1203     END-IF.

      *-------------------------
       20845-VALIDATE-ATM-PIN.
      *-------------------------
           IF (THIS-BE-AN-ATM-XTN) AND
ED1203        (TSXCO0AT-PIN-BLOCK   NOT = 'REVS')  AND
MP0898        (NOT TSXCO0AT-TRAN-TYPE-PINLESS-PUR) AND
MP0903        (NOT TSXCO0AT-TRAN-TYPE-PURC-SI-F)   AND
MP0903        (NOT TSXCO0AT-TRAN-TYPE-PURC-SI)     AND
MP0903        (NOT TSXCO0AT-TRAN-TYPE-WITH-SI-F)   AND
MP0903        (NOT TSXCO0AT-TRAN-TYPE-WITH-SI)
ED1203           MOVE PRM-CARD-KEY                 TO PRM-PIN-KEY
ED1203           PERFORM 20845A-GET-ENCRYPTED-PIN
ED1203           IF TSXCO0AT-PIN-BLOCK NOT = PRM-PIN-ENCRYPTED
                    MOVE SECURITY-PIN-IS-INVALID   TO OUT-COMENT
                    MOVE SECURITY-PIN-IS-INVALID-N TO POS-ERROR-NUMBER
                    PERFORM INCREMENT-PIN-TRIES
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

           IF (THIS-BE-AN-ATM-XTN) AND
ED1203        (TSXCO0AT-PIN-BLOCK NOT = 'REVS')
              PERFORM CHECK-EXCESSIVE-PIN-TRIES.

ED1203*-------------------------------------
ED1203 20845A-GET-ENCRYPTED-PIN.
ED1203*-------------------------------------
DR0422     MOVE '20845A-GET-ENCRYPTED-PIN'  TO CXUTS0ML-PARAGRAPH.
ED1203     EXEC CICS READ
ED1203          FILE    ('PRMPIN')
ED1203          INTO    (PRM-PIN-RECORD)
ED1203          RIDFLD  (PRM-PIN-KEY)
ED1203          RESP    (EIBRESP)
ED1203     END-EXEC.
DR0422     MOVE PRM-PIN-KEY                 TO CXUTS0ML-COMMAND.
ED1203     PERFORM CHECK-FOR-NOTFND-EIBRESP.
ED1203     IF PRM-PIN-ENCRYPTED > ' '
ED1203        CONTINUE
ED1203     ELSE
ED1203        MOVE '0000000000000000' TO PRM-PIN-ENCRYPTED
ED1203     END-IF.

      *------------------------------
       INCREMENT-PIN-TRIES.
      *------------------------------
DR0422     MOVE 'INCREMENT-PIN-TRIES'       TO CXUTS0ML-PARAGRAPH.
           MOVE PRM-CARD-RECORD TO WS-HOLD-PRM-CARD-RECORD.
           EXEC CICS READ
                     DATASET   ('PRMCARD')
                     RIDFLD    (PRM-CARD-KEY)
                     INTO      (PRM-CARD-RECORD)
                     UPDATE
                     RESP      (EIBRESP)
           END-EXEC.
DR0422     MOVE PRM-CARD-KEY      TO CXUTS0ML-COMMAND.
           PERFORM CHECK-FOR-NORMAL-EIBRESP.
ED0102     IF EIBRESP = DFHRESP(NORMAL)
ED0102        MOVE PRM-CARD-RECORD TO PRB-CARD-BEFORE-RECORD
ED0102        PERFORM 21121G-PRMCARD-NUMERIC-CHECKS
ED0102     END-IF.
           PERFORM 60000-CHECK-PRMCARD

           IF PRM-VRU-PIN-ATTEMPTS < 9
              COMPUTE PRM-VRU-PIN-ATTEMPTS = PRM-VRU-PIN-ATTEMPTS + 1.

           EXEC CICS REWRITE
                DATASET ('PRMCARD')
                FROM    (PRM-CARD-RECORD)
                RESP    (EIBRESP)
           END-EXEC.
           PERFORM CHECK-FOR-NORMAL-EIBRESP.
ED0102     IF EIBRESP = DFHRESP (NORMAL)
ED0102        MOVE PRM-CARD-RECORD TO PRA-CARD-AFTER-RECORD
ED0102        MOVE PRM-CARD-CHANGE-RECORD
ED0102                             TO XCOH-MSG-DATA
ED0102        MOVE 2               TO XCOH-MSG-CODE
ED0102        PERFORM 21121C-LINK-TO-MSG-HANDLER
           END-IF.

           MOVE PRM-VRU-PIN-ATTEMPTS     TO WS-PRM-VRU-PIN-ATTEMPTS.
           MOVE WS-HOLD-PRM-CARD-RECORD  TO PRM-CARD-RECORD.
           MOVE WS-PRM-VRU-PIN-ATTEMPTS  TO PRM-VRU-PIN-ATTEMPTS.

      *------------------------------
       CHECK-EXCESSIVE-PIN-TRIES.
      *------------------------------
           IF PRM-VRU-PIN-ATTEMPTS > 3
              IF WS-SAVE-ATM-ERROR-NUMBER = SECURITY-PIN-IS-INVALID-N
                 MOVE ZERO                   TO WS-SAVE-ATM-ERROR-NUMBER
              END-IF
              MOVE SECURITY-PIN-EXCESSIVE    TO OUT-COMENT
              MOVE SECURITY-PIN-EXCESSIVE-N  TO POS-ERROR-NUMBER
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
           END-IF.

DR0121*------------------------------
DR0121 20846-VALIDATE-CVC-ATM.
DR0121*------------------------------

      * Disassemble track data
DR0422*    MOVE SPACES                    TO WS-TSXCW041-CVC-COMMON-AREA
DR0422     MOVE SPACES                  TO WS-CXXCW0LE-CVC-COMMON-AREA.
DR0121     IF S007-PROPRIETARY-CARD = 'Y'
DR0422*        MOVE 'P'                   TO WS-TSXCW041-CARD-TYPE
DR0422         MOVE 'P'                   TO WS-CXXCW0LE-CARD-TYPE
DR0121     END-IF
DR0121     MOVE ATMW-TRACK-2-DATA          TO WS-ATMW-TRACK2-DATA
DR0422     MOVE 'C1V'                      TO WS-CXXCW0LE-FUNCTION.
DR0422*    MOVE WS-ATM-TRACK2-CARD         TO WS-CXXCW0LE-CARD-NBR
DR0422     MOVE WS-ATM-TRACK2-CARD         TO WS-CXXCW0LE-CARD-NBR.
DR0422*    MOVE WS-ATM-TRACK2-EXP-DT-YYMM  TO WS-TSXCW041-EXP-DATE
DR0422     MOVE WS-ATM-TRACK2-EXP-DT-YYMM  TO WS-CXXCW0LE-EXP-DATE.
DR0422*    MOVE WS-ATM-TRACK2-SERVICE-CODE TO WS-TSXCW041-SRVC-CODE
DR0422     MOVE WS-ATM-TRACK2-SERVICE-CODE TO WS-CXXCW0LE-SRVC-CODE.
DR0121     IF S007-PROPRIETARY-CARD = 'Y'
DR0422*       MOVE WS-PROP-ATM-TRACK2-CVC1 TO WS-TSXCW041-CHECK-CVC1
DR0422        MOVE WS-PROP-ATM-TRACK2-CVC1 TO WS-CXXCW0LE-CVC1
DR0121     ELSE
DR0422*       MOVE WS-MC-ATM-TRACK2-CVC1   TO WS-TSXCW041-CHECK-CVC1
DR0422        MOVE WS-MC-ATM-TRACK2-CVC1   TO WS-CXXCW0LE-CVC1
DR0121     END-IF.

DR0422     MOVE PRM-CREATION-DATE         TO WS-CXXCW0LE-CARD-CREATION.
DR0422     MOVE PRM-LAST-PRINTED-DATE     TO WS-CXXCW0LE-CARD-PRINTED.
DR0422     MOVE PRM-CARD-PRIOR-PRINT-DATE TO
DR0422                                     WS-CXXCW0LE-CARD-PRIOR-PRNT.

      * If CVC1 found and MC chipped, check for CVC3
DR0422*    IF WS-TSXCW041-CHECK-CVC1 NUMERIC
DR0422     IF WS-CXXCW0LE-CVC1 NUMERIC
DR0321        IF S007-MC-CHIP-CVC-FLAG = 'Y'
DR0321           MOVE SPACES TO WS-CVC3-PASSED-FLAG
DR0321           PERFORM 20846A-SEE-IF-CVC3-PASSED
DR0321        END-IF
MP0221     ELSE
DR0121        MOVE 'Y'                     TO WS-CVC1-FLAG
MP0221     END-IF
MP0221
      * CVC1 not present, do not validate
MP0221     IF CVC1-NOT-FOUND
DR0422*       MOVE 'Y'                  TO WS-TSXCW041-RETN-ERR-FLG
DR0422        MOVE '01'                 TO WS-CXXCW0LE-RETURN-CODE
DR0121     ELSE
      * All data present and CVC3 was passed, use 999 for service code
      * otherwise use provided service code
DR0422*       IF WS-TSXCW041-CARD-NBR    NUMERIC
DR0422        IF WS-CXXCW0LE-CARD-NBR    NUMERIC
DR0422*       AND WS-TSXCW041-EXP-DATE   NUMERIC
DR0422        AND WS-CXXCW0LE-EXP-DATE   NUMERIC
DR0422*       AND WS-TSXCW041-SRVC-CODE  NUMERIC
DR0422        AND WS-CXXCW0LE-SRVC-CODE  NUMERIC
DR0321           IF CVC3-WAS-PASSED
DR0422*              MOVE WS-TSXCW041-SRVC-CODE TO WS-SAVE-SRVC-CODE
DR0422               MOVE WS-CXXCW0LE-SRVC-CODE TO WS-SAVE-SRVC-CODE
DR0422*              MOVE 999                   TO WS-TSXCW041-SRVC-CODE
DR0422               MOVE 999                   TO WS-CXXCW0LE-SRVC-CODE
DR0321           END-IF
DR0422*          PERFORM 20846X-LINK-CXXCO0LC
DR0422           PERFORM 20846X-LINK-CXXCO0LE
DR0422*          IF WS-TSXCW041-RETN-ERR-FLG = 'Y'
DR0422           IF WS-CXXCW0LE-RETURN-CODE  = '01'
      * CVC3 was passed, try the provided service code
DR0321              IF CVC3-WAS-PASSED
DR0422*                MOVE SPACES           TO WS-TSXCW041-RETN-ERR-FLG
DR0422                 MOVE SPACES           TO WS-CXXCW0LE-RETURN-CODE
DR0422*                MOVE WS-SAVE-SRVC-CODE TO WS-TSXCW041-SRVC-CODE
DR0422                 MOVE WS-SAVE-SRVC-CODE TO WS-CXXCW0LE-SRVC-CODE
DR0422*                PERFORM 20846X-LINK-CXXCO0LC
DR0422                 PERFORM 20846X-LINK-CXXCO0LE
DR0321              END-IF
DR0321           END-IF
MP0221        END-IF
MP0221     END-IF.

      * CVC validation failed or decline flag, then decline
DR0422*    IF WS-TSXCW041-RETN-ERR-FLG = 'Y'
DR0422     IF (WS-CXXCW0LE-RETURN-CODE NOT = '00')
MP0221     OR CODES-CVC-DECLINE
DR0121         MOVE INVALID-CVC1            TO OUT-COMENT
DR0121         MOVE INVALID-CVC1-N          TO POS-ERROR-NUMBER
DR0121         PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
DR0121     END-IF.


DR0321*------------------------------
DR0321 20846A-SEE-IF-CVC3-PASSED.
DR0321*------------------------------

DR0321     MOVE ATMW-DE48-71-ON-BEHALF    TO WS-ATMW-DE48-71-ON-BEHALF.

DR0321     PERFORM VARYING WS-DE48-71-INDX FROM 1 BY 1
DR0321               UNTIL WS-DE48-71-INDX > 10
DR0321        IF WS-ATMW-DE48-71-SF1 (WS-DE48-71-INDX) = '01'
DR0321                                                OR '02'
DR0321            MOVE 'Y'                TO WS-CVC3-PASSED-FLAG
DR0321        END-IF
DR0321     END-PERFORM.

DR0321*------------------------------
DR0321*20846X-LINK-CXXCO0LC.
DR0321 20846X-LINK-CXXCO0LE.
DR0321*------------------------------

DR0422*    MOVE SPACES           TO WS-TSXCW041-RETN-ERR-FLG
DR0422     MOVE SPACES           TO WS-CXXCW0LE-RETURN-CODE.

DR0422*    EXEC CICS LINK
DR0422*         PROGRAM ('CXXCO0LC')
DR0422*         COMMAREA (WS-TSXCW041-CVC-COMMON-AREA)
DR0422*         LENGTH (LENGTH OF WS-TSXCW041-CVC-COMMON-AREA)
DR0422*         RESP  (EIBRESP)
DR0422*    END-EXEC.

DR0422     EXEC CICS LINK
DR0422          PROGRAM ('CXXCO0LE')
DR0422          COMMAREA (WS-CXXCW0LE-CVC-COMMON-AREA)
DR0422          LENGTH (LENGTH OF WS-CXXCW0LE-CVC-COMMON-AREA)
DR0422          RESP  (EIBRESP)
DR0422     END-EXEC.

      *------------------------------
DR0121 20847-VALIDATE-CVC-POS.
      *------------------------------

      * Disassemble swipe data
DR0422*    MOVE SPACES                    TO WS-TSXCW041-CVC-COMMON-AREA
DR0422     MOVE SPACES                  TO WS-CXXCW0LE-CVC-COMMON-AREA.
DR0121     IF S007-PROPRIETARY-CARD = 'Y'
DR0422*        MOVE 'P'                   TO WS-TSXCW041-CARD-TYPE
DR0422         MOVE 'P'                   TO WS-CXXCW0LE-CARD-TYPE
DR0121     END-IF
DR0422*    MOVE WS-SWIPED-CARD            TO WS-TSXCW041-CARD-NBR
DR0422     MOVE 'C1V'                     TO WS-CXXCW0LE-FUNCTION.
DR0422     MOVE WS-SWIPED-CARD            TO WS-CXXCW0LE-CARD-NBR.
DR0422*    MOVE WS-SWIPED-EXP-DT-YYMM     TO WS-TSXCW041-EXP-DATE
DR0422     MOVE WS-SWIPED-EXP-DT-YYMM     TO WS-CXXCW0LE-EXP-DATE.
DR0422*    MOVE WS-SWIPED-SRVC-CD         TO WS-TSXCW041-SRVC-CODE
DR0422     MOVE WS-SWIPED-SRVC-CD         TO WS-CXXCW0LE-SRVC-CODE.
DR0121     IF S007-PROPRIETARY-CARD = 'Y'
DR0422*       MOVE WS-PROP-SWIPED-CVC1    TO WS-TSXCW041-CHECK-CVC1
DR0422        MOVE WS-PROP-SWIPED-CVC1    TO WS-CXXCW0LE-CVC1
DR0121     ELSE
DR0422*       MOVE WS-MC-SWIPED-CVC1      TO WS-TSXCW041-CHECK-CVC1
DR0422        MOVE WS-MC-SWIPED-CVC1      TO WS-CXXCW0LE-CVC1
DR0121     END-IF.

DR0422     MOVE PRM-CREATION-DATE         TO WS-CXXCW0LE-CARD-CREATION.
DR0422     MOVE PRM-LAST-PRINTED-DATE     TO WS-CXXCW0LE-CARD-PRINTED.
DR0422     MOVE PRM-CARD-PRIOR-PRINT-DATE TO
DR0422                                     WS-CXXCW0LE-CARD-PRIOR-PRNT.

      * If no CVC1 found
      *   if MC and chipped       - set decline flag
DR0422*    IF NOT WS-TSXCW041-CHECK-CVC1 NUMERIC
DR0422     IF NOT WS-CXXCW0LE-CVC1 NUMERIC
MP0221        IF WS-UIWA-SWIPED-KEYED = 'C'
MP0221        AND S007-MASTERCARD-CARD = 'Y'
MP0221           MOVE 'Y'              TO WS-CODES-CVC-DECLINE-FLG
MP0221        ELSE
SD0122*   if pre-auth received with CVC1 within time lim, do not decline
SD0122           IF THIS-BE-A-POS-AUTH
SD0122              PERFORM 20847D-CHECK-PRE-AUTH
SD0122              IF WS-PRE-AUTH-FOUND AND WCC-CD = 'S'
SD0122*   if pre-auth had CVC1, assume that this is a swiped tran
SD0122                 MOVE 'S' TO WS-UIWA-SWIPED-KEYED
SD0122                 PERFORM 20847C-GET-CVC-TIME-LIMIT
SD0122                 PERFORM 20847X-READ-CODES-FILE-2
SD0122                 IF WS-SP14-ELAPSED-TIME-MINS <
SD0122                    WS-CODES-CVC-TIME-LIMIT
SD0122                    NEXT SENTENCE
SD0122                 END-IF
SD0122              END-IF
SD0122           END-IF
SD0122*   otherwise check decline flags
SD0521           PERFORM 20847A-GET-CVC-DECLINE-FLAGS
SD0521           PERFORM 20847X-READ-CODES-FILE
MP0221        END-IF
MP0221     END-IF
MP0221
      * No CVC1 found              - do not validate
DR0422*    IF NOT WS-TSXCW041-CHECK-CVC1 NUMERIC
DR0422     IF NOT WS-CXXCW0LE-CVC1 NUMERIC
DR0121        CONTINUE
DR0121     ELSE
SD0521* If all data present,
DR0422*       IF  WS-TSXCW041-CARD-NBR   NUMERIC
DR0422        IF  WS-CXXCW0LE-CARD-NBR   NUMERIC
DR0422*       AND WS-TSXCW041-EXP-DATE   NUMERIC
DR0422        AND WS-CXXCW0LE-EXP-DATE   NUMERIC
DR0422*       AND WS-TSXCW041-SRVC-CODE  NUMERIC
DR0422        AND WS-CXXCW0LE-SRVC-CODE  NUMERIC
SD0521*     if MC and chip txn     - use 999 for service code
SD0521*     else                   - use provided service code
SD0521           IF  S007-MASTERCARD-CARD = 'Y'
SD0521           AND WS-UIWA-SWIPED-KEYED = 'C'
DR0422*             MOVE 999              TO WS-TSXCW041-SRVC-CODE
DR0422              MOVE 999              TO WS-CXXCW0LE-SRVC-CODE
SD0521           END-IF
DR0422*          PERFORM 20846X-LINK-CXXCO0LC
DR0422           PERFORM 20846X-LINK-CXXCO0LE
SD0521*     if verify failed     - check decline flags when MC and swipe
DR0422*          IF  WS-TSXCW041-RETN-ERR-FLG = 'Y'
DR0422           IF (WS-CXXCW0LE-RETURN-CODE NOT = '00')
SD0521           AND S007-MASTERCARD-CARD = 'Y'
SD0521           AND WS-UIWA-SWIPED-KEYED = 'S'
SD0521              PERFORM 20847B-GET-CVC-DECLINE-FLAGS
SD0521              PERFORM 20847X-READ-CODES-FILE
SD0521*        if not decline           - try 999 for service code
SD0521              IF NOT CODES-CVC-DECLINE
DR0422*                MOVE 999              TO WS-TSXCW041-SRVC-CODE
DR0422                 MOVE 999              TO WS-CXXCW0LE-SRVC-CODE
DR0422*                PERFORM 20846X-LINK-CXXCO0LC
DR0422                 PERFORM 20846X-LINK-CXXCO0LE
SD0521              END-IF
SD0521           END-IF
SD0521        END-IF
SD0521     END-IF.

      * If CVC Validation failed
      * or decline flag set              - decline
DR0422*    IF WS-TSXCW041-RETN-ERR-FLG = 'Y'
DR0422     IF (WS-CXXCW0LE-RETURN-CODE NOT = '00')
MP0221     OR CODES-CVC-DECLINE
DR0121         MOVE INVALID-CVC1            TO OUT-COMENT
DR0121         MOVE INVALID-CVC1-N          TO POS-ERROR-NUMBER
DR0121         PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
DR0121     END-IF.

MP0221*------------------------------
MP0221 20847A-GET-CVC-DECLINE-FLAGS.
MP0221*------------------------------
MP0221
MP0221     EVALUATE TRUE
MP0221       WHEN S007-PROPRIETARY-CARD = 'Y'
MP0221         AND WS-UIWA-SWIPED-KEYED = 'M'
MP0221             MOVE '006' TO CODES-SEQ
MP0221       WHEN S007-PROPRIETARY-CARD = 'Y'
MP0221         AND WS-UIWA-SWIPED-KEYED NOT = 'M'
MP0221             MOVE '007' TO CODES-SEQ
MP0221       WHEN S007-MASTERCARD-CARD = 'Y'
MP0221         AND WS-UIWA-SWIPED-KEYED = 'M'
MP0221             MOVE '008' TO CODES-SEQ
MP0221       WHEN S007-MASTERCARD-CARD = 'Y'
MP0221         AND WS-UIWA-SWIPED-KEYED NOT =  'M'
MP0221             MOVE '009' TO CODES-SEQ
MP0221     END-EVALUATE.
MP0221
MP0221*------------------------------
MP0221 20847B-GET-CVC-DECLINE-FLAGS.
MP0221*------------------------------
MP0221
MP0221      MOVE '010' TO CODES-SEQ.
MP0221
SD0122*------------------------------
SD0122 20847C-GET-CVC-TIME-LIMIT.
SD0122*------------------------------
SD0122
SD0122      MOVE '020' TO CODES-SEQ.
SD0122
SD0122*------------------------------
SD0122 20847D-CHECK-PRE-AUTH.
SD0122*------------------------------
SD0122
SD0122     MOVE 'N'              TO WS-PRE-AUTH-SW
SD0122
SD0122     MOVE SPACES           TO WS-SWIPED-CARD-20
SD0122     MOVE WS-SWIPED-CARD   TO WS-SWIPED-CARD-20
SD0122
SD0122     EXEC SQL
SD0122        SELECT
SD0122             TIMESTAMPDIFF(4,CHAR(TIMESTAMP(CURRENT TIMESTAMP)
SD0122                                - TIMESTAMP(PRE_AUTH_TS)))
SD0122            ,WCC_CD
SD0122        INTO
SD0122            :WS-SP14-ELAPSED-TIME-MINS
SD0122           ,:DPRPPAUT.WCC-CD
SD0122        FROM
SD0122            DBO.PRP_PRE_AUTH A
SD0122        WHERE
SD0122            A.CRD_NBR        = :WS-SWIPED-CARD-20
SD0122        AND A.MRCH_NBR       = :COM-FP-SC-CODE
SD0122        AND A.PRE_AUTH_TS =
SD0122              (
SD0122               SELECT
SD0122                    MAX(B.PRE_AUTH_TS)
SD0122                FROM
SD0122                    DBO.PRP_PRE_AUTH B
SD0122                WHERE
SD0122                    B.CRD_NBR      = A.CRD_NBR
SD0122                AND B.MRCH_NBR     = A.MRCH_NBR
SD0122              )
SD0122     END-EXEC
SD0122
SD0122     EVALUATE SQLCODE
SD0122        WHEN +0
SD0122           MOVE 'Y'         TO WS-PRE-AUTH-SW
SD0122        WHEN +100
SD0122           MOVE 'N'         TO WS-PRE-AUTH-SW
SD0122        WHEN OTHER
SD0122           PERFORM CHECK-NOTFND-SQL
SD0122     END-EVALUATE
SD0122     .
MP0221
      *------------------------------
SD0521 20847X-READ-CODES-FILE.
      *------------------------------
MP0221     MOVE '20847X-READ-CODES-FILE   '  TO CXUTS0ML-PARAGRAPH.
MP0221     MOVE CODES-KEY                    TO CXUTS0ML-COMMAND.
MP0221
MP0221     MOVE 'US'          TO CODES-PGM.
MP0221
MP0221     MOVE 'N'                   TO WS-CODES-CVC-DECLINE-FLG
MP0221     MOVE ZEROES TO EIBRESP
MP0221
MP0221     EXEC CICS READ
MP0221       DATASET ('CODES')
MP0221       RIDFLD  (CODES-KEY)
MP0221       INTO    (PROGRAM-CODES)
MP0221       RESP    (EIBRESP)
MP0221     END-EXEC.
MP0221
MP0221     PERFORM CHECK-FOR-NOTFND-EIBRESP.
MP0221     EVALUATE EIBRESP
MP0221       WHEN DFHRESP(NORMAL)
MP0221         MOVE CODES-DATA(25:1) TO WS-CODES-CVC-DECLINE-FLG
MP0221       WHEN DFHRESP(NOTFND)
MP0221       WHEN DFHRESP(ENDFILE)
MP0221         MOVE 'N'              TO WS-CODES-CVC-DECLINE-FLG
MP0221     END-EVALUATE.
MP0221
SD0122*------------------------------
SD0122 20847X-READ-CODES-FILE-2.
SD0122*------------------------------
SD0122     MOVE '20847X-READ-CODES-FILE-2'   TO CXUTS0ML-PARAGRAPH.
SD0122     MOVE CODES-KEY                    TO CXUTS0ML-COMMAND.
SD0122
SD0122     MOVE 'US'          TO CODES-PGM.
SD0122
SD0122     MOVE ZEROES                TO WS-CODES-CVC-TIME-LIMIT
SD0122     MOVE ZEROES TO EIBRESP
SD0122
SD0122     EXEC CICS READ
SD0122       DATASET ('CODES')
SD0122       RIDFLD  (CODES-KEY)
SD0122       INTO    (PROGRAM-CODES)
SD0122       RESP    (EIBRESP)
SD0122     END-EXEC.
SD0122
SD0122     PERFORM CHECK-FOR-NOTFND-EIBRESP.
SD0122     EVALUATE EIBRESP
SD0122       WHEN DFHRESP(NORMAL)
SD0122         MOVE CODES-DATA(1:9)  TO WS-CODES-CVC-TIME-LIMIT
SD0122       WHEN DFHRESP(NOTFND)
SD0122       WHEN DFHRESP(ENDFILE)
SD0122         MOVE ZEROES           TO WS-CODES-CVC-TIME-LIMIT
SD0122     END-EVALUATE.
SD0122
      *------------------------------
       20848-VALIDATE-ATM-NETWORK.
      *------------------------------
           IF (THIS-BE-AN-ATM-XTN)
MP0898        IF (TSXCO0AT-FANB-LOC OR
MP0898            TSXCO0AT-MAESTRO-LOC)         AND
                 CDN-EFS-PRIVATE-ATM-NETWORK = 'Y'
                 MOVE INVALID-ATM-NETWORK       TO OUT-COMENT
                 MOVE INVALID-ATM-NETWORK-N     TO POS-ERROR-NUMBER
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
           END-IF.
      *------------------------------
       20850-CHECK-FOR-INQUIRY.
      *------------------------------
      **** (CHECK FOR INQUIRY) ****
           IF ONLINE-SYSTEM-STATUS IS EQUAL TO 'I'
              MOVE INQUIRY-MESSAGE TO OUT-COMENT
              MOVE INQUIRY-MESSAGE-N TO POS-ERROR-NUMBER
              MOVE -1 TO FPCMT1L
              MOVE '*' TO VR-TRANS-FLAG
              PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.

      *------------------------------
       20860-CHECK-CREDIT-AUTO-APPROV.
      *------------------------------
      ****  (FOR CREDIT PROBLEMS, CHECK FOR AUTO APPROVAL) ****
           IF ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD = ' ' OR
091509        CL-XMIT-CD OF DCREDITL NOT = 'X'
              CONTINUE
           ELSE
              IF WS3-CURXMN < 500.00 AND
091509           CL-OVR-LMT-CNT OF DCREDITL < 16
                 MOVE ' ' TO ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD
                 MOVE 1 TO OCR-FLAG
              ELSE
                 MOVE 0 TO OCR-FLAG
              END-IF
           END-IF.

           IF ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD NOT = ' '
091509        IF CL-OVRD-CD OF DCREDITL = 'O'
                 MOVE ' ' TO ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD
              END-IF
           END-IF.

      *------------------------------
102810 CHK-FOR-MULTI-PART-PURCHASE.
      *------------------------------
040912***** BYPASS THIS LOGIC FOR BATCH FUEL BUT PERFORM IT FOR STAND-IN
040912     IF NOT (EIBTRNID = 'FMBP' OR 'FMMP')
040912       OR (EIBTRNID = 'FMBP' AND WS-UIWA-SYSTEM-ID = 1)
040912        PERFORM CHK-FOR-MULTI-PART-PURC2
040912     END-IF.
      *------------------------------
041112 CHK-FOR-MULTI-PART-PURC2.
      *------------------------------
           IF WS-UIWA-SC-CODE NOT > SPACES
              MOVE SCM-SERVICE-CENTER-CODE TO WS-UIWA-SC-CODE
           END-IF
           IF WS-SETUP-XCPRODC-DONE NOT = 'Y'
              PERFORM SETUP-XCPRODC-AND-DT-TM
           END-IF
           IF PRM-LAST-PURC-TIME-FUEL NUMERIC
             AND PRM-LAST-PURC-TIME-FUEL > ZERO
              MOVE PRM-LAST-PURC-TIME-FUEL  TO WS-PURC-TIME-UNPACK
              MOVE WS-PURC-TIME-UNPACK(2:4) TO WS-TIME-4
           ELSE
              MOVE ZERO                     TO WS-TIME-1
           END-IF
           COMPUTE WS-COMP-MIN = (WS-HOURS-1 * 60) + WS-MINUTES-1
           END-COMPUTE
           MOVE WS-CURR-MIN TO WS-CURR-MIN-WORK
           IF PRM-LAST-PURC-DATE-FUEL NOT = WS-CURRENT-DATE-YYDDD
              ADD 1440      TO WS-CURR-MIN-WORK
           END-IF
           COMPUTE WS-ELAP-MIN = WS-CURR-MIN-WORK - WS-COMP-MIN
           END-COMPUTE
           IF WS-ELAP-MIN < XCP-FUEL-DEF-TIME-LIMIT-MM
              MOVE 'Y' TO WS-NO-FUEL-FEE-FLAG
           END-IF.

      *------------------------------
       20870-GET-FEES.
      *------------------------------
           MOVE 'N' TO WS-EXIT-FLAG.
           PERFORM 20871-ADJUST-FEES.
           IF PGRM-FUNCTION-OIL-ONLY AND
              WS-UIWA-CASH-AMT = ZEROES
              PERFORM 20872-CHECK-OIL-ONLY
           END-IF.
           PERFORM 20873-CHECK-NO-FEE.
           IF WS-EXIT-FLAG = 'N'
              IF THIS-IS-AN-ALLIANCE-CUST OR
                 COM-PREFERRED-CUSTOMER
                 PERFORM 20880-ALLIANCE-RATES
              ELSE
                 PERFORM 20890-OLD-RATES.

      *------------------------------
       20871-ADJUST-FEES.
      *------------------------------
      **** (FIGURE RATES) ****
           IF COM-DIRECT-BILLING-IN-PROCESS AND
091211******** CALL TO ROUTINE CXUTS200 REMOVED
MP1004        COM-FP-CO-CODE NOT = CDN-CUST-NUMBER
              MOVE SPACES             TO CDN-CUSTOMER-RECORD
091211******** CALL TO ROUTINE CXUTD201 REMOVED
MP1004        MOVE COM-FP-CO-CODE     TO CDN-CUST-KEY
              MOVE 'Y'                TO READ-CUST-FLAG
              PERFORM READ-CDNCUST.

      **** (IF BULK FUEL ADJUST RATES) ****
           IF COM-PNET-BULK-FUEL-YES
              MOVE CDN-BULK-FUEL-RATE TO CDN-DIRECT-BILL-RATE,
                                         CDN-ALL-DIRECT-BILL
              MOVE CDN-BULK-FUEL-RATE-ALTCUR TO
                   CDN-ALL-DIRECT-BILL-ALTCUR
           END-IF

      **** (IF PREFERRED CUSTOMER ADJUST RATES) ****
           IF COM-PREFERRED-CUSTOMER
              MOVE COM-PREFERRED-RATE TO CDN-ALL-STANDARD-FEE
                                         CDN-ALL-STANDARD-FEE-ALTCUR
           END-IF

           MOVE ZEROS TO WS-FUEL-RATE
                         WS-FUEL-RATE2
                         WS-FUEL-RATE3
                         WS-ADVANCE-RATE
                         WS-ADVANCE-RATE2
                         WS-ADVANCE-RATE3
                         WS-BASE-FUEL-RATE
                         WS-MIXED-FUEL-RATE
                         WS-BASE-ADVANCE-RATE
                         WS-MIXED-ADVANCE-RATE.
JS0206     INITIALIZE WS-FMDL-PRODUCT-FEE-INFO.

      *------------------------------
       20872-CHECK-OIL-ONLY.
      *------------------------------
      **** (GET THE NUMBER OF DAYS SINCE LAST XTN) ****
JS2000     MOVE +223 TO CALENDAR-OPTIONS
CP0807     MOVE UNITMST-DATE-LAST-XTN TO CALENDAR-JULIAN-DATE
CP1011     CALL 'CXUTSCAL' USING CALENDAR-PARAMETERS, OMITTED
JS2000     MOVE CALENDAR-DAYS TO WS-CALC-DAYS.

           MOVE EIBTIME TO SYS-TIME.
           COMPUTE CURRENT-TIME-IN-SECONDS =
             (SYS-HH * 3600) + (SYS-MN * 60) + SYS-SS.

CP0807     MOVE UNITMST-TIME-LAST-XTN TO SYS-TIME.
           COMPUTE CURRENT-TIME-IN-SECONDS =
             (CURRENT-TIME-IN-SECONDS +
JS2000        ((WS-CALC-DAYS)  * 86400)) -
              ((SYS-HH * 3600) + (SYS-MN * 60) + SYS-SS).
           IF (CURRENT-TIME-IN-SECONDS < 1800) AND
CP0807        (WS-UIWA-SC-CODE = UNITMST-LAST-TS-CODE)
              MOVE 'Y' TO WS-EXIT-FLAG.
           IF (CDN-CUST-ACCT-CODE = 'CA032')
              MOVE 'Y' TO WS-EXIT-FLAG.

      *------------------------------
JS1098 20873-CHECK-NO-FEE.
      *------------------------------
      **** (IF NO FEE ZERO OUT ALL OF THE FEES) ****
           IF COM-NO-FEE-FLAG = 'Y'
              MOVE 'Y' TO WS-EXIT-FLAG.

      *------------------------------
       20880-ALLIANCE-RATES.
      *------------------------------
           EVALUATE TRUE
              WHEN THIS-BE-TERMINAL-FUEL
                 PERFORM 20883-TERMINAL-FUEL-RATE
              WHEN THIS-BE-A-VRU-EXPRESS-CASH
                 PERFORM 20882-VOICE-RESPONSE-RATE
              WHEN COM-RMF-FLAG = 'Y'
102810           IF NOT WS-NO-FUEL-FEE
                    MOVE CDN-RMF-XTN-FEE          TO WS-BASE-FUEL-RATE
                    MOVE CDN-RMF-XTN-FEE-ALTCUR   TO WS-MIXED-FUEL-RATE
                 END-IF
                 PERFORM 20881-CHECK-CASH-ADVANCE
              WHEN OTHER
      *          **** (ASSUME STANDARD FEE FOR THE MOMENT) ****
102810           IF NOT WS-NO-FUEL-FEE
                    MOVE CDN-ALL-STANDARD-FEE     TO WS-BASE-FUEL-RATE
                    MOVE CDN-ALL-STANDARD-FEE-ALTCUR
                                                  TO WS-MIXED-FUEL-RATE
                 END-IF
                 MOVE ZEROS TO WS-BASE-ADVANCE-RATE
                               WS-MIXED-ADVANCE-RATE
                 PERFORM 20881-CHECK-DIRECT-BILL
                 IF WS-EXIT-FLAG = 'N'
                    PERFORM 20881-CHECK-NON-DIRECT-BILL
                    PERFORM 20881-CHECK-CASH-ADVANCE
                 END-IF
JS0206***** IF THERE IS A PRDFMRM RECORD, DO NOT NEED TO PERFORM THIS
JS0206           IF COM-RMR-PRDFMRM-EXISTS NOT = 'Y'
JS0206              PERFORM 20895-SETUP-PRODUCT-FEES
JS0206           END-IF
           END-EVALUATE.

      *------------------------------
       20881-CHECK-DIRECT-BILL.
      *------------------------------
      **** (SEE IF EVERYTHING WAS DIRECT BILL) ****
           IF WS-BILLABLE = 0 AND WS-NON-BILLABLE > 0
              IF PGRM-FUNCTION-CASH-ONLY
                MOVE CDN-ALL-DIRECT-BILL        TO WS-BASE-ADVANCE-RATE
                MOVE CDN-ALL-DIRECT-BILL-ALTCUR TO WS-MIXED-ADVANCE-RATE
                MOVE ZEROS TO WS-BASE-FUEL-RATE
                              WS-MIXED-FUEL-RATE
                MOVE 'Y' TO WS-EXIT-FLAG
              ELSE
102810          IF NOT WS-NO-FUEL-FEE
                   MOVE CDN-ALL-DIRECT-BILL     TO WS-BASE-FUEL-RATE
                   MOVE CDN-ALL-DIRECT-BILL-ALTCUR
                                                TO WS-MIXED-FUEL-RATE
                END-IF
                MOVE 'Y' TO WS-EXIT-FLAG.

      *------------------------------
       20881-CHECK-NON-DIRECT-BILL.
      *------------------------------
      **** (IF ANY PART OF A DIRECT BILL TRANSACTION IS BILLABLE) ****
      **** (THE STANDARD FEE IS USED WITH NO ADD-ON FOR CASH    ) ****
           IF COM-DIRECT-BILLING-IN-PROCESS
              IF WS-BILLABLE-IS-ALL-CASH
                 IF WS-NON-BILLABLE > 0
                    IF CDN-CUST-ACCT-CODE = 'CR950' OR 'SU960' OR
                                            'SH985' OR 'HT002'
102810                 IF NOT WS-NO-FUEL-FEE
                          MOVE +.50 TO WS-BASE-FUEL-RATE
                                       WS-MIXED-FUEL-RATE
                       END-IF
                       MOVE +.50 TO WS-BASE-ADVANCE-RATE
                                    WS-MIXED-ADVANCE-RATE
                       MOVE 'Y' TO WS-EXIT-FLAG
                    ELSE
102810                 IF NOT WS-NO-FUEL-FEE
                          MOVE CDN-ALL-CASH-ONLY-RATE
                                    TO WS-BASE-FUEL-RATE
                          MOVE CDN-ALL-CASH-ONLY-RATE-ALTCUR
                                    TO WS-MIXED-FUEL-RATE
                       END-IF
                       MOVE ZEROS TO WS-BASE-ADVANCE-RATE
                                     WS-MIXED-ADVANCE-RATE
                       MOVE 'Y' TO WS-EXIT-FLAG
                  ELSE
                     MOVE CDN-ALL-CASH-ONLY-RATE        TO
                          WS-BASE-ADVANCE-RATE
                     MOVE CDN-ALL-CASH-ONLY-RATE-ALTCUR TO
                          WS-MIXED-ADVANCE-RATE
                     MOVE ZEROS TO WS-BASE-FUEL-RATE
                                   WS-MIXED-FUEL-RATE
                     MOVE 'Y' TO WS-EXIT-FLAG.

      *------------------------------
       20881-CHECK-CASH-ADVANCE.
      *------------------------------
           IF WS-UIWA-CASH-AMT = 0
              MOVE 'Y' TO WS-EXIT-FLAG.

           IF WS-EXIT-FLAG = 'N'
              EVALUATE TRUE
                 WHEN WS-BILLABLE-IS-ALL-CASH
                    MOVE ZEROS TO WS-BASE-FUEL-RATE
JS0206                            WS-MIXED-FUEL-RATE
                    MOVE CDN-ALL-CASH-ONLY-RATE        TO
                         WS-BASE-ADVANCE-RATE
                    MOVE CDN-ALL-CASH-ONLY-RATE-ALTCUR TO
                         WS-MIXED-ADVANCE-RATE
                 WHEN OTHER
                    MOVE CDN-ALL-CASH-ADD-ON        TO
                          WS-BASE-ADVANCE-RATE
                    MOVE CDN-ALL-CASH-ADD-ON-ALTCUR TO
                          WS-MIXED-ADVANCE-RATE
              END-EVALUATE.

      *------------------------------
       20882-VOICE-RESPONSE-RATE.
      *------------------------------
           MOVE ZEROS TO WS-BASE-FUEL-RATE
                         WS-MIXED-FUEL-RATE
           IF CDN-LESS-PICKUP
              MOVE CDN-ALL-EXP-CASH-PICKUP-RATE TO WS-BASE-ADVANCE-RATE
                                                   WS-MIXED-ADVANCE-RATE
                                                   WS-CHARGE-RATE
           ELSE
              MOVE CDN-ALL-EXP-CASH-PICKUP-RATE TO WS-BASE-ADVANCE-RATE
                                                   WS-MIXED-ADVANCE-RATE
              MOVE ZEROES                       TO WS-CHARGE-RATE.

      *------------------------------
       20883-TERMINAL-FUEL-RATE.
      *------------------------------
           IF THIS-BE-TERMINAL-FUEL
              MOVE ZEROS TO WS-BASE-ADVANCE-RATE
                            WS-MIXED-ADVANCE-RATE
102810        IF NOT WS-NO-FUEL-FEE
                 MOVE CDN-ALL-TERMINAL-FUEL     TO WS-BASE-FUEL-RATE
                 MOVE CDN-ALL-TERMINAL-FUEL-ALTCUR
                                                TO WS-MIXED-FUEL-RATE
              END-IF.

      *------------------------------
       20890-OLD-RATES.
      *------------------------------
           EVALUATE TRUE
              WHEN THIS-BE-TERMINAL-FUEL
                 PERFORM 20891-TERMINAL-FUEL-RATE
              WHEN OTHER
                 PERFORM 20892-SETUP-NORMAL-RATE
                 IF WS-EXIT-FLAG = 'N'
                    PERFORM 20892-NORMAL-RATE-DB-CASH
                 END-IF
                 IF WS-EXIT-FLAG = 'N'
                    PERFORM 20892-NORMAL-RATE-COMBINE
                 END-IF
           END-EVALUATE.

      *------------------------------
       20891-TERMINAL-FUEL-RATE.
      *------------------------------
DR0422     MOVE '20891-TERMINAL-FUEL-RATE'  TO CXUTS0ML-PARAGRAPH.
           MOVE INP-TOTAL-COST TO WS-CURXMN.
           IF THIS-BE-TERMINAL-FUEL
             AND COM-FP-SCRAMBLER-FLAG > SPACES
             MOVE COM-FP-SCRAMBLER-FLAG TO RATE-KEY-RATE.
           MOVE 0             TO RCA-RATE-CODE.
           MOVE RATE-KEY-RATE TO RCA-RATE-CODE-LO.
           MOVE WS-CURXMN     TO RCA-TRANS-AMT.
           IF THIS-BE-TERMINAL-FUEL
             MOVE 50          TO RCA-TRANS-AMT.
           EXEC CICS LINK
                PROGRAM  ('RATEMNT')
                COMMAREA (RATE-CALC-AREA)
                LENGTH   (12)
                RESP     (EIBRESP)
           END-EXEC.
           PERFORM CHECK-FOR-NORMAL-EIBRESP.
           IF RCA-TRANS-RATE IS NOT NUMERIC
             MOVE -1 TO RCA-TRANS-RATE.
           IF RCA-TRANS-RATE IS LESS THAN 0 THEN
              MOVE INVALID-RATE-CODE   TO OUT-COMENT
              MOVE INVALID-RATE-CODE-N TO POS-ERROR-NUMBER
              MOVE INVALID-RATE-NBR    TO CALL-COMPANY-NBR
              MOVE CALL-COMPANY-MSG    TO NEW-OUT-MESSAGE
              MOVE 'Y'                 TO VCWS-ERROR-IND
              MOVE -1                  TO FPINVNRL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
           MOVE RCA-TRANS-RATE TO ODR-XMIT-RATE IN ORDRFIL-DETAIL-RECD.
           MOVE ZEROES TO WS-BASE-ADVANCE-RATE
                          WS-BASE-FUEL-RATE
                          WS-MIXED-ADVANCE-RATE
                          WS-MIXED-FUEL-RATE
102810     IF NOT WS-NO-FUEL-FEE
              MOVE ODR-XMIT-RATE IN ORDRFIL-DETAIL-RECD TO
                          WS-BASE-FUEL-RATE
                          WS-MIXED-FUEL-RATE
           END-IF.

      *-------------------------
       20892-SETUP-NORMAL-RATE.
      *-------------------------
      **** (SETUP THE DEFAULT NORMAL RATE) ****
           IF COM-DIRECT-BILLING-IN-PROCESS AND
              WS-BILLABLE     = ZEROES      AND
              WS-NON-BILLABLE > ZEROES
102810        IF NOT WS-NO-FUEL-FEE
                 MOVE CDN-DIRECT-BILL-RATE TO WS-BASE-FUEL-RATE
                                              WS-MIXED-FUEL-RATE
              END-IF
              MOVE 0 TO WS-BASE-ADVANCE-RATE
                        WS-MIXED-ADVANCE-RATE
           ELSE
              MOVE ZEROES TO WS-BASE-ADVANCE-RATE
                             WS-BASE-FUEL-RATE
                             WS-MIXED-ADVANCE-RATE
                             WS-MIXED-FUEL-RATE
              IF PGRM-FUNCTION IS GREATER THAN 1
102810           IF NOT WS-NO-FUEL-FEE
CP0807              MOVE CDN-FUEL-RATE (1)  TO WS-BASE-FUEL-RATE
CP0807                                         WS-MIXED-FUEL-RATE
                 END-IF
              END-IF
              IF WS-UIWA-CASH-AMT IS GREATER THAN .01
CP0807           MOVE WS-FL-CASH-ADV-RATE  TO WS-BASE-ADVANCE-RATE,
CP0807                                        WS-MIXED-ADVANCE-RATE
                 IF PGRM-FUNCTION IS GREATER THAN 1
CP0807              MOVE CDN-FUEL-RATE (6) TO WS-BASE-ADVANCE-RATE
                                              WS-MIXED-ADVANCE-RATE.

CP0807     IF WS-FP-ACCT-CODE = 'AN020' OR
CP0807        WS-FP-ACCT-CODE = 'WA050'
              MOVE 'Y' TO WS-EXIT-FLAG.
           IF NOT COM-DIRECT-BILLING-IN-PROCESS
              MOVE 'Y' TO WS-EXIT-FLAG.

      *------------------------------
       20892-NORMAL-RATE-DB-CASH.
      *------------------------------
           IF WS-EXIT-FLAG = 'N' AND
              WS-BILLABLE = 0
              IF WS-UIWA-CASH-AMT = WS-NON-BILLABLE
                 MOVE ZEROS TO WS-BASE-FUEL-RATE
                               WS-MIXED-FUEL-RATE
                 MOVE CDN-DIRECT-BILL-RATE TO WS-BASE-ADVANCE-RATE
                                              WS-MIXED-ADVANCE-RATE.

           IF WS-BILLABLE     = 0 OR
              WS-NON-BILLABLE = 0
              MOVE 'Y' TO WS-EXIT-FLAG.

      *------------------------------
       20892-NORMAL-RATE-COMBINE.
      *------------------------------
      **** (BILLABLE AND NON-BILLABLE EXISTS) ****
      *
      **** (SEE IF CASH IS THE ONLY BILLABLE) ****
           IF WS-BILLABLE-IS-ALL-CASH
JS0604        IF COM-DIRECT-BILLING-CASH = '0'
102810           IF NOT WS-NO-FUEL-FEE
                    MOVE CDN-DIRECT-BILL-RATE TO WS-BASE-FUEL-RATE
                                                 WS-MIXED-FUEL-RATE
                 END-IF
                 MOVE 'Y' TO WS-EXIT-FLAG.

           IF WS-EXIT-FLAG = 'N' AND
              WS-UIWA-CASH-AMT > 0 AND
JS0604        COM-DIRECT-BILLING-CASH = '1'
              MOVE CDN-DIRECT-BILL-RATE TO WS-BASE-ADVANCE-RATE
                                           WS-MIXED-ADVANCE-RATE.

      *------------------------------
       20895-SETUP-PRODUCT-FEES.
      *------------------------------
           IF WS-UIWA-PR-CODE(01) NUMERIC OR
              WS-UIWA-PR-CODE(02) NUMERIC OR
              WS-UIWA-PR-CODE(03) NUMERIC
JS0107        IF WS-PRDCUST-HAS-BEEN-READ NOT = 'Y'
JS0107           PERFORM RC-READ-PRDCUST.

           INITIALIZE WS-PRD-FEE-WORK-AREA
           MOVE 'CUST'               TO WS-PRD-CALC-TYPE
           IF WS-UIWA-PR-CODE (01) NUMERIC
              COMPUTE WS-INDEX = WS-UIWA-PR1-CODE-NUM + 1
              MOVE PRDCST-FEE-TYPE (WS-INDEX) TO WS-PRD-FEE-TYPE (01)
              MOVE PRDCST-CUST-FUNDED-RATE (WS-INDEX)       TO
                   WS-PRD-FUNDED-RATE (01)
              MOVE PRDCST-CUST-DB-RATE     (WS-INDEX)       TO
                   WS-PRD-DB-RATE (01)
              MOVE PRDCST-CUST-FUNDED-RATE-ALTCUR(WS-INDEX) TO
                   WS-PRD-FUNDED-RATE-ALTCUR (01)
              MOVE PRDCST-CUST-DB-RATE-ALTCUR (WS-INDEX)    TO
                   WS-PRD-DB-RATE-ALTCUR (01)
           END-IF.
           IF WS-UIWA-PR-CODE (02) NUMERIC
              COMPUTE WS-INDEX = WS-UIWA-PR2-CODE-NUM + 1
              MOVE PRDCST-FEE-TYPE (WS-INDEX) TO WS-PRD-FEE-TYPE (02)
              MOVE PRDCST-CUST-FUNDED-RATE (WS-INDEX)       TO
                   WS-PRD-FUNDED-RATE (02)
              MOVE PRDCST-CUST-DB-RATE     (WS-INDEX)       TO
                   WS-PRD-DB-RATE (02)
              MOVE PRDCST-CUST-FUNDED-RATE-ALTCUR(WS-INDEX) TO
                   WS-PRD-FUNDED-RATE-ALTCUR (02)
              MOVE PRDCST-CUST-DB-RATE-ALTCUR (WS-INDEX)    TO
                   WS-PRD-DB-RATE-ALTCUR (02)
           END-IF.
           IF WS-UIWA-PR-CODE (03) NUMERIC
              COMPUTE WS-INDEX = WS-UIWA-PR3-CODE-NUM + 1
              MOVE PRDCST-FEE-TYPE (WS-INDEX) TO WS-PRD-FEE-TYPE (03)
              MOVE PRDCST-CUST-FUNDED-RATE (WS-INDEX)       TO
                   WS-PRD-FUNDED-RATE (03)
              MOVE PRDCST-CUST-DB-RATE     (WS-INDEX)       TO
                   WS-PRD-DB-RATE (03)
              MOVE PRDCST-CUST-FUNDED-RATE-ALTCUR(WS-INDEX) TO
                   WS-PRD-FUNDED-RATE-ALTCUR (03)
              MOVE PRDCST-CUST-DB-RATE-ALTCUR (WS-INDEX)    TO
                   WS-PRD-DB-RATE-ALTCUR (03)
           END-IF.
           PERFORM 20896-CHECK-FOR-PRODUCT-FEES.

      *------------------------------
JS0206 20896-CHECK-FOR-PRODUCT-FEES.
      *------------------------------
           MOVE 'N' TO WS-CHECK-PRODUCT-FEE
           MOVE 'N' TO WS-STANDARD-ITEM-PURCHASED
           MOVE 'N' TO WS-ADD-ON-APPLIES
           IF (WS-UIWA-PR-CODE (01) NUMERIC) AND
              (WS-PRD-FEE-TYPE (01) = 'A' OR 'P' OR 'B')
              MOVE 'Y' TO WS-CHECK-PRODUCT-FEE
           END-IF.
           IF (WS-UIWA-PR-CODE (02) NUMERIC) AND
              (WS-PRD-FEE-TYPE (02) = 'A' OR 'P' OR 'B')
              MOVE 'Y' TO WS-CHECK-PRODUCT-FEE
           END-IF.
           IF (WS-UIWA-PR-CODE (03) NUMERIC) AND
              (WS-PRD-FEE-TYPE (03) = 'A' OR 'P' OR 'B')
              MOVE 'Y' TO WS-CHECK-PRODUCT-FEE
           END-IF.
           IF WS-CHECK-PRODUCT-FEE = 'Y'
              PERFORM 20897-SETUP-PURCHASE-FLAG
              PERFORM 20897-SETUP-BASE-FEE
              PERFORM 20897-ADD-PRODUCT-FEES
                 VARYING WS-INDEX FROM 1 BY 1
                 UNTIL   WS-INDEX > 3
           END-IF.

      *------------------------------
JS0206 20897-SETUP-PURCHASE-FLAG.
      *------------------------------
      *** (SETUP FLAG TO INDICATE SOMETHING OTHER THAN NON SPECIAL) ***
      *** (PRICED PRODUCT WAS PURCHASED                           ) ***
           IF  (WS-UIWA-NR2-QTY > ZERO)
            OR (WS-UIWA-NR1-QTY > ZERO)
            OR (WS-UIWA-REF-QTY > ZERO)
            OR (WS-UIWA-OTH-QTY > ZERO)
            OR (WS-UIWA-OIL-QTY > ZERO)
            OR (WS-UIWA-PR-CODE (01) NUMERIC AND
                (WS-PRD-FEE-TYPE (01) = 'S' OR ' '))
            OR (WS-UIWA-PR-CODE (02) NUMERIC AND
                (WS-PRD-FEE-TYPE (02) = 'S' OR ' '))
            OR (WS-UIWA-PR-CODE (03) NUMERIC AND
                (WS-PRD-FEE-TYPE (03) = 'S' OR ' '))
               MOVE 'Y' TO WS-STANDARD-ITEM-PURCHASED
           END-IF.

      *------------------------------
JS0206 20897-SETUP-BASE-FEE.
      *------------------------------
           PERFORM VARYING TALLY FROM 1 BY 1
                   UNTIL   TALLY > 3
              IF (WS-UIWA-PR-CODE (TALLY) NUMERIC) AND
                 (WS-PRD-FEE-TYPE (TALLY) = 'P' OR 'B')
                 MOVE 'Y'       TO WS-ADD-ON-APPLIES
                 IF WS-STANDARD-ITEM-PURCHASED = 'N'
                    EVALUATE WS-PRD-CALC-TYPE
                       WHEN 'CUST'
                          MOVE ZEROES TO WS-BASE-FUEL-RATE
                                         WS-MIXED-FUEL-RATE
                       WHEN 'FMRM'
                          MOVE ZEROES TO COM-PNET-CO-FEE
                                         COM-PNET-SC-FEE
                       WHEN 'SCMM'
                          MOVE ZEROES TO WS-DC-FEE-AMT-FUEL
                                         WS-PRD-PROD-FEE (01)
                                         WS-PRD-PROD-FEE (02)
                                         WS-PRD-PROD-FEE (03)
                    END-EVALUATE
                 END-IF
              END-IF
           END-PERFORM.

      *------------------------------
JS0206 20897-ADD-PRODUCT-FEES.
      *------------------------------
           IF WS-UIWA-PR-CODE (WS-INDEX) NUMERIC
              EVALUATE WS-PRD-FEE-TYPE (WS-INDEX)
                 WHEN 'A'
                    IF WS-STANDARD-ITEM-PURCHASED = 'Y' OR
                       WS-ADD-ON-APPLIES          = 'Y'
                       PERFORM 20897-ADD-THE-FEE
                    END-IF
                 WHEN 'P'
                    IF WS-STANDARD-ITEM-PURCHASED = 'N'
                       PERFORM 20897-ADD-THE-FEE
                    END-IF
                 WHEN 'B'
                    PERFORM 20897-ADD-THE-FEE
              END-EVALUATE
           END-IF.

      *------------------------------
JS0206 20897-ADD-THE-FEE.
      *------------------------------
           EVALUATE WS-PRD-CALC-TYPE
              WHEN 'CUST'
                 PERFORM 20897-ADD-THE-FEE-CUST
              WHEN 'SCMM'
                 PERFORM 20897-ADD-THE-FEE-SCMM
              WHEN 'FMRM'
                 PERFORM 20897-ADD-THE-FEE-FMRM
           END-EVALUATE.

      *------------------------------
JS0206 20897-ADD-THE-FEE-CUST.
      *------------------------------
      *** (SETUP THE BASE FEE) ***
           IF WS-BILLABLE = 0 AND WS-NON-BILLABLE > 0
              ADD WS-PRD-DB-RATE (WS-INDEX)        TO
                  WS-BASE-FUEL-RATE
              ADD WS-PRD-DB-RATE-ALTCUR (WS-INDEX) TO
                  WS-MIXED-FUEL-RATE
              MOVE WS-PRD-DB-RATE (WS-INDEX)       TO
                   WS-FMDL-PF-CUST-FEE (WS-INDEX)

           ELSE
              ADD WS-PRD-FUNDED-RATE (WS-INDEX)    TO
                  WS-BASE-FUEL-RATE
              ADD WS-PRD-FUNDED-RATE-ALTCUR (WS-INDEX) TO
                  WS-MIXED-FUEL-RATE
              MOVE WS-PRD-FUNDED-RATE (WS-INDEX)       TO
                   WS-FMDL-PF-CUST-FEE (WS-INDEX)
           END-IF.
           MOVE 'C'                             TO
                WS-FMDL-PF-CUST-FEE-SOURCE (WS-INDEX)
           MOVE PRDCST-CUSTOMER-TYPE            TO
                WS-FMDL-PF-CUST-FEE-CUST-TYPE (WS-INDEX)
           MOVE WS-PRD-FEE-TYPE (WS-INDEX)      TO
                WS-FMDL-PF-CUST-FEE-TYPE (WS-INDEX).

      *------------------------------
JS0206 20897-ADD-THE-FEE-SCMM.
      *------------------------------
      *** (IF ORIGINAL FEE WAS PERCENT, REMOVE % THAT WAS FOR PROD) ***
           SUBTRACT WS-PRD-PROD-FEE (WS-INDEX) FROM
                    WS-DC-FEE-AMT-FUEL.

      *** (ADD IN THE PROD FEE) ***
           IF WS-PRD-SCM-FLAT-OR-POF (WS-INDEX) = 'F'
              EVALUATE TRUE
                 WHEN THIS-IS-A-POS-TRANS OR
                      COM-DOWN-ENTRY-FLAG = 'Y'
                    ADD WS-PRD-SCM-AUTO-RATE   (WS-INDEX) TO
                        WS-DC-FEE-AMT-FUEL
                    MOVE WS-PRD-SCM-AUTO-RATE (WS-INDEX) TO
                         WS-FMDL-PF-SC-FEE (WS-INDEX)
                 WHEN OTHER
                    ADD WS-PRD-SCM-MANUAL-RATE (WS-INDEX) TO
                        WS-DC-FEE-AMT-FUEL
                    MOVE WS-PRD-SCM-MANUAL-RATE (WS-INDEX) TO
                         WS-FMDL-PF-SC-FEE (WS-INDEX)
              END-EVALUATE
           ELSE
              EVALUATE TRUE
                 WHEN THIS-IS-A-POS-TRANS OR
                      COM-DOWN-ENTRY-FLAG = 'Y'
                   COMPUTE WS-DC-FEE-AMT-FUEL ROUNDED =
                           WS-DC-FEE-AMT-FUEL +
                           (WS-UIWA-PR-COST-SC  (WS-INDEX) *
                            WS-PRD-SCM-AUTO-RATE (WS-INDEX) / 100)
                   COMPUTE WS-FMDL-PF-SC-FEE (WS-INDEX) ROUNDED =
                           (WS-UIWA-PR-COST-SC  (WS-INDEX) *
                            WS-PRD-SCM-AUTO-RATE (WS-INDEX) / 100)
                 WHEN OTHER
                   COMPUTE WS-DC-FEE-AMT-FUEL ROUNDED =
                           WS-DC-FEE-AMT-FUEL +
                           (WS-UIWA-PR-COST-SC  (WS-INDEX) *
                            WS-PRD-SCM-MANUAL-RATE (WS-INDEX) / 100)
                   COMPUTE WS-FMDL-PF-SC-FEE (WS-INDEX) ROUNDED =
                           (WS-UIWA-PR-COST-SC  (WS-INDEX) *
                            WS-PRD-SCM-MANUAL-RATE (WS-INDEX) / 100)
              END-EVALUATE
           END-IF.

      *** (SETUP THE REMAINING FMLOG HOLD AREAS) ***
           MOVE 'S'                             TO
                WS-FMDL-PF-SC-FEE-SOURCE (WS-INDEX)
           MOVE PRDSCM-LOCATION-TYPE            TO
                WS-FMDL-PF-SC-FEE-LOC-TYPE (WS-INDEX)
           MOVE WS-PRD-FEE-TYPE (WS-INDEX)      TO
                WS-FMDL-PF-SC-FEE-TYPE (WS-INDEX).

      *------------------------------
JS0206 20897-ADD-THE-FEE-FMRM.
      *------------------------------
      *** (SETUP THE CUSTOMER CUSTOM FEES) ***
           IF WS-NON-BILLABLE > ZEROS OR COM-DIRECT-BILLING-IN-PROCESS
              ADD WS-PRD-DB-RATE (WS-INDEX)        TO
                  COM-PNET-CO-FEE
              MOVE WS-PRD-DB-RATE (WS-INDEX) TO
                  WS-FMDL-PF-CUST-FEE (WS-INDEX)
           ELSE
              ADD WS-PRD-FUNDED-RATE (WS-INDEX)    TO
                  COM-PNET-CO-FEE
              MOVE WS-PRD-FUNDED-RATE (WS-INDEX) TO
                  WS-FMDL-PF-CUST-FEE (WS-INDEX)
           END-IF.

      *** (SETUP THE CUSTOM SC FEE) ***
           ADD WS-PRD-SC-RATE (WS-INDEX)                TO
               COM-PNET-SC-FEE.
           MOVE WS-PRD-SC-RATE (WS-INDEX) TO
                WS-FMDL-PF-SC-FEE (WS-INDEX).

      *** (SETUP THE FMLOG HOLD AREAS) ***
           MOVE 'F'                             TO
                WS-FMDL-PF-CUST-FEE-SOURCE (WS-INDEX)
                WS-FMDL-PF-SC-FEE-SOURCE (WS-INDEX)
           MOVE COM-RMR-PRDFMRM-LOC-TYPE         TO
                WS-FMDL-PF-CUST-FEE-CUST-TYPE (WS-INDEX)
                WS-FMDL-PF-SC-FEE-LOC-TYPE (WS-INDEX)
           MOVE WS-PRD-FEE-TYPE (WS-INDEX)      TO
                WS-FMDL-PF-CUST-FEE-TYPE (WS-INDEX)
                WS-FMDL-PF-SC-FEE-TYPE (WS-INDEX).

      *------------------------------
       20900-CHECK-FOR-VRU-FEE.
      *------------------------------
      **** (GET VRU FEE FOR NON ALLIANCE CUSTOMERS) ****
           IF (NOT THIS-IS-AN-ALLIANCE-CUST) AND
              (NOT COM-PREFERRED-CUSTOMER)
              IF THIS-BE-A-VRU-EXPRESS-CASH
                 IF CDN-BILL-AT-PICKUP
                    IF CDN-LESS-PICKUP
                       MOVE WS-PICKUP-RATE TO WS-BASE-ADVANCE-RATE
                                              WS-MIXED-ADVANCE-RATE
                                              WS-CHARGE-RATE
                    ELSE
                       MOVE WS-PICKUP-RATE TO WS-BASE-ADVANCE-RATE
                                              WS-MIXED-ADVANCE-RATE
                       MOVE ZEROES         TO WS-CHARGE-RATE.

      *------------------------------
       20905-CHECK-FOR-FREEBIE.
      *------------------------------
           MOVE 'N' TO WS-EXIT-FLAG.

      **** (FUEL LESS CHARGES (FLAG IS ON CDNCUST) LESS-CHARGE) ****
JS1199     PERFORM DETERMINE-IF-BALANCE-BASED
JS1199     IF NOT WS-BALANCE-BASED
              MOVE 'Y' TO WS-EXIT-FLAG.
           IF THIS-BE-TERMINAL-FUEL OR WS-BILLABLE = 0
              MOVE 'Y' TO WS-EXIT-FLAG.

           IF THIS-BE-AN-ATM-XTN
              MOVE 'Y' TO WS-EXIT-FLAG.

           IF WS-EXIT-FLAG = 'N'
              IF PRM-FREE-XTN-COUNT < CDN-FREE-XTN-COUNT
                 MOVE ZEROS TO WS-BASE-ADVANCE-RATE,
                               WS-MIXED-ADVANCE-RATE,
                               WS-BASE-FUEL-RATE,
                               WS-MIXED-FUEL-RATE,
                               WS-CHARGE-RATE.

      *------------------------------
       20910-CHECK-BRIDGE-FEES.
      *------------------------------
      **** (IF BRIDGE ADJUST RATES) ****
           MOVE ZEROES TO SAVE-SC-FEE,
                          WS-DC-FEE-AMT-CUSTOM
           IF COM-PNET-BRIDGE-FLAG-YES OR
              COM-CUSTOM-FEE-FLAG = 'Y'
              PERFORM 20911-SETUP-BRIDGE-FEES
              PERFORM 20912-CHECK-BRIDGE-CASH-ONLY
              IF WS-EXIT-FLAG = 'N'
                 PERFORM 20913-ADJUST-BRIDGE-FEES-CO
                 PERFORM 20914-ADJUST-BRIDGE-FEES-SC
              END-IF
              PERFORM 20915-ADJUST-BRIDGE-CASH-CO
              PERFORM 20916-ADJUST-BRIDGE-CASH-SC
              PERFORM 20917-ADJUST-BRIDGE-ADD-ON.

      *------------------------------
       20911-SETUP-BRIDGE-FEES.
      *------------------------------
           IF CDN-RELATIONSHIP-FLAG = 'Y'
PM0517      IF COM-RMR-FUND-DB-CASH-FEE-TYPE = 'P'
PM0517      OR COM-RMR-FUND-DB-BOTH-FEE-TYPE = 'P'
PM0517      OR COM-RMR-FUND-DB-FUEL-FEE-TYPE = 'P'
PM0517      OR COM-RMR-FUND-CASH-FEE-TYPE    = 'P'
PM0517      OR COM-RMR-FUND-BOTH-FEE-TYPE    = 'P'
PM0517      OR COM-RMR-FUND-FUEL-FEE-TYPE    = 'P'
PM0517         PERFORM 20920-GET-DISCOUNT-INFO
PM0517         COMPUTE WS-TOTAL-FACE-SC-POF  =
PM0517                WS-UIWA-NR2-COST-SC +
PM0517                WS-UIWA-REF-COST-SC +
PM0517                WS-UIWA-OTH-COST-SC +
PM0517                WS-UIWA-NR1-COST-SC +
PM0517                WS-UIWA-OIL-COST-SC +
PM0517                WS-UIWA-PR1-COST-SC +
PM0517                WS-UIWA-PR2-COST-SC +
PM0517                WS-UIWA-PR3-COST-SC
PM0517***** DISCOUNT AMOUNT FROM PILOT/LOVES NETWORK PRICING IS NOT
PM0517***** INCLUDED IN WS-DC-DISCOUNT-AMT AT THIS POINT.  IF THAT
PM0517***** CAUSES A PROBLEM, HERE IS WHERE IT CAN BE CHANGED
PM0517         COMPUTE WS-TOTAL-FACE-SC-POF =
PM0517                WS-TOTAL-FACE-SC-POF - WS-DC-DISCOUNT-AMT
PM0517         MOVE 'Y' TO WS-FMRM-05-POF
PM0517      END-IF
            IF WS-NON-BILLABLE > ZEROS OR COM-DIRECT-BILLING-IN-PROCESS
               EVALUATE TRUE
                  WHEN PGRM-FUNCTION-CASH-ONLY
                    MOVE COM-RMR-CO-DB-CASH TO COM-PNET-CO-FEE
                    MOVE COM-RMR-SC-DB-CASH TO COM-PNET-SC-FEE
                    MOVE ZEROS              TO COM-PNET-CASH-ADD-ON
                                                COM-PNET-SC-ADD-ON
PM0517              IF COM-RMR-SC-DB-CASH   > ZEROS
PM0517              AND COM-RMR-FUND-DB-CASH-FEE-TYPE = 'P'
PM0517                  IF COM-PNET-SC-FEE > ZEROS
PM0517                     COMPUTE COM-PNET-SC-FEE = WS-UIWA-CASH-AMT-SC
PM0517                     COMPUTE COM-PNET-SC-FEE
PM0517                        ROUNDED = COM-PNET-SC-FEE *
PM0517                                  COM-RMR-SC-DB-CASH / 100
PM0517                  END-IF
PM0517              END-IF
                  WHEN WS-UIWA-CASH-AMT > 0
                    MOVE COM-RMR-CO-DB-ADD-ON TO COM-PNET-CASH-ADD-ON
                    MOVE COM-RMR-CO-DB-BOTH   TO COM-PNET-CO-FEE
                    MOVE COM-RMR-SC-DB-BOTH   TO COM-PNET-SC-FEE
                    MOVE COM-RMR-SC-DB-ADD-ON TO COM-PNET-SC-ADD-ON
PM0517              IF COM-RMR-SC-DB-BOTH   > ZEROS
PM0517              AND COM-RMR-FUND-DB-BOTH-FEE-TYPE = 'P'
PM0517                  IF COM-PNET-SC-FEE > ZEROS
PM0517                     COMPUTE COM-PNET-SC-FEE =
PM0517                        WS-TOTAL-FACE-SC-POF + WS-UIWA-CASH-AMT
PM0517                     COMPUTE COM-PNET-SC-FEE
PM0517                        ROUNDED = COM-PNET-SC-FEE *
PM0517                                  COM-RMR-SC-DB-BOTH   / 100
PM0517                     MOVE ZEROS          TO COM-PNET-CASH-ADD-ON
PM0517                                            COM-PNET-SC-ADD-ON
PM0517                  END-IF
PM0517              END-IF
                  WHEN OTHER
                    MOVE COM-RMR-CO-DB-FUEL TO COM-PNET-CO-FEE
                    MOVE COM-RMR-SC-DB-FUEL TO COM-PNET-SC-FEE
                    MOVE ZEROS              TO COM-PNET-CASH-ADD-ON
                                               COM-PNET-SC-ADD-ON
PM0517              IF COM-RMR-SC-DB-FUEL   > ZEROS
PM0517              AND COM-RMR-FUND-DB-FUEL-FEE-TYPE = 'P'
PM0517                  IF COM-PNET-SC-FEE > ZEROS
PM0517                     COMPUTE COM-PNET-SC-FEE =
PM0517                                         WS-TOTAL-FACE-SC-POF
PM0517                     COMPUTE COM-PNET-SC-FEE
PM0517                               ROUNDED = COM-PNET-SC-FEE *
PM0517                                         COM-RMR-SC-DB-FUEL  / 100
PM0517                  END-IF
PM0517              END-IF
               END-EVALUATE
            ELSE
              EVALUATE TRUE
                 WHEN PGRM-FUNCTION-CASH-ONLY
                    MOVE COM-RMR-CO-FUND-CASH TO COM-PNET-CO-FEE
                    MOVE COM-RMR-SC-FUND-CASH TO COM-PNET-SC-FEE
                    MOVE ZEROS                TO COM-PNET-CASH-ADD-ON
                                                 COM-PNET-SC-ADD-ON
PM0517              IF COM-RMR-SC-FUND-CASH > ZEROS
PM0517              AND COM-RMR-FUND-CASH-FEE-TYPE = 'P'
PM0517                  IF COM-PNET-SC-FEE > ZEROS
PM0517                     COMPUTE COM-PNET-SC-FEE = WS-UIWA-CASH-AMT-SC
PM0517                     COMPUTE COM-PNET-SC-FEE
PM0517                        ROUNDED = COM-PNET-SC-FEE *
PM0517                                  COM-RMR-SC-FUND-CASH / 100
PM0517                  END-IF
PM0517              END-IF
                 WHEN WS-UIWA-CASH-AMT > 0
                    MOVE COM-RMR-CO-FUND-ADD-ON TO COM-PNET-CASH-ADD-ON
                    MOVE COM-RMR-CO-FUND-BOTH   TO COM-PNET-CO-FEE
                    MOVE COM-RMR-SC-FUND-BOTH   TO COM-PNET-SC-FEE
                    MOVE COM-RMR-SC-FUND-ADD-ON TO COM-PNET-SC-ADD-ON
PM0517              IF COM-RMR-SC-FUND-BOTH > ZEROS
PM0517              AND COM-RMR-FUND-BOTH-FEE-TYPE = 'P'
PM0517                  IF COM-PNET-SC-FEE > ZEROS
PM0517                     COMPUTE COM-PNET-SC-FEE =
PM0517                        WS-TOTAL-FACE-SC-POF + WS-UIWA-CASH-AMT
PM0517                     COMPUTE COM-PNET-SC-FEE
PM0517                              ROUNDED = COM-PNET-SC-FEE *
PM0517                                        COM-RMR-SC-FUND-BOTH / 100
PM0517                     MOVE ZEROS      TO COM-PNET-CASH-ADD-ON
PM0517                                        COM-PNET-SC-ADD-ON
PM0517                  END-IF
PM0517              END-IF
                 WHEN OTHER
                    MOVE COM-RMR-CO-FUND-FUEL TO COM-PNET-CO-FEE
                    MOVE COM-RMR-SC-FUND-FUEL TO COM-PNET-SC-FEE
                    MOVE ZEROS                TO COM-PNET-CASH-ADD-ON
                                                 COM-PNET-SC-ADD-ON
PM0517              IF COM-RMR-SC-FUND-FUEL > ZEROS
PM0517              AND COM-RMR-FUND-FUEL-FEE-TYPE = 'P'
PM0517                  IF COM-PNET-SC-FEE > ZEROS
PM0517                     COMPUTE COM-PNET-SC-FEE =
PM0517                                             WS-TOTAL-FACE-SC-POF
PM0517                     COMPUTE COM-PNET-SC-FEE
PM0517                        ROUNDED = COM-PNET-SC-FEE *
PM0517                                  COM-RMR-SC-FUND-FUEL / 100
PM0517                  END-IF
PM0517              END-IF
              END-EVALUATE
JS0206      END-IF
JS0206      PERFORM 20911-CHECK-PRODUCT-FEES.

      *------------------------------
JS0206 20911-CHECK-PRODUCT-FEES.
      *------------------------------
JS0107     MOVE COM-RMR-ALLOW-CUSTOM-PROD-FEE TO
JS0107          RMR-ALLOW-CUSTOM-PROD-FEE
JS0107     IF RMR-ALLOW-CUSTOM-PROD-FEE-YES
JS0107        PERFORM 20911-SETUP-PROD-FEES-FMRM
JS0107     ELSE
JS0107        PERFORM 20911-SETUP-PROD-FEES-DEFAULT
JS0107     END-IF.

      *------------------------------
JS0107 20911-SETUP-PROD-FEES-FMRM.
      *------------------------------
           MOVE 'FMRM'               TO WS-PRD-CALC-TYPE
           MOVE COM-RMR-PRD-RATE-INFO TO PFMRM-RATE-INFO
           INITIALIZE WS-PRD-FEE-WORK-AREA
           IF WS-UIWA-PR-CODE (01) NUMERIC
              COMPUTE WS-INDEX = WS-UIWA-PR1-CODE-NUM + 1
              MOVE PFMRM-FEE-TYPE (WS-INDEX)   TO WS-PRD-FEE-TYPE (01)
              MOVE PFMRM-CO-FUNDED-RATE (WS-INDEX)   TO
                   WS-PRD-FUNDED-RATE (01)
              MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
                   WS-PRD-DB-RATE (01)
              MOVE PFMRM-CO-FUNDED-RATE (WS-INDEX)  TO
                   WS-PRD-FUNDED-RATE-ALTCUR (01)
              MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
                   WS-PRD-DB-RATE-ALTCUR (01)
              MOVE PFMRM-SC-RATE (WS-INDEX)    TO
                   WS-PRD-SC-RATE (01)
           END-IF.
           IF WS-UIWA-PR-CODE (02) NUMERIC
              COMPUTE WS-INDEX = WS-UIWA-PR2-CODE-NUM + 1
              MOVE PFMRM-FEE-TYPE (WS-INDEX)   TO WS-PRD-FEE-TYPE (02)
              MOVE PFMRM-CO-FUNDED-RATE(WS-INDEX)   TO
                   WS-PRD-FUNDED-RATE (02)
              MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
                   WS-PRD-DB-RATE (02)
              MOVE PFMRM-CO-FUNDED-RATE (WS-INDEX)  TO
                   WS-PRD-FUNDED-RATE-ALTCUR (02)
              MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
                   WS-PRD-DB-RATE-ALTCUR (02)
              MOVE PFMRM-SC-RATE (WS-INDEX)    TO
                   WS-PRD-SC-RATE (02)
           END-IF.
           IF WS-UIWA-PR-CODE (03) NUMERIC
              COMPUTE WS-INDEX = WS-UIWA-PR3-CODE-NUM + 1
              MOVE PFMRM-FEE-TYPE (WS-INDEX)   TO WS-PRD-FEE-TYPE (03)
              MOVE PFMRM-CO-FUNDED-RATE(WS-INDEX)   TO
                   WS-PRD-FUNDED-RATE (03)
              MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
                   WS-PRD-DB-RATE (03)
              MOVE PFMRM-CO-FUNDED-RATE (WS-INDEX)  TO
                   WS-PRD-FUNDED-RATE-ALTCUR (03)
              MOVE PFMRM-CO-DB-RATE (WS-INDEX) TO
                   WS-PRD-DB-RATE-ALTCUR (03)
              MOVE PFMRM-SC-RATE (WS-INDEX)    TO
                   WS-PRD-SC-RATE (03)
           END-IF.
           PERFORM 20896-CHECK-FOR-PRODUCT-FEES.

      *------------------------------
JS0107 20911-SETUP-PROD-FEES-DEFAULT.
      *------------------------------
      *** (USE PRODUCT FEES FROM CUSTOMER AND SERVICE CENTER) ***

      *** (SAVE CURRENT CUST AND SCMM RATES IN HOLD AREA) ***
           MOVE WS-BASE-FUEL-RATE  TO WS-HOLD-BASE-FUEL-RATE
           MOVE WS-MIXED-FUEL-RATE TO WS-HOLD-MIXED-FUEL-RATE
           MOVE WS-DC-FEE-AMT-FUEL TO WS-HOLD-DC-FEE-AMT-FUEL.

      *** (MOVE THE CUSTOM FEES TO THE CUSTOMER AND SCMM FIELDS) ***
      *** (AND USED THE CUST AND SCMM PROD FEE ROUTINES        ) ***
           MOVE COM-PNET-CO-FEE    TO WS-BASE-FUEL-RATE
                                      WS-MIXED-FUEL-RATE
           MOVE COM-PNET-SC-FEE    TO WS-DC-FEE-AMT-FUEL
           PERFORM 20895-SETUP-PRODUCT-FEES
           PERFORM 81040-COMPUTE-PROD-FEES.

      *** (PUT RETURNED VALUES INTO CUSTOM FEE FIELDS AND RESTORE) ***
      *** (THE ORIGINAL CUSTOMER AND SERVICE CENTER FEES         ) ***
           MOVE WS-BASE-FUEL-RATE  TO COM-PNET-CO-FEE
           MOVE WS-DC-FEE-AMT-FUEL TO COM-PNET-SC-FEE.

           MOVE WS-HOLD-BASE-FUEL-RATE  TO WS-BASE-FUEL-RATE
           MOVE WS-HOLD-MIXED-FUEL-RATE TO WS-MIXED-FUEL-RATE
           MOVE WS-HOLD-DC-FEE-AMT-FUEL TO WS-DC-FEE-AMT-FUEL.

      *------------------------------
       20912-CHECK-BRIDGE-CASH-ONLY.
      *------------------------------
      **** (IF NOTHING WAS BRIDGE GO BY FUEL-RATE OVER-RIDE) ****
      **** (IF ONLY CASH WAS BRIDGE GO BY FUEL-RATE OVER-RIDE) ****
           MOVE 'N' TO WS-EXIT-FLAG.
           IF COM-CUSTOM-FEE-FLAG NOT = 'Y'
              IF (WS-NON-BILLABLE = ZEROES)      OR
                 (WS-NON-BILLABLE = WS-UIWA-CASH-AMT AND
JS0604           COM-DIRECT-BILLING-CASH = '1')
                 MOVE 'Y' TO WS-EXIT-FLAG.

      *------------------------------
       20913-ADJUST-BRIDGE-FEES-CO.
      *------------------------------
      **** (OVER-RIDE FUEL RATE WITH BRIDGE RATE) ****
      **** (PAYMENT CODE 1 =  CO PAYS NOTHING -  SC PAYS SC FEE ) ****
      **** (             2 =  CO PAYS CO FEE  -  SC PAYS SC FEE ) ****
      **** (             3 =  CO PAYS NOTHING -  SC PAYS BOTH   ) ****
      **** (             4 =  CO PAYS BOTH    -  SC PAYS NOTHING) ****
           IF COM-PNET-PAYMENT-CODE = '1' OR '3'
              MOVE ZEROES TO WS-BASE-FUEL-RATE
                             WS-MIXED-FUEL-RATE.
           IF COM-PNET-PAYMENT-CODE = '2'
              IF PGRM-FUNCTION-CASH-ONLY
                 MOVE ZEROES TO WS-BASE-FUEL-RATE
                                WS-MIXED-FUEL-RATE
              ELSE
102810           IF NOT WS-NO-FUEL-FEE
                    MOVE COM-PNET-CO-FEE TO WS-BASE-FUEL-RATE
                                            WS-MIXED-FUEL-RATE.
           IF COM-PNET-PAYMENT-CODE = '4'
              IF PGRM-FUNCTION-CASH-ONLY
                 MOVE ZEROES TO WS-BASE-FUEL-RATE
                                WS-MIXED-FUEL-RATE
              ELSE
102810           IF NOT WS-NO-FUEL-FEE
                    COMPUTE WS-BASE-FUEL-RATE  = COM-PNET-CO-FEE +
                                                 COM-PNET-SC-FEE
                    COMPUTE WS-MIXED-FUEL-RATE = COM-PNET-CO-FEE +
                                                 COM-PNET-SC-FEE.

      *------------------------------
       20914-ADJUST-BRIDGE-FEES-SC.
      *------------------------------
      **** (FIGURE SC CHARGES) ****
           IF COM-PNET-PAYMENT-CODE = '1' OR '2'
              IF PGRM-FUNCTION-CASH-ONLY
                 NEXT SENTENCE
              ELSE
                 MOVE COM-PNET-SC-FEE TO SAVE-SC-FEE,
                                         WS-DC-FEE-AMT-CUSTOM.
           IF COM-PNET-PAYMENT-CODE = '3'
              IF PGRM-FUNCTION-CASH-ONLY
                 NEXT SENTENCE
              ELSE
                COMPUTE SAVE-SC-FEE = COM-PNET-SC-FEE + COM-PNET-CO-FEE
                COMPUTE WS-DC-FEE-AMT-CUSTOM = COM-PNET-SC-FEE +
                                               COM-PNET-CO-FEE.

      *------------------------------
       20915-ADJUST-BRIDGE-CASH-CO.
      *------------------------------
      **** (OVER-RIDE CASH RATE WITH BRIDGE RATE IF CASH WAS BRIDGE) ***
           IF (WS-UIWA-CASH-AMT > ZEROES) AND
JS0604        (COM-DIRECT-BILLING-CASH = '1' OR
               COM-CUSTOM-FEE-FLAG = 'Y')
               IF COM-PNET-PAYMENT-CODE-1-OR-3
                  MOVE ZEROES TO WS-BASE-ADVANCE-RATE
                                 WS-MIXED-ADVANCE-RATE
               END-IF
               IF COM-PNET-PAYMENT-CODE-2-OR-4
                  IF PGRM-FUNCTION-CASH-ONLY
                     MOVE COM-PNET-CO-FEE      TO WS-BASE-ADVANCE-RATE
                                                  WS-MIXED-ADVANCE-RATE
                     IF COM-PNET-PAYMENT-CODE = '4'
                        ADD COM-PNET-SC-FEE    TO WS-BASE-ADVANCE-RATE
                                                  WS-MIXED-ADVANCE-RATE
                     END-IF
                  ELSE
                     MOVE COM-PNET-CASH-ADD-ON TO WS-BASE-ADVANCE-RATE
                                                  WS-MIXED-ADVANCE-RATE.

      *------------------------------
       20916-ADJUST-BRIDGE-CASH-SC.
      *------------------------------
      **** (GET SC CHARGES FOR CASH) ****
           IF COM-PNET-PAYMENT-CODE = '1' OR '2' OR '3'
              IF WS-UIWA-CASH-AMT        > ZERO AND
JS0604           (COM-DIRECT-BILLING-CASH = '1' OR
                  COM-CUSTOM-FEE-FLAG = 'Y')
                 IF PGRM-FUNCTION-CASH-ONLY
                    MOVE COM-PNET-SC-FEE      TO SAVE-SC-FEE,
                                                 WS-DC-FEE-AMT-CUSTOM
                    IF COM-PNET-PAYMENT-CODE = '3'
                       ADD COM-PNET-CO-FEE    TO SAVE-SC-FEE
                                                 WS-DC-FEE-AMT-CUSTOM
                    ELSE
                       NEXT SENTENCE
                 ELSE
                    ADD  COM-PNET-SC-ADD-ON TO SAVE-SC-FEE
                                               WS-DC-FEE-AMT-CUSTOM.
      *------------------------------
       20917-ADJUST-BRIDGE-ADD-ON.
      *------------------------------
           IF COM-PNET-VOICE-SURCHARGE NOT NUMERIC
              MOVE ZEROES TO COM-PNET-VOICE-SURCHARGE.

      **** (ADD IN VOICE SURCHARGE IF BRIDGE AND MANUAL) ****
           IF COM-PNET-BRIDGE-FLAG-YES OR
              CDN-RELATIONSHIP-FLAG = 'Y'
              EVALUATE TRUE
                WHEN THIS-IS-A-POS-TRANS
                WHEN WS-UIWA-NATS-POS-FLAG = 'Y'
                    CONTINUE
                WHEN COM-PNET-VOICE-SURCHARGE > ZEROES
                 MOVE ZEROES                  TO COM-SCM-AUTO-CALL-FEE
                                                 COM-SCM-MANUAL-CALL-FEE
                                                 WS-MANUAL-FEE
                 ADD COM-PNET-VOICE-SURCHARGE TO SAVE-SC-FEE
                                                 WS-DC-FEE-AMT-CUSTOM
              END-EVALUATE.
      *------------------------------
091411 20919-GET-NETWORK-PRICING.
      *------------------------------
           IF NOT THIS-IS-A-POS-TRANS
              IF SCM-NET-PRICING-FL-YES
                 MOVE ZERO TO CONTINUE-NET-PRICING-SW
DR0317           MOVE SPACES               TO WS-DNETPRCG-PFID-CD
                 PERFORM 71115-CHECK-NET-PRICING-2
              END-IF
           END-IF.
      *------------------------------
       20920-GET-DISCOUNT-INFO.
      *------------------------------
      **** (GET THE SC DISCOUNT/FEE INFORMATION) ****
           IF THIS-IS-A-SETTLEMENT-ITEM OR
              WS-MANUAL-FEE > ZEROES
              PERFORM 80000-DISCOUNT-COMPUTATION
           END-IF.

SB0614*--------------------------------
SB0614 20925-CHECK-MERCHANT-SURCHARGE.
SB0614*--------------------------------
SB0614**** (CHECK TO SEE IF MERCHANT SURCHARGE APPLIES TO THIS LOCATION)
SB0614     IF APPLY-MERCH-SURCHRG
SB0614        ADD WS-MERCH-SURCHRG-TOTAL TO WS-TOTAL-REQUEST
SB0614        MULTIPLY WS-MERCH-SURCHRG-TOTAL BY -1
SB0614           GIVING WS-MERCH-SURCHRG-AMT-ADJ
SB0614        IF WS-UIWA-PR1-CODE NOT > SPACES
SB0614           MOVE '31' TO WS-UIWA-PR1-CODE
SB0614           MOVE WS-MERCH-SURCHRG-TOTAL TO WS-WORK-PROD-AMT
SB0614           PERFORM PCE-CURRENCY-CONVERSION
SB0614           MOVE WS-WORK-PROD-AMT     TO WS-UIWA-PR1-COST
SB0614           MOVE WS-WORK-PROD-AMT-US  TO WS-UIWA-PR1-COST-SC
SB0614                                        WS-UIWA-PR1-COST-US
SB0614                                        WS-MERCH-SURCHRG-AMT-SC
SB0614           IF WS-BILLABLE = ZERO
SB0614              MOVE 'D' TO INP-PROD-BILL-1
SB0614           END-IF
SB0614        ELSE
SB0614           IF WS-UIWA-PR2-CODE > SPACES
SB0614              MOVE '31' TO WS-UIWA-PR3-CODE
SB0614              MOVE WS-MERCH-SURCHRG-TOTAL TO WS-WORK-PROD-AMT
SB0614              PERFORM PCE-CURRENCY-CONVERSION
SB0614              MOVE WS-WORK-PROD-AMT     TO WS-UIWA-PR3-COST
SB0614              MOVE WS-WORK-PROD-AMT-US  TO WS-UIWA-PR3-COST-SC
SB0614                                           WS-UIWA-PR3-COST-US
SB0614                                           WS-MERCH-SURCHRG-AMT-SC
SB0614              IF WS-BILLABLE = ZERO
SB0614                 MOVE 'D' TO INP-PROD-BILL-3
SB0614              END-IF
SB0614           ELSE
SB0614              MOVE '31' TO WS-UIWA-PR2-CODE
SB0614              MOVE WS-MERCH-SURCHRG-TOTAL TO WS-WORK-PROD-AMT
SB0614              PERFORM PCE-CURRENCY-CONVERSION
SB0614              MOVE WS-WORK-PROD-AMT     TO WS-UIWA-PR2-COST
SB0614              MOVE WS-WORK-PROD-AMT-US  TO WS-UIWA-PR2-COST-SC
SB0614                                           WS-UIWA-PR2-COST-US
SB0614                                           WS-MERCH-SURCHRG-AMT-SC
SB0614              IF WS-BILLABLE = ZERO
SB0614                 MOVE 'D' TO INP-PROD-BILL-2
SB0614              END-IF
SB0614           END-IF
SB0614        END-IF
SB0614        ADD WS-WORK-PROD-AMT    TO WS-CURXMN
SB0614        ADD WS-WORK-PROD-AMT-US TO WS2-CURXMN, WS3-CURXMN
SB0614        IF WS-BILLABLE = ZERO
SB0614           ADD WS-WORK-PROD-AMT    TO WS-NON-BILLABLE
SB0614           ADD WS-WORK-PROD-AMT-US TO WS2-NON-BILLABLE
SB0614                                      WS3-NON-BILLABLE
SB0614        ELSE
SB0614           ADD WS-WORK-PROD-AMT    TO WS-BILLABLE
SB0614           ADD WS-WORK-PROD-AMT-US TO WS2-BILLABLE
SB0614                                      WS3-BILLABLE
SB0614        END-IF
SB0614     END-IF.

      *------------------------------
       20930-ADD-IN-MANUAL-CALL-FEE.
      *------------------------------
      **** (ADD MANUAL ADD-ON TO FUEL RATE IF NEEDED) ****
           EVALUATE TRUE
              WHEN THIS-IS-A-POS-TRANS
              WHEN WS-UIWA-NATS-POS-FLAG = 'Y'
              WHEN PGRM-FUNCTION-CASH-ONLY
                 CONTINUE
              WHEN OTHER
102810           IF NOT WS-NO-FUEL-FEE
                    ADD CDN-MANUAL-ADD-ON TO WS-BASE-FUEL-RATE
                                             WS-MIXED-FUEL-RATE
                 END-IF
           END-EVALUATE.

      *------------------------------
       20940-ADD-IN-COST-PLUS-FEE.
      *------------------------------
      **** (ADD ON COST PLUS ADD ON IF NEEDED) ****
           IF WS-COST-PLUS-USED = 'Y'
102810        IF NOT WS-NO-FUEL-FEE
                 ADD CDN-COST-PLUS-ADD-ON        TO WS-BASE-FUEL-RATE
                 ADD CDN-COST-PLUS-ADD-ON-ALTCUR TO WS-MIXED-FUEL-RATE
              END-IF
              COMPUTE WS-COST-PLUS-CPG-FEE1 = WS-TOTAL-GALLONS *
                                             (CDN-COST-PLUS-CPG / 100)
              IF WS-COST-PLUS-CPG-FEE1 > WS-DC-DISCOUNT-AMT
                 MOVE WS-DC-DISCOUNT-AMT TO WS-COST-PLUS-CPG-FEE1
              END-IF
102810        IF NOT WS-NO-FUEL-FEE
                 ADD WS-COST-PLUS-CPG-FEE1 TO WS-BASE-FUEL-RATE
              END-IF
              COMPUTE WS-COST-PLUS-CPG-FEE2 = WS-TOTAL-GALLONS *
                                 (CDN-COST-PLUS-CPG-ALTCUR / 100)
              IF WS-COST-PLUS-CPG-FEE2 > WS-DC-DISCOUNT-AMT
                 MOVE WS-DC-DISCOUNT-AMT TO WS-COST-PLUS-CPG-FEE2
              END-IF
102810        IF NOT WS-NO-FUEL-FEE
                 ADD WS-COST-PLUS-CPG-FEE2 TO WS-MIXED-FUEL-RATE
              END-IF
           END-IF.

      *------------------------------
       20945-ADD-IN-NATS-FEE.
      *------------------------------
      **** (IF THIS IS A NATS AUTH XTN) ****
           IF THIS-BE-A-NATS-AUTH
              IF WS-UIWA-NATS-FEE NUMERIC
102810           IF NOT WS-NO-FUEL-FEE
                    ADD WS-UIWA-NATS-FEE TO WS-BASE-FUEL-RATE
                                            WS-MIXED-FUEL-RATE.

      *------------------------------
       20950-ADJ-COMDATA-COMPLETE-FEE.
      *------------------------------
      **** (IF COMDATA COMPLETE THEN NO FEES TO BE CHARGED) ****
           IF COM-COMDATA-COMPLETE-FLAG = 'Y'
              IF CDN-FEE-ON-TRANSLINK-YES OR
                 WS-BILLABLE > ZEROES
                 MOVE ZEROES TO SAVE-SC-FEE
              ELSE
                 MOVE ZEROES TO WS-BASE-FUEL-RATE,
                                WS-BASE-ADVANCE-RATE,
                                WS-MIXED-FUEL-RATE,
                                WS-MIXED-ADVANCE-RATE,
                                SAVE-SC-FEE,
                                WS-DC-FEE-AMT-CUSTOM.

      *------------------------------
       20955-CHECK-ATM-FEES.
      *------------------------------
           IF THIS-BE-AN-ATM-XTN
              MOVE ZEROES TO WS-BASE-FUEL-RATE
                             WS-MIXED-FUEL-RATE
              EVALUATE TRUE
040510           WHEN TSXCO0AT-IN-NETW-CARD-VAL
040510              CONTINUE
                 WHEN TSXCO0AT-TRAN-TYPE-INQUIRY
                    IF TSXCO0AT-LOCATION-CODE = 'AT900' OR 'AT901'
                       MOVE CDN-ATM-INQUIRY-FEE TO WS-BASE-ADVANCE-RATE
                       MOVE CDN-ATM-INQUIRY-FEE TO WS-MIXED-ADVANCE-RATE
                    ELSE
ED0606                 IF TSXCO0AT-IN-NETW-CASH-OUT
ED0606                    CONTINUE
ED0606                 ELSE
                          MOVE CDN-MAESTRO-INQ-FEE
                                                TO WS-BASE-ADVANCE-RATE
                                                   WS-MIXED-ADVANCE-RATE
ED0606                 END-IF
                    END-IF
                 WHEN TSXCO0AT-TRAN-TYPE-WITHDRAW-US
                    MOVE CDN-ATM-FEE-US      TO WS-BASE-ADVANCE-RATE
                                                WS-MIXED-ADVANCE-RATE
                 WHEN TSXCO0AT-TRAN-TYPE-WITHDRAW-CN
                    MOVE CDN-ATM-FEE-CN      TO WS-BASE-ADVANCE-RATE
                                                WS-MIXED-ADVANCE-RATE
MP0898           WHEN TSXCO0AT-TRAN-TYPE-PURCHASE
ED0606              IF TSXCO0AT-IN-NETW-PURC
ED0606                 MOVE CDN-IN-NETWORK-FEE
ED0606                                       TO WS-BASE-ADVANCE-RATE
ED0606                                          WS-MIXED-ADVANCE-RATE
ED0606              ELSE
MP0898                 MOVE CDN-MAESTRO-FEE  TO WS-BASE-ADVANCE-RATE
MP0898                                          WS-MIXED-ADVANCE-RATE
ED0606              END-IF
              END-EVALUATE
           END-IF.

      *------------------------------
       20957-CHECK-REDUCE-CO-FEES.
      *------------------------------
      **** (THIS RTN DETERMINES IF THE COMPANY FUEL RATE SHOULD  ) ****
      **** (BE REDUCED --- PSR # 1893                            ) ****

JS2000     IF WS-CURRENT-DATE-YYYYDDD NOT > COM-CO-FEE-DISC-CUTOFF AND
              (COM-CO-FEE-PERCENT-DISC > 0 OR
               COM-CO-FEE-FLAT-DISC > 0)
                  PERFORM 20958-REDUCE-CO-FEES.

      *------------------------------
       20958-REDUCE-CO-FEES.
      *------------------------------
      **** (THIS RTN WILL REDUCE THE WS-BASE-FUEL-RATE BY EITHER ) ****
      **** (A PERCENTAGE OR A FLAT AMOUNT                        ) ****
      **** ((COM-CO-FEE-PERCENT-DISC OR COM-CO-FEE-FLAT-DISC)  ) ****
      **** (THE REDUCTIION IF ANY IS STORED IN THE FIELD:        ) ****
      **** (WS-CO-FUEL-RATE-REDUCTION.                           ) ****

           IF COM-CO-FEE-PERCENT-DISC > 0
              COMPUTE WS-CO-FUEL-RATE-REDUCTION = WS-BASE-FUEL-RATE *
                 (COM-CO-FEE-PERCENT-DISC / 100)
           ELSE
              COMPUTE WS-CO-FUEL-RATE-REDUCTION = COM-CO-FEE-FLAT-DISC
           END-IF.

           IF WS-CO-FUEL-RATE-REDUCTION > WS-BASE-FUEL-RATE
              MOVE WS-BASE-FUEL-RATE TO WS-CO-FUEL-RATE-REDUCTION
           END-IF.

           COMPUTE WS-BASE-FUEL-RATE = WS-BASE-FUEL-RATE -
               WS-CO-FUEL-RATE-REDUCTION.
           MOVE WS-BASE-FUEL-RATE TO WS-MIXED-FUEL-RATE.

      *------------------------------
JS0200 20959-CHECK-FLEET-FEE.
      *------------------------------
      **** (IF MASTERCARD FLEET XTN - USE MC FLAT FEE) ****
           IF CDN-FLEET-FLAT-FEE NOT NUMERIC
              MOVE ZEROES TO CDN-FLEET-FLAT-FEE.
           IF THIS-BE-A-FLEET-XTN
102810        IF NOT WS-NO-FUEL-FEE
                 MOVE CDN-FLEET-FLAT-FEE TO WS-BASE-FUEL-RATE
                                             WS-MIXED-FUEL-RATE
              END-IF
              MOVE ZEROES             TO WS-BASE-ADVANCE-RATE
                                         WS-MIXED-ADVANCE-RATE
           END-IF.

      *------------------------------
JS0400 20959-CHECK-PAM-FEE.
      *------------------------------
      **** (FOR PAM TRANSPORT - IF ANY FUEL WAS PURCHASED,) ****
      **** (REPORT ONLY A FUEL FEE.  DO NOT SHOW CASH FEE.) ****
      **** (THE CASH FEE WILL BE ADDED INTO THE FUEL FEE. ) ****
           IF CDN-CUST-ACCT-CODE = 'PA073' OR
JS0700        CDN-CUST-ACCT-CODE = 'TT984'
              IF TRACTOR-PURCHASE = 1 OR
                 TRAILER-PURCHASE = 1
                 ADD  WS-BASE-ADVANCE-RATE  TO WS-BASE-FUEL-RATE
                 ADD  WS-MIXED-ADVANCE-RATE TO WS-MIXED-FUEL-RATE
                 MOVE ZEROES                TO WS-BASE-ADVANCE-RATE
                                               WS-MIXED-ADVANCE-RATE.
      *------------------------------
       209XX-COMPLETE-FEE-PROCESS.
      *------------------------------
      **** (THIS RTN WILL BUILD THE WS-FUEL-RATE FIELDS          ) ****
      **** (IT WILL ALSO  BUILD THE WS-ADVANCE-RATE FIELDS       ) ****
      **** (WS-FUEL-RATE  = BILLING RATE IN COMPANY BASE CURRENCY) ****
      **** (WS-FUEL-RATE2 = BILLING RATE IN SC CURRENCY          ) ****
      **** (WS-FUEL-RATE3 = BILLING RATE IN US CURRENCY          ) ****

           EVALUATE TRUE
              WHEN COM-ACCT-IS-BASE-CURRENCY
                 MOVE COM-ACCOUNT-CURR-TYPE TO WS-CONVERT-CURR-TYPE
                 MOVE WS-BASE-FUEL-RATE     TO WS-CONVERT-AMOUNT
                 PERFORM CONVERT-AMOUNT
                 MOVE WS-CONVERT-AMOUNT1    TO WS-FUEL-RATE
                 MOVE WS-CONVERT-AMOUNT2    TO WS-FUEL-RATE2
                 MOVE WS-CONVERT-AMOUNT3    TO WS-FUEL-RATE3

                 MOVE WS-BASE-ADVANCE-RATE  TO WS-CONVERT-AMOUNT
                 PERFORM CONVERT-AMOUNT
                 MOVE WS-CONVERT-AMOUNT1    TO WS-ADVANCE-RATE
                 MOVE WS-CONVERT-AMOUNT2    TO WS-ADVANCE-RATE2
                 MOVE WS-CONVERT-AMOUNT3    TO WS-ADVANCE-RATE3
              WHEN OTHER
                 MOVE COM-ACCOUNT-CURR-TYPE TO WS-CONVERT-CURR-TYPE
                 IF COM-COMP-SC-CURR-SAME
                    MOVE WS-BASE-FUEL-RATE  TO WS-CONVERT-AMOUNT
                 ELSE
                    MOVE WS-MIXED-FUEL-RATE TO WS-CONVERT-AMOUNT
                 END-IF
                 PERFORM CONVERT-AMOUNT
                 MOVE WS-CONVERT-AMOUNT1    TO WS-FUEL-RATE
                 MOVE WS-CONVERT-AMOUNT2    TO WS-FUEL-RATE2
                 MOVE WS-CONVERT-AMOUNT3    TO WS-FUEL-RATE3

                 IF COM-COMP-SC-CURR-SAME
                    MOVE WS-BASE-ADVANCE-RATE  TO WS-CONVERT-AMOUNT
                 ELSE
                    MOVE WS-MIXED-ADVANCE-RATE TO WS-CONVERT-AMOUNT
                 END-IF
                 PERFORM CONVERT-AMOUNT
                 MOVE WS-CONVERT-AMOUNT1    TO WS-ADVANCE-RATE
                 MOVE WS-CONVERT-AMOUNT2    TO WS-ADVANCE-RATE2
                 MOVE WS-CONVERT-AMOUNT3    TO WS-ADVANCE-RATE3
           END-EVALUATE.

           COMPUTE WS-TOTAL-RATE  = WS-FUEL-RATE  + WS-ADVANCE-RATE.
           COMPUTE WS-TOTAL-RATE2 = WS-FUEL-RATE2 + WS-ADVANCE-RATE2.
           COMPUTE WS-TOTAL-RATE3 = WS-FUEL-RATE3 + WS-ADVANCE-RATE3.

      *------------------------------
       20960-CHECK-DEDUCT-FEE.
      *------------------------------
           COMPUTE WS-WORK-AMOUNT = WS-TOTAL-REQUEST +
                                    WS-TOTAL-RATE.
           IF (I-DEDUCT-CHARGE-FROM-DRIVER)
              MOVE WS-TOTAL-RATE TO WS-HOLD-RATE.

           IF (I-DEDUCT-CHARGE-FROM-DRIVER) AND
SB0614        (WS-WORK-AMOUNT >
SB0614                 (PRM-EXPENSE-BALANCE + WS-MERCH-SURCHRG-TOTAL))
      *        **** (SETUP DISPLAY AMOUNT) ****
               COMPUTE PRM-EXPENSE-BALANCE = PRM-EXPENSE-BALANCE -
                                             WS-FUEL-RATE        -
                                             WS-ADVANCE-RATE
               MOVE PRM-EXPENSE-BALANCE    TO XCS-BAL-REQ-AMT
               EVALUATE TRUE
                  WHEN COM-CN-COMP-US-SC
                     MOVE PRM-EXPENSE-BALANCE TO WS-CANADIAN-DOLLARS
                     PERFORM CAN-DOLLARS-TO-US
                     MOVE WS-US-DOLLARS       TO XCS-BAL-REQ-AMT
                  WHEN COM-US-COMP-CN-SC
                     MOVE PRM-EXPENSE-BALANCE TO WS-US-DOLLARS
                     PERFORM US-DOLLARS-TO-CAN
                     MOVE WS-CANADIAN-DOLLARS TO XCS-BAL-REQ-AMT
               END-EVALUATE
      *        **** (DISPLAY THE ERROR MESSAGE) ****
               MOVE EXCESSIVE-BALANCE-REQUEST     TO OUT-COMENT
               MOVE EXCESSIVE-BALANCE-REQUEST-N   TO POS-ERROR-NUMBER
               MOVE NEW-EXCESSIVE-BALANCE-REQUEST TO NEW-OUT-MESSAGE
               MOVE 'Y'                           TO VCWS-ERROR-IND
               MOVE -1 TO FPCMT1L
               IF LIMITS-ALTERED-FOR-PO = 'Y'
                  MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
                  MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
               END-IF
               PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *------------------------------
       20970-CHECK-BALANCE.
      *------------------------------
JS1199     PERFORM DETERMINE-IF-BALANCE-BASED
           IF (NOT I-DEDUCT-CHARGE-FROM-DRIVER) AND
JS1199        (WS-BALANCE-BASED               ) AND
SB0614        (WS-TOTAL-REQUEST >
SB0614                  (PRM-EXPENSE-BALANCE + WS-MERCH-SURCHRG-TOTAL))
               MOVE PRM-EXPENSE-BALANCE    TO XCS-BAL-REQ-AMT
               EVALUATE TRUE
                  WHEN COM-CN-COMP-US-SC
                     MOVE PRM-EXPENSE-BALANCE TO WS-CANADIAN-DOLLARS
                     PERFORM CAN-DOLLARS-TO-US
                     MOVE WS-US-DOLLARS       TO XCS-BAL-REQ-AMT
                  WHEN COM-US-COMP-CN-SC
                     MOVE PRM-EXPENSE-BALANCE TO WS-US-DOLLARS
                     PERFORM US-DOLLARS-TO-CAN
                     MOVE WS-CANADIAN-DOLLARS TO XCS-BAL-REQ-AMT
               END-EVALUATE
               MOVE EXCESSIVE-BALANCE-REQUEST     TO OUT-COMENT
               MOVE EXCESSIVE-BALANCE-REQUEST-N   TO POS-ERROR-NUMBER
               MOVE NEW-EXCESSIVE-BALANCE-REQUEST TO NEW-OUT-MESSAGE
               MOVE 'Y'                           TO VCWS-ERROR-IND
               MOVE -1 TO FPCMT1L
               IF LIMITS-ALTERED-FOR-PO = 'Y'
                  MOVE PO-LIMIT-EXCEEDED TO OUT-COMENT
                  MOVE PO-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
               END-IF
               PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
SB0614     END-IF.

      *------------------------------
       20980-CHECK-DB-LIMIT.
      *------------------------------
           MOVE 'N' TO WS-LOOP-FP-0100.

      **** (IF BRIDGE TRANS AND CHAIN LIMITS ARE AVAIL, CHECK THEM) ****
           IF (COM-PNET-BRIDGE-FLAG-YES OR CDN-RELATIONSHIP-FLAG = 'Y')
                                 AND
              (COM-PNET-CHAIN-CODE  > SPACES OR COM-BRIDGE-KEY > SPACES)
                                 AND
              (COM-PNET-DAILY-LIMIT > ZEROES)
              IF (COM-PNET-DAILY-LIMIT - COM-PNET-DAILY-USED) <
                 (WS2-NON-BILLABLE)
                 PERFORM 20981-DB-LIMIT-EXCEEDED.

      *------------------------------
       20981-DB-LIMIT-EXCEEDED.
      *------------------------------
           IF (COM-PNET-BRIDGE-FLAG = 'L' AND EIBAID = DFHPF4) OR
              (THIS-BE-A-PC-REQUEST AND COM-PNET-BRIDGE-FLAG
                                            NOT = 'X')
              MOVE 'X' TO COM-PNET-BRIDGE-FLAG
              MOVE 'Y' TO READ-CUST-FLAG
              MOVE ' ' TO COM-PRM-NETWORKING
                          COM-DIRECT-BILL-CONTROL
              MOVE COM-FP-SC-CODE    TO  SCMSTR-KEY
              MOVE SPACES            TO COM-PNET-CHAIN-CODE
                                        COM-BRIDGE-KEY
              MOVE ZEROES            TO WS-BILLABLE,
                                        WS2-BILLABLE,
                                        WS3-BILLABLE,
                                        WS-NON-BILLABLE,
                                        WS2-NON-BILLABLE
                                        WS3-NON-BILLABLE
              MOVE 'Y' TO WS-LOOP-FP-0100
           ELSE
              IF CDN-CUST-ACCT-CODE = 'BR000'
                 MOVE BRIDGE-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
                 MOVE BRIDGE-LIMIT-EXCEEDED   TO OUT-COMENT-1
                 MOVE ACCT-BR000-MUST-BE-BRIDGE TO OUT-COMENT-2
                 MOVE -1 TO FPINVNRL
                 PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
              IF CDN-RELATIONSHIP-FLAG = 'Y' AND
                 COM-BRIDGE-KEY > SPACES     AND
                 NOT COM-PNET-BRIDGE-FLAG-YES
                    MOVE DIRECT-LIMIT-EXCEEDED-N
                      TO POS-ERROR-NUMBER
                    MOVE DIRECT-LIMIT-EXCEEDED TO OUT-COMENT-1
                    MOVE DIRECT-LIMIT-EXCEEDED-2
                      TO OUT-COMENT-2
                    MOVE 'L' TO COM-PNET-BRIDGE-FLAG
                    MOVE -1 TO FPINVNRL
                    PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
              END-IF
              MOVE BRIDGE-LIMIT-EXCEEDED-N TO POS-ERROR-NUMBER
              MOVE BRIDGE-LIMIT-EXCEEDED TO OUT-COMENT-1
              MOVE BRIDGE-LIMIT-EXCEEDED-2 TO OUT-COMENT-2
              MOVE 'L' TO COM-PNET-BRIDGE-FLAG
              MOVE -1 TO FPINVNRL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *------------------------------
       20985-CHECK-GUAR-DISC-AVAIL.
      *------------------------------
           IF TRACTOR-PURCHASE NOT = 1 AND
              TRAILER-PURCHASE NOT = 1
              MOVE 'N' TO CDN-GUAR-YN.

           IF COM-FOCUS-DISC-FLAG = 'Y'
              MOVE 'N' TO CDN-GUAR-YN.

JS1199     PERFORM DETERMINE-IF-BALANCE-BASED
           IF WS-NON-BILLABLE > 0
JS1199        IF CDN-BILL-AT-LOAD AND WS-BALANCE-BASED
                 CONTINUE
              ELSE
                 MOVE 'N' TO CDN-GUAR-YN.
      *------------------------------
041112 20989-GET-RFID-UNIT-TRLR.
      *------------------------------
           IF WS-UIWA-RFID-NBR > SPACES
             AND WS-RFID-XREF-READ NOT = 'Y'
              MOVE '20989-GET-RFID-UNIT-TRLR' TO CXUTS0ML-PARAGRAPH
              MOVE 'SELECT DBO.RFID_XREF'     TO CXUTS0ML-COMMAND
              EXEC SQL
                   SELECT RFID_UNIT_TRLR_NBR,
                          LST_USE_TS,
                          LST_USE_CRD_NBR,
                          LST_USE_LOC_ID,
                          LST_USE_DRVR_NBR,
                          LST_USE_TRLR_NBR,
                          LST_USE_HUB_HI_VAL,
                          LST_USE_TRLR_HUB_VAL,
                          LST_USE_TRLR_HRS,
                          LST_USE_TRIP_NBR,
                          LST_USE_DL_NBR,
                          LST_USE_DL_ST,
                          LST_USE_PO_NBR,
                          LST_USE_LST_NM,
                          LST_USE_FST_NM,
                          LST_USE_UNIT_NBR
                     INTO :DRFIDXRF.RFID-UNIT-TRLR-NBR,
                          :DRFIDXRF.LST-USE-TS,
                          :DRFIDXRF.LST-USE-CRD-NBR,
                          :DRFIDXRF.LST-USE-LOC-ID,
                          :DRFIDXRF.LST-USE-DRVR-NBR,
                          :DRFIDXRF.LST-USE-TRLR-NBR,
                          :DRFIDXRF.LST-USE-HUB-HI-VAL,
                          :DRFIDXRF.LST-USE-TRLR-HUB-VAL,
                          :DRFIDXRF.LST-USE-TRLR-HRS,
                          :DRFIDXRF.LST-USE-TRIP-NBR,
                          :DRFIDXRF.LST-USE-DL-NBR,
                          :DRFIDXRF.LST-USE-DL-ST,
                          :DRFIDXRF.LST-USE-PO-NBR,
                          :DRFIDXRF.LST-USE-LST-NM,
                          :DRFIDXRF.LST-USE-FST-NM,
                          :DRFIDXRF.LST-USE-UNIT-NBR
                     FROM DBO.RFID_XREF
                    WHERE RFID_NBR = :WS-UIWA-RFID-NBR
              END-EXEC
              PERFORM CHECK-NOTFND-SQL
              IF SQLCODE = +100
                 MOVE INVALID-RFID-NBR   TO OUT-COMENT
                 MOVE INVALID-RFID-NBR-N TO POS-ERROR-NUMBER
              ELSE
                 MOVE 'Y' TO WS-RFID-XREF-READ
              END-IF
           END-IF.
      *------------------------------
080210 IRIS-CHECK-AND-NOTIFY.
      *------------------------------
ED0810     IF WS-NOTIFY-IRIS-FL = 'Y'
083110        PERFORM IRIS-NUM-CHECK-1
083110        IF WS-CIX-MESSAGE-TYPE = '0200'
083110          AND WS-POS-ERROR-NUMBER > ZERO
083110           CONTINUE
083110        ELSE
083110           MOVE 'N' TO WS-NOTIFY-IRIS-FL
                 EVALUATE TRUE
                    WHEN THIS-BE-AN-ATM-XTN
                    WHEN THIS-BE-AN-ATM-CANCEL
                       PERFORM IRIS-COMMON-REQ-VALUES
                       PERFORM IRIS-BLD-ATM-REQUEST
040912              WHEN THIS-BE-A-VRU-CASH-ON-CARD
040912              WHEN THIS-IS-A-CANCEL-XTN
040912               AND WS-DRAFT-WAS-CANCELLED = 'Y'
040912                 PERFORM IRIS-VRU-TRANS
                    WHEN OTHER
                       PERFORM IRIS-COMMON-REQ-VALUES
                       PERFORM IRIS-BLD-FUEL-REQUEST
                 END-EVALUATE
                 PERFORM IRIS-LINK-TO-CXXCO0FC
              END-IF
           END-IF.

      *------------------------------
080210 IRIS-COMMON-REQ-VALUES.
      *------------------------------
           MOVE SPACES TO CXXCW170-CXXCO0FC-COMMAREA-IN
           PERFORM IRIS-NUM-CHECK-2
           MOVE 'US'   TO CXXCW170-CCI-PROGRAM-ID
MN0814     MOVE '07'   TO CXXCW170-CIX-VERSION-NR
           COMPUTE WS-CIX-CARD-NR =
              (PRM-CARD-NUMB * 10) + PRM-CHECK-DIGIT
           END-COMPUTE
           MOVE WS-CIX-CARD-NR           TO CXXCW170-CIX-CARD-NR
           IF PRM-CREATION-DATE NOT NUMERIC OR
              PRM-CREATION-DATE = ZERO
              MOVE '0001-01-01-00.00.00' TO CXXCW170-CIX-CRD-CTE-TS
           ELSE
              PERFORM IRIS-FORMAT-TIMESTAMP-I
              MOVE WS-TS-WORK            TO CXXCW170-CIX-CRD-CTE-TS
           END-IF
           MOVE ZERO                     TO CXXCW170-CIX-DRVR-VRFY-RESP
           MOVE CDN-CUST-ACCT-CODE       TO CXXCW170-CIX-ACCT-CD
           MOVE CDN-CUST-NUMBER          TO CXXCW170-CIX-CUST-ID
083110     IF WS-HOLD-POS-ERROR-MSG > SPACES
083110        MOVE WS-HOLD-POS-ERROR-MSG TO CXXCW170-CIX-ERROR-MSG
           ELSE
              MOVE OUT-COMENT-1          TO CXXCW170-CIX-ERROR-MSG
           END-IF
           MOVE WS-POS-ERROR-NUMBER      TO CXXCW170-CIX-CDN-RESP-CD
           MOVE 1                        TO CXXCW170-CIX-ATTEMPT
           COMPUTE                          CXXCW170-CIX-CREDIT-LIMIT
              = CCL-AVL-CRD-AMT * 100
           END-COMPUTE
           MOVE PRM-CARD-STATUS          TO CXXCW170-CIX-CARD-STATUS

           EVALUATE TRUE
              WHEN WS-UIWA-PROMPTED-DRIVER-ID > SPACES
                 MOVE WS-UIWA-PROMPTED-DRIVER-ID
                                         TO CXXCW170-CIX-DRIVER-ID
              WHEN WS-UIWA-EMPLOYEE-NR > SPACES
                 MOVE WS-UIWA-EMPLOYEE-NR
                                         TO CXXCW170-CIX-DRIVER-ID
              WHEN WS-UIWA-UNIT-NR > SPACES
                 MOVE WS-UIWA-UNIT-NR    TO CXXCW170-CIX-DRIVER-ID
           END-EVALUATE

           MOVE CDN-CORPORATE-CODE       TO CXXCW170-CIX-CORP-CODE
           MOVE WS-COMPANY-STANDARD-ID  TO CXXCW170-CIX-PURCHASING-PROFL
           MOVE SCM-LOCATION-ADDRESS     TO CXXCW170-CIX-ACCEPT-ADDR
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-CARD-CREDIT-LIM
           MOVE CDN-BALLIM-FLAG          TO CXXCW170-CIX-BALLIM-FL
           MOVE PRM-FIRST-NAME           TO CXXCW170-CIX-CHLDR-FNAME
           MOVE PRM-LAST-NAME            TO CXXCW170-CIX-CHLDR-LNAME
013112     MOVE PRM-CARD-EMPLOYEE-ID     TO CXXCW170-CIX-EMP-ID
013112     MOVE HLD-PRIVATE-LABEL-CODE   TO CXXCW170-CIX-PL-CODE
      ***** NOTHING IS MOVED TO THESE CXXCW170 FIELDS, FUEL OR ATM:
      *****                              CXXCW170-CIX-CVC-VRFY-FLG
      *****                              CXXCW170-CIX-SERVICE-CD
      *****                              CXXCW170-CIX-AVS-RESPONSE
      *****                              CXXCW170-CIX-CVC2-RESPONSE
           CONTINUE.

      *------------------------------
080210 IRIS-BLD-ATM-REQUEST.
      *------------------------------
           MOVE TSXCO0AT-ISO-DATA TO ATMW-FORMATTED-FIELDS
           PERFORM IRIS-NUM-CHECK-3
083110***** WHEN WS-CIX-MESSAGE-TYPE SET TO 0210 OR 0420, USE IT
083110     IF WS-CIX-MESSAGE-TYPE = '0200'
              MOVE ATMW-MESSAGE-TYPE     TO CXXCW170-CIX-MESSAGE-TYPE
083110     ELSE
083110        MOVE WS-CIX-MESSAGE-TYPE   TO CXXCW170-CIX-MESSAGE-TYPE
083110     END-IF
           IF CXXCW170-CIX-CARD-NR NOT > ZERO
              MOVE WS-PRM-CARD           TO CXXCW170-CIX-CARD-NR
           END-IF
           MOVE ATMW-PROCESS-CODE        TO CXXCW170-CIX-PROCESS-CODE
           COMPUTE WS-AMOUNT-NO-DECIMAL-12 =
              ATMW-TRANSACTION-AMOUNT-N * 100
           END-COMPUTE
           MOVE WS-AMOUNT-NO-DECIMAL-12  TO CXXCW170-CIX-XTN-AMT-MERCH
           COMPUTE WS-AMOUNT-NO-DECIMAL-06 =
              OL-PT-AMOUNT * 100
           END-COMPUTE
           MOVE WS-AMOUNT-NO-DECIMAL-06  TO CXXCW170-CIX-XTN-AMT-COMP
           MOVE ATMW-TRAN-DATE  TO WS-TS-DATE-IN
           MOVE ATMW-TRAN-TIME  TO WS-TS-TIME-IN
           PERFORM IRIS-FORMAT-TIMESTAMP-II
           MOVE WS-TS-WORK               TO CXXCW170-CIX-XTN-TRANS-TS
           MOVE ATMW-DATE-LOCAL TO WS-TS-DATE-IN
           MOVE ATMW-TIME-LOCAL TO WS-TS-TIME-IN
           PERFORM IRIS-FORMAT-TIMESTAMP-II
           MOVE WS-TS-WORK               TO CXXCW170-CIX-XTN-LOCAL-TS
      ***** MC ONLY
           IF S007-MASTERCARD-CARD = 'Y'
              MOVE CDN-CARD-EXPIRATION-DATE
                                         TO CXXCW170-CIX-EXP-DT
           ELSE
              MOVE ZERO                  TO CXXCW170-CIX-EXP-DT
           END-IF
           MOVE ATMW-MERCHANT-CATEGORY   TO CXXCW170-CIX-MCC
                                            CXXCW170-CIX-MCC-ORIGIN
           MOVE ATMW-POS-ENTRY-MODE      TO CXXCW170-CIX-POS-ENT-MODE
           MOVE ATMW-ACQUIRE-INST        TO CXXCW170-CIX-ACQ-INST-ID
           MOVE ATMW-FORWARD-INST        TO CXXCW170-CIX-FWD-INST-ID
      ***** THIS ROUTINE WILL POPULATE      CXXCW170-CIX-RESPONSE-CD
           PERFORM IRIS-GET-RESPONSE-CD
           MOVE ATMW-TERMINAL-ID         TO CXXCW170-CIX-TERM-ID
           IF ATMW-ACCEPTOR-ID > SPACES
              MOVE ATMW-ACCEPTOR-ID      TO CXXCW170-CIX-MERCH-ID
           ELSE
              MOVE 'MC901'               TO CXXCW170-CIX-MERCH-ID
           END-IF
           MOVE ATMW-TERMINAL-LOCATION   TO CXXCW170-CIX-ACCEPT-LOC
083110     MOVE ATMW-TERMINAL-LOCATION (39:02)
                                         TO CXXCW170-CIX-ACCEPT-STATE
123010     IF ATMW-POS-DATA (14:3) NUMERIC
123010       AND ATMW-POS-DATA (14:3) > '000'
              PERFORM GET-COUNTRY-CODE
           END-IF
           IF CNTRY-ALPHA = 'US'
              MOVE ATMW-POS-DATA (17:05)
                                      TO CXXCW170-CIX-ACCEPT-POSTAL-CDE
           ELSE
              MOVE ATMW-POS-DATA (17:10)
                                      TO CXXCW170-CIX-ACCEPT-POSTAL-CDE
           END-IF
           MOVE CNTRY-ALPHA              TO CXXCW170-CIX-ACCEPT-CNTRY
           MOVE ATMW-CURRENCY-CODE       TO CXXCW170-CIX-TRAN-CURR-CD
           MOVE '840'                    TO CXXCW170-CIX-COMP-CURR-CD
           MOVE ATMW-POS-DATA            TO CXXCW170-CIX-POS-DATA
           MOVE 'MD'                     TO CXXCW170-CIX-PROD-TYP
           IF ATMW-ADVICE-REASON-CODE = '200' OR '201' OR '202' OR '203'
               MOVE 'Y'                  TO CXXCW170-CIX-STAND-IN-FL
           ELSE
               MOVE 'N'                  TO CXXCW170-CIX-STAND-IN-FL
           END-IF
           MOVE ATMW-RETRIEVAL-REF       TO CXXCW170-CIX-RETRIEVAL-REF
           MOVE ATMW-NETWORK-DATA        TO CXXCW170-CIX-NETWORK-DATA
           MOVE ATMW-AUDIT-NUMBER-N      TO CXXCW170-CIX-AUDIT-NUMBER
           MOVE ATMW-REPLACEMENT-AMOUNTS TO CXXCW170-CIX-RPLCMNT-AMT
      ***** NOTHING IS MOVED TO THESE CXXCW170 FIELDS FOR ATM:
      *****                              CXXCW170-CIX-RESP-REQUESTED
      *****                              CXXCW170-CIX-NR2-QTY
      *****                              CXXCW170-CIX-NR2-COST
      *****                              CXXCW170-CIX-NR1-QTY
      *****                              CXXCW170-CIX-NR1-COST
      *****                              CXXCW170-CIX-OTH-QTY
      *****                              CXXCW170-CIX-OTH-COST
      *****                              CXXCW170-CIX-REF-QTY
      *****                              CXXCW170-CIX-REF-COST
      *****                              CXXCW170-CIX-OIL-QTY
      *****                              CXXCW170-CIX-OIL-COST
      *****                              CXXCW170-CIX-PR1-CODE
      *****                              CXXCW170-CIX-PR1-COST
      *****                              CXXCW170-CIX-PR2-CODE
      *****                              CXXCW170-CIX-PR2-COST
      *****                              CXXCW170-CIX-PR3-CODE
      *****                              CXXCW170-CIX-PR3-COST
      *****                              CXXCW170-CIX-CASH-AMT
           CONTINUE.

      *------------------------------
080210 IRIS-BLD-FUEL-REQUEST.
      *------------------------------
           PERFORM IRIS-NUM-CHECK-4
           MOVE WS-CIX-RESP-REQUESTED    TO CXXCW170-CIX-RESP-REQUESTED
083110***** IF MSG-TYPE ALREADY SET TO 0210 OR 0420, DO NOT ALTER
083110     IF WS-CIX-MESSAGE-TYPE = '0200'
083110        PERFORM IRIS-GET-MESSAGE-TYPE
083110     END-IF
           MOVE WS-CIX-MESSAGE-TYPE      TO CXXCW170-CIX-MESSAGE-TYPE
           IF CXXCW170-CIX-CARD-NR NOT > ZERO
              MOVE WS-UIWA-CARD-NR       TO CXXCW170-CIX-CARD-NR
           END-IF
           MOVE '000000'                 TO CXXCW170-CIX-PROCESS-CODE
           COMPUTE WS-AMOUNT-NO-DECIMAL-12 =
              (WS-UIWA-NR2-COST-SC +
               WS-UIWA-REF-COST-SC +
               WS-UIWA-OTH-COST-SC +
               WS-UIWA-NR1-COST-SC +
               WS-UIWA-OIL-COST-SC +
               WS-UIWA-CASH-AMT-SC +
               WS-UIWA-PR1-COST-SC +
               WS-UIWA-PR2-COST-SC +
               WS-UIWA-PR3-COST-SC +
               WS-UIWA-TAX-AMT-SC)  * 100
           END-COMPUTE
           MOVE WS-AMOUNT-NO-DECIMAL-12  TO CXXCW170-CIX-XTN-AMT-MERCH
           COMPUTE WS-AMOUNT-NO-DECIMAL-12 =
              (WS-UIWA-NR2-COST +
               WS-UIWA-REF-COST +
               WS-UIWA-OTH-COST +
               WS-UIWA-NR1-COST +
               WS-UIWA-OIL-COST +
               WS-UIWA-CASH-AMT +
               WS-UIWA-PR1-COST +
               WS-UIWA-PR2-COST +
               WS-UIWA-PR3-COST +
               WS-UIWA-TAX-AMT)  * 100
           END-COMPUTE
           MOVE WS-AMOUNT-NO-DECIMAL-12  TO CXXCW170-CIX-XTN-AMT-COMP
           IF CXXCW170-CIX-XTN-AMT-MERCH = ZERO
             AND WS-AMOUNT-NO-DECIMAL-12 > ZERO
              MOVE WS-AMOUNT-NO-DECIMAL-12
                                         TO CXXCW170-CIX-XTN-AMT-MERCH
           END-IF
           IF WS-CURRENT-TIMESTAMP NOT > SPACES
              PERFORM GET-CURRENT-TIMESTAMP
           END-IF
           MOVE WS-TIMESTAMP-GMT         TO CXXCW170-CIX-XTN-TRANS-TS
           MOVE WS-CURRENT-TIMESTAMP     TO CXXCW170-CIX-XTN-LOCAL-TS
      ***** MC ONLY
           IF S007-MASTERCARD-CARD = 'Y'
              MOVE WS-EXPDATE-YYMM       TO CXXCW170-CIX-EXP-DT
           ELSE
              MOVE ZERO                  TO CXXCW170-CIX-EXP-DT
           END-IF
           MOVE 'CDNP'                   TO CXXCW170-CIX-MCC
                                            CXXCW170-CIX-MCC-ORIGIN
           IF THIS-IS-A-POS-TRANS
             AND WS-UIWA-SWIPED-KEYED = 'S'
              MOVE '090'                 TO CXXCW170-CIX-POS-ENT-MODE
           ELSE
PJ0520        IF WS-UIWA-SWIPED-KEYED = 'M'
PJ0520           MOVE '030'              TO CXXCW170-CIX-POS-ENT-MODE
PJ0520        ELSE
PJ0520           IF WS-UIWA-SWIPED-KEYED = 'C'
PJ0520              MOVE '050'           TO CXXCW170-CIX-POS-ENT-MODE
PJ0520           ELSE
                    MOVE '010'           TO CXXCW170-CIX-POS-ENT-MODE
PJ0520           END-IF
PJ0520        END-IF
           END-IF
           IF WS-POS-ERROR-NUMBER = ZERO
              MOVE '00'                  TO CXXCW170-CIX-RESPONSE-CD
           ELSE
              MOVE '05'                  TO CXXCW170-CIX-RESPONSE-CD
           END-IF
           IF THIS-IS-NOT-A-POS-TRANS
              MOVE EIBTRMID              TO CXXCW170-CIX-TERM-ID
           ELSE
              MOVE WS-UIWA-DEVICE-TYPE   TO CXXCW170-CIX-TERM-ID
           END-IF
           MOVE WS-UIWA-SC-CODE          TO CXXCW170-CIX-MERCH-ID
           MOVE COM-TS-NAME           TO CXXCW170-CIX-ACCEPT-LOC(01:23)
           MOVE COM-TS-CITY           TO CXXCW170-CIX-ACCEPT-LOC(24:15)
           MOVE COM-TS-STATE          TO CXXCW170-CIX-ACCEPT-LOC(39:02)
                                         CXXCW170-CIX-ACCEPT-STATE
           MOVE SCM-LOCATION-ZIP      TO CXXCW170-CIX-ACCEPT-POSTAL-CDE
           IF SCM-IS-IN-CANADA
              MOVE 'CA'                  TO CXXCW170-CIX-ACCEPT-CNTRY
              MOVE '124'                 TO CXXCW170-CIX-TRAN-CURR-CD
           ELSE
              MOVE 'US'                  TO CXXCW170-CIX-ACCEPT-CNTRY
              MOVE '840'                 TO CXXCW170-CIX-TRAN-CURR-CD
           END-IF
           IF CDN-CANADA-COUNTRY
              MOVE '124'                 TO CXXCW170-CIX-COMP-CURR-CD
           ELSE
              MOVE '840'                 TO CXXCW170-CIX-COMP-CURR-CD
           END-IF
      ***** THIS ROUTINE WILL POPULATE      CXXCW170-CIX-PROD-TYP
           PERFORM IRIS-GET-PROD-TYP
           IF WS-UIWA-SYSTEM-ID = 1
              MOVE 'Y'                   TO CXXCW170-CIX-STAND-IN-FL
           ELSE
              MOVE 'N'                   TO CXXCW170-CIX-STAND-IN-FL
           END-IF
           IF WS-UIWA-NR2-QTY-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-NR2-QTY-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-NR2-QTY * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-NR2-QTY
           IF WS-UIWA-NR2-COST-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-NR2-COST-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-NR2-COST * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-NR2-COST
           IF WS-UIWA-NR1-QTY-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-NR1-QTY-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-NR1-QTY * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-NR1-QTY
           IF WS-UIWA-NR1-COST-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-NR1-COST-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-NR1-COST * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-NR1-COST
           IF WS-UIWA-OTH-QTY-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-OTH-QTY-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-OTH-QTY * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-OTH-QTY
           IF WS-UIWA-OTH-COST-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-OTH-COST-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-OTH-COST * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-OTH-COST
           IF WS-UIWA-REF-QTY-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-REF-QTY-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-REF-QTY * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-REF-QTY
           IF WS-UIWA-REF-COST-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-REF-COST-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-REF-COST * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-REF-COST
      ***** NO REFORMATTING REQUIRED
           IF WS-UIWA-OIL-QTY-US > ZERO
              MOVE WS-UIWA-OIL-QTY-US    TO CXXCW170-CIX-OIL-QTY
           ELSE
              MOVE WS-UIWA-OIL-QTY       TO CXXCW170-CIX-OIL-QTY
           END-IF
           IF WS-UIWA-OIL-COST-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-OIL-COST-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-OIL-COST * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-OIL-COST
           MOVE WS-UIWA-PR1-CODE         TO CXXCW170-CIX-PR1-CODE
           IF WS-UIWA-PR1-COST-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-PR1-COST-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-PR1-COST * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-PR1-COST
           MOVE WS-UIWA-PR2-CODE         TO CXXCW170-CIX-PR2-CODE
           IF WS-UIWA-PR2-COST-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-PR2-COST-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-PR2-COST * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-PR2-COST
           MOVE WS-UIWA-PR3-CODE         TO CXXCW170-CIX-PR3-CODE
           IF WS-UIWA-PR3-COST-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-PR3-COST-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-PR3-COST * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-PR3-COST
           IF WS-UIWA-CASH-AMT-US > ZERO
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-CASH-AMT-US * 100
              END-COMPUTE
           ELSE
              COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                 WS-UIWA-CASH-AMT * 100
              END-COMPUTE
           END-IF
           MOVE WS-AMOUNT-NO-DECIMAL-09  TO CXXCW170-CIX-CASH-AMT
      ***** NOTHING IS MOVED TO THESE CXXCW170 FIELDS FOR FUEL:
      *****                              CXXCW170-CIX-ACQ-INST-ID
      *****                              CXXCW170-CIX-FWD-INST-ID
      *****                              CXXCW170-CIX-POS-DATA
      *****                              CXXCW170-CIX-RETRIEVAL-REF
      *****                              CXXCW170-CIX-NETWORK-DATA
      *****                              CXXCW170-CIX-AUDIT-NUMBER
      *****                              CXXCW170-CIX-RPLCMNT-AMT
           CONTINUE.
      *------------------------------
040912 IRIS-VRU-TRANS.
      *------------------------------
           INITIALIZE CXXCW170-CXXCO0FC-COMMAREA-IN
           PERFORM IRIS-NUM-CHECK-5
           MOVE 'US'                     TO CXXCW170-CCI-PROGRAM-ID
MN0814     MOVE '07'                     TO CXXCW170-CIX-VERSION-NR
           MOVE WS-CIX-RESP-REQUESTED    TO CXXCW170-CIX-RESP-REQUESTED
           MOVE WS-UIWA-CARD-NR          TO CXXCW170-CIX-CARD-NR
ED0712***** THIS FIELD POPULATED IN PARAGRAPH IRIS-NUM-CHECK-5
ED0712     MOVE WS-AMOUNT-NO-DECIMAL-12  TO CXXCW170-CIX-XTN-AMT-MERCH
                                            CXXCW170-CIX-XTN-AMT-COMP
           IF WS-CURRENT-TIMESTAMP NOT > SPACES
              PERFORM GET-CURRENT-TIMESTAMP
           END-IF
           MOVE WS-CURRENT-TIMESTAMP     TO CXXCW170-CIX-XTN-TRANS-TS
                                            CXXCW170-CIX-XTN-LOCAL-TS
      ***** MC ONLY
           IF S007-MASTERCARD-CARD = 'Y'
              MOVE WS-EXPDATE-YYMM       TO CXXCW170-CIX-EXP-DT
           ELSE
              MOVE ZERO                  TO CXXCW170-CIX-EXP-DT
           END-IF
           MOVE WS-UIWA-SC-CODE          TO CXXCW170-CIX-MERCH-ID
           MOVE 'MM'                     TO CXXCW170-CIX-PROD-TYP
           MOVE PRM-ACCT-NUMBER          TO CXXCW170-CIX-ACCT-CD
           MOVE PRM-SUB-ACCT-NUMB        TO CXXCW170-CIX-CUST-ID
           IF WS-HOLD-POS-ERROR-MSG > SPACES
              MOVE WS-HOLD-POS-ERROR-MSG TO CXXCW170-CIX-ERROR-MSG
           ELSE
              MOVE OUT-COMENT-1          TO CXXCW170-CIX-ERROR-MSG
           END-IF
           MOVE WS-POS-ERROR-NUMBER      TO CXXCW170-CIX-CDN-RESP-CD
           MOVE 1                        TO CXXCW170-CIX-ATTEMPT
           MOVE 'N'                      TO CXXCW170-CIX-STAND-IN-FL
      ***** THIS FIELD POPULATED IN PARAGRAPH IRIS-NUM-CHECK-5
           MOVE WS-AMOUNT-NO-DECIMAL-09 TO CXXCW170-CIX-CARD-CREDIT-LIM
           MOVE CDN-BALLIM-FLAG          TO CXXCW170-CIX-BALLIM-FL
           MOVE PRM-FIRST-NAME           TO CXXCW170-CIX-CHLDR-FNAME
           MOVE PRM-LAST-NAME            TO CXXCW170-CIX-CHLDR-LNAME
           MOVE PRM-CARD-EMPLOYEE-ID     TO CXXCW170-CIX-EMP-ID
           MOVE HLD-PRIVATE-LABEL-CODE   TO CXXCW170-CIX-PL-CODE
           MOVE CDN-EXP-BILL             TO CXXCW170-CIX-BILL-FL
           IF THIS-IS-A-CANCEL-XTN
              MOVE 'CXDRAFT'             TO CXXCW170-CIX-TXN-TYPE
ED0712        MOVE '0626'                TO CXXCW170-CIX-MESSAGE-TYPE
           ELSE
              MOVE 'CCDRAFT'             TO CXXCW170-CIX-TXN-TYPE
ED0712        MOVE '0641'                TO CXXCW170-CIX-MESSAGE-TYPE
           END-IF
           MOVE OL-PT-CHECK-NR           TO CXXCW170-CIX-DRAFT-NBR
           CONTINUE.
      *------------------------------
080210 IRIS-LINK-TO-CXXCO0FC.
      *------------------------------
MN0814     IF PRM-CARD-NUMB = ZEROS
MN0814         MOVE SPACES              TO CXXCW170-CIX-CARD-STOCK
MN0814                                     CXXCW170-CIX-MISC-1
MN0814                                     CXXCW170-CIX-MISC-2
MN0814         MOVE ZEROS               TO CXXCW170-CIX-REASON-CODE
MN0814         MOVE '0'                 TO CXXCW170-CIX-VIP-IND
MN0814     ELSE
MN0814         MOVE PRM-FLEET-CARD-TYPE TO CXXCW170-CIX-CARD-STOCK
MN0814         PERFORM READ-PRMINFO-FOR-IRIS
MN0814     END-IF.

           INSPECT CXXCW170-CCI-IRIS-XMIT-DATA
                   REPLACING ALL LOW-VALUES BY SPACE

           EXEC CICS LINK
              PROGRAM  ('CXXCO0FC')
              COMMAREA (CXXCW170-CXXCO0FC-COMMAREA)
              LENGTH   (LENGTH OF CXXCW170-CXXCO0FC-COMMAREA)
           END-EXEC.

      *------------------------------
080210 IRIS-FORMAT-TIMESTAMP-I.
      *------------------------------
           MOVE PRM-CREATION-DATE TO CALENDAR-JULIAN-DATE
           MOVE +225              TO CALENDAR-OPTIONS
CP1011     CALL 'CXUTSCAL'     USING CALENDAR-PARAMETERS, OMITTED
           MOVE YMD-YY TO WS-TS-YEAR
           IF WS-TS-YEAR > 70
              MOVE 19  TO WS-TS-CEN
           ELSE
              MOVE 20  TO WS-TS-CEN
           END-IF
           MOVE YMD-MM TO WS-TS-MON
           MOVE YMD-DD TO WS-TS-DAY
           MOVE ZERO   TO WS-TS-HOUR
                          WS-TS-MIN
                          WS-TS-SEC.

      *------------------------------
080210 IRIS-FORMAT-TIMESTAMP-II.
      *------------------------------
           MOVE '20'                        TO WS-TS-CEN
           MOVE WS-CURRENT-DATE-YYYYMMDD-YY TO WS-TS-YEAR
           MOVE WS-TS-DATE-IN (1:2)         TO WS-TS-MON
           MOVE WS-TS-DATE-IN (3:2)         TO WS-TS-DAY
      ***** IF TRANSACTION WAS IN A DIFFERENT TIME ZONE, THATS WHY
           IF WS-TS-MON = '01' AND
              WS-CURRENT-DATE-YYYYMMDD-MM = '12'
              ADD 1                         TO WS-TS-YEAR
           END-IF
           IF WS-TS-MON = '12' AND
              WS-CURRENT-DATE-YYYYMMDD-MM = '01'
              SUBTRACT 1                  FROM WS-TS-YEAR
           END-IF
           IF WS-TS-MON = ZERO
             AND WS-TS-DAY = ZERO
              MOVE ZERO                     TO WS-TS-CEN
              MOVE 1                        TO WS-TS-YEAR
                                               WS-TS-MON
                                               WS-TS-DAY
           END-IF
           MOVE WS-TS-TIME-IN (1:2)         TO WS-TS-HOUR
           MOVE WS-TS-TIME-IN (3:2)         TO WS-TS-MIN
           MOVE WS-TS-TIME-IN (5:2)         TO WS-TS-SEC.

      *------------------------------
083110 IRIS-NUM-CHECK-1.
      *------------------------------
           IF POS-ERROR-NUMBER NOT NUMERIC
              MOVE ZERO                     TO WS-POS-ERROR-NUMBER
           ELSE
              MOVE POS-ERROR-NUMBER         TO WS-POS-ERROR-NUMBER
           END-IF
083110     IF WS-POS-ERROR-NUMBER = ZERO
083110       AND WS-HOLD-POS-ERROR-NUMBER > ZERO
083110        MOVE WS-HOLD-POS-ERROR-NUMBER TO WS-POS-ERROR-NUMBER
083110     END-IF.

      *------------------------------
080210 IRIS-NUM-CHECK-2.
      *------------------------------
           IF PRM-CARD-NUMB NOT NUMERIC
              MOVE ZERO             TO PRM-CARD-NUMB
           END-IF
           IF PRM-CHECK-DIGIT NOT NUMERIC
              MOVE ZERO             TO PRM-CHECK-DIGIT
           END-IF
           IF CCL-AVL-CRD-AMT NOT NUMERIC
             OR CCL-AVL-CRD-AMT = ZERO
              MOVE CDN-CUST-ACCT-CODE TO WS-CL-CO-CD
              IF WS-BILLABLE NOT NUMERIC
                 MOVE ZERO TO WS-BILLABLE
              END-IF
              PERFORM GET-WS-AVAIL-AMOUNT
           END-IF
           IF PRM-COMPANY-STANDARD-ID NOT NUMERIC
              MOVE ZERO                    TO WS-COMPANY-STANDARD-ID
           ELSE
              MOVE PRM-COMPANY-STANDARD-ID TO WS-COMPANY-STANDARD-ID
           END-IF
           EVALUATE TRUE
              WHEN CDN-BALANCE-BASED AND PRM-EXPENSE-BALANCE NUMERIC
                 COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                    PRM-EXPENSE-BALANCE * 100
              WHEN CDN-LIMIT-BASED   AND PRM-PURC-INITIAL NUMERIC
                 COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
                    PRM-PURC-INITIAL * 100
              WHEN OTHER
                 MOVE ZERO TO WS-AMOUNT-NO-DECIMAL-09
           END-EVALUATE.

      *------------------------------
080210 IRIS-NUM-CHECK-3.
      *------------------------------
           IF ATMW-TRANSACTION-AMOUNT-N NOT NUMERIC
              MOVE ZERO TO ATMW-TRANSACTION-AMOUNT-N
           END-IF
           IF OL-PT-AMOUNT NOT NUMERIC
              MOVE ZERO TO OL-PT-AMOUNT
           END-IF
           IF ATMW-TRAN-DATE NOT NUMERIC
              MOVE ZERO TO ATMW-TRAN-DATE
           END-IF
           IF ATMW-TRAN-TIME NOT NUMERIC
              MOVE ZERO TO ATMW-TRAN-TIME
           END-IF
           IF ATMW-DATE-LOCAL NOT NUMERIC
              MOVE ZERO TO ATMW-DATE-LOCAL
           END-IF
           IF ATMW-TIME-LOCAL NOT NUMERIC
              MOVE ZERO TO ATMW-TIME-LOCAL
           END-IF
           IF CDN-CARD-EXPIRATION-DATE NOT NUMERIC
              MOVE ZERO TO CDN-CARD-EXPIRATION-DATE
           END-IF
           IF ATMW-AUDIT-NUMBER-N NOT NUMERIC
              MOVE ZERO TO ATMW-AUDIT-NUMBER-N
           END-IF.

      *------------------------------
080210 IRIS-NUM-CHECK-4.
      *------------------------------
           IF WS-UIWA-NR2-COST NOT NUMERIC
              MOVE ZERO TO WS-UIWA-NR2-COST
           END-IF
           IF WS-UIWA-NR2-COST-SC NOT NUMERIC
              MOVE ZERO TO WS-UIWA-NR2-COST-SC
           END-IF
           IF WS-UIWA-NR2-COST-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-NR2-COST-US
           END-IF
           IF WS-UIWA-NR2-QTY NOT NUMERIC
              MOVE ZERO TO WS-UIWA-NR2-QTY
           END-IF
           IF WS-UIWA-NR2-QTY-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-NR2-QTY-US
           END-IF
           IF WS-UIWA-REF-COST NOT NUMERIC
              MOVE ZERO TO WS-UIWA-REF-COST
           END-IF
           IF WS-UIWA-REF-COST-SC NOT NUMERIC
              MOVE ZERO TO WS-UIWA-REF-COST-SC
           END-IF
           IF WS-UIWA-REF-COST-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-REF-COST-US
           END-IF
           IF WS-UIWA-REF-QTY NOT NUMERIC
              MOVE ZERO TO WS-UIWA-REF-QTY
           END-IF
           IF WS-UIWA-REF-QTY-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-REF-QTY-US
           END-IF
           IF WS-UIWA-OTH-COST NOT NUMERIC
              MOVE ZERO TO WS-UIWA-OTH-COST
           END-IF
           IF WS-UIWA-OTH-COST-SC NOT NUMERIC
              MOVE ZERO TO WS-UIWA-OTH-COST-SC
           END-IF
           IF WS-UIWA-OTH-COST-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-OTH-COST-US
           END-IF
           IF WS-UIWA-OTH-QTY NOT NUMERIC
              MOVE ZERO TO WS-UIWA-OTH-QTY
           END-IF
           IF WS-UIWA-OTH-QTY-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-OTH-QTY-US
           END-IF
           IF WS-UIWA-NR1-COST NOT NUMERIC
              MOVE ZERO TO WS-UIWA-NR1-COST
           END-IF
           IF WS-UIWA-NR1-COST-SC NOT NUMERIC
              MOVE ZERO TO WS-UIWA-NR1-COST-SC
           END-IF
           IF WS-UIWA-NR1-COST-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-NR1-COST-US
           END-IF
           IF WS-UIWA-NR1-QTY NOT NUMERIC
              MOVE ZERO TO WS-UIWA-NR1-QTY
           END-IF
           IF WS-UIWA-NR1-QTY-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-NR1-QTY-US
           END-IF
           IF WS-UIWA-OIL-COST NOT NUMERIC
              MOVE ZERO TO WS-UIWA-OIL-COST
           END-IF
           IF WS-UIWA-OIL-COST-SC NOT NUMERIC
              MOVE ZERO TO WS-UIWA-OIL-COST-SC
           END-IF
           IF WS-UIWA-OIL-COST-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-OIL-COST-US
           END-IF
           IF WS-UIWA-OIL-QTY NOT NUMERIC
              MOVE ZERO TO WS-UIWA-OIL-QTY
           END-IF
           IF WS-UIWA-OIL-QTY-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-OIL-QTY-US
           END-IF
           IF WS-UIWA-CASH-AMT NOT NUMERIC
              MOVE ZERO TO WS-UIWA-CASH-AMT
           END-IF
           IF WS-UIWA-CASH-AMT-SC NOT NUMERIC
              MOVE ZERO TO WS-UIWA-CASH-AMT-SC
           END-IF
           IF WS-UIWA-CASH-AMT-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-CASH-AMT-US
           END-IF
           IF WS-UIWA-PR1-COST NOT NUMERIC
              MOVE ZERO TO WS-UIWA-PR1-COST
           END-IF
           IF WS-UIWA-PR1-COST-SC NOT NUMERIC
              MOVE ZERO TO WS-UIWA-PR1-COST-SC
           END-IF
           IF WS-UIWA-PR1-COST-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-PR1-COST-US
           END-IF
           IF WS-UIWA-PR2-COST NOT NUMERIC
              MOVE ZERO TO WS-UIWA-PR2-COST
           END-IF
           IF WS-UIWA-PR2-COST-SC NOT NUMERIC
              MOVE ZERO TO WS-UIWA-PR2-COST-SC
           END-IF
           IF WS-UIWA-PR2-COST-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-PR2-COST-US
           END-IF
           IF WS-UIWA-PR3-COST NOT NUMERIC
              MOVE ZERO TO WS-UIWA-PR3-COST
           END-IF
           IF WS-UIWA-PR3-COST-SC NOT NUMERIC
              MOVE ZERO TO WS-UIWA-PR3-COST-SC
           END-IF
           IF WS-UIWA-PR3-COST-US NOT NUMERIC
              MOVE ZERO TO WS-UIWA-PR3-COST-US
           END-IF
           IF WS-UIWA-TAX-AMT NOT NUMERIC
              MOVE ZERO TO WS-UIWA-TAX-AMT
           END-IF
           IF WS-UIWA-TAX-AMT-SC NOT NUMERIC
              MOVE ZERO TO WS-UIWA-TAX-AMT-SC
           END-IF
           IF WS-EXPDATE-YYMM NOT NUMERIC
              MOVE ZERO TO WS-EXPDATE-YYMM
           END-IF
           IF WS-UIWA-SYSTEM-ID NOT NUMERIC
              MOVE ZERO TO WS-UIWA-SYSTEM-ID
           END-IF.
      *------------------------------
040912 IRIS-NUM-CHECK-5.
      *------------------------------
           IF WS-UIWA-CASH-AMT NOT NUMERIC
              MOVE ZERO TO WS-UIWA-CASH-AMT
           END-IF
ED0712     COMPUTE WS-AMOUNT-NO-DECIMAL-12 =
ED0712        WS-UIWA-CASH-AMT * 100
ED0712     END-COMPUTE
           IF PRM-EXPENSE-BALANCE NOT NUMERIC
              MOVE ZERO TO PRM-EXPENSE-BALANCE
           END-IF
           COMPUTE WS-AMOUNT-NO-DECIMAL-09 =
              PRM-EXPENSE-BALANCE * 100
           END-COMPUTE
           IF OL-PT-CHECK-NR NOT NUMERIC
              MOVE ZERO TO OL-PT-CHECK-NR
           END-IF.

      *------------------------------
MN0814 READ-PRMINFO-FOR-IRIS.
      *------------------------------
           INITIALIZE PRM-INFO-RECORD
           MOVE PRM-CARD-NUMB  TO PIR-CARD-NUMBER
           EXEC CICS READ
                DATASET ('PRMINFO')
                INTO    (PRM-INFO-RECORD)
                RIDFLD  (PIR-KEY)
                RESP    (EIBRESP)
           END-EXEC
           IF EIBRESP = DFHRESP(NORMAL)
               CONTINUE
           ELSE
               MOVE SPACES       TO PIR-MISC-NR1
                                    PIR-MISC-NR2
               MOVE '0'          TO PIR-VIP-FLAG
               MOVE ZEROS        TO PIR-BLOCK-REASON-CODE
           END-IF

           IF PIR-MISC-NR1 > SPACES
               MOVE PIR-MISC-NR1        TO CXXCW170-CIX-MISC-1
           ELSE
               MOVE SPACES              TO CXXCW170-CIX-MISC-1.

           IF PIR-MISC-NR2 > SPACES
               MOVE PIR-MISC-NR2        TO CXXCW170-CIX-MISC-2
           ELSE
               MOVE SPACES              TO CXXCW170-CIX-MISC-2.

           IF PIR-VIP-FLAG > SPACES
               MOVE PIR-VIP-FLAG        TO CXXCW170-CIX-VIP-IND
           ELSE
               MOVE '0'                 TO CXXCW170-CIX-VIP-IND.

           IF PIR-BLOCK-REASON-CODE NUMERIC
               MOVE PIR-BLOCK-REASON-CODE
                                        TO CXXCW170-CIX-REASON-CODE
           ELSE
               MOVE ZEROS               TO CXXCW170-CIX-REASON-CODE.


      *------------------------------
080210 GET-COUNTRY-CODE.
      *------------------------------
123010*****MOVE ATMW-CURRENCY-CODE TO CNTRY-KEY
123010     MOVE ATMW-POS-DATA (14:3) TO CNTRY-KEY
           EXEC CICS READ
                DATASET ('COUNTRY')
                INTO    (COUNTRY-CODES)
                RIDFLD  (CNTRY-KEY)
                RESP    (EIBRESP)
           END-EXEC
           IF EIBRESP NOT = DFHRESP(NORMAL)
              MOVE SPACES          TO CNTRY-ALPHA
           END-IF.

      *------------------------------
080210 IRIS-GET-RESPONSE-CD.
      *------------------------------
083110     MOVE WS-POS-ERROR-NUMBER TO TSXCO0AT-APP-RETURN-CODE
           EVALUATE TRUE
              WHEN TSXCO0AT-APP-LIMIT-EXCEEDED
                 IF TSXCO0AT-TRAN-TYPE = '10'
                     MOVE '00'        TO CXXCW170-CIX-RESPONSE-CD
                 ELSE
                     MOVE '51'        TO CXXCW170-CIX-RESPONSE-CD
                 END-IF
              WHEN TSXCO0AT-APP-INVALID-PIN
                 MOVE '55'            TO CXXCW170-CIX-RESPONSE-CD
              WHEN TSXCO0AT-APP-EXCESSIVE-PIN
                 MOVE '75'            TO CXXCW170-CIX-RESPONSE-CD
              WHEN TSXCO0AT-APP-INVALID-TRANS
                 MOVE '57'            TO CXXCW170-CIX-RESPONSE-CD
SB0113        WHEN TSXCO0AT-APP-RETURN-CODE = ZEROS
SB0113           MOVE '00'            TO CXXCW170-CIX-RESPONSE-CD
              WHEN OTHER
                 MOVE '62'            TO CXXCW170-CIX-RESPONSE-CD
           END-EVALUATE.

      *------------------------------
083110 IRIS-GET-MESSAGE-TYPE.
      *------------------------------
           EVALUATE TRUE
              WHEN WS-UIWA-SYSTEM-ID = 1
              WHEN THIS-BE-AN-UNATTENDED-AUTH
102810        WHEN FORCE-POST-FROM-PRE-AUTH
                 MOVE '0220'          TO WS-CIX-MESSAGE-TYPE
AVFUEL*****   WHEN THIS-BE-AN-AVFUEL-XTN
      *****     AND WS-UIWA-REPRICE-IND NOT = 'Y'
      *****      MOVE '0220'          TO WS-CIX-MESSAGE-TYPE
           END-EVALUATE.

      *------------------------------
080210 IRIS-GET-PROD-TYP.
      *------------------------------
           EVALUATE TRUE
              WHEN WS-NATS-PRE-AUTH-FLAG = 'Y'
              WHEN THIS-BE-A-NATS-AUTH
                 MOVE 'NA'            TO CXXCW170-CIX-PROD-TYP
AVFUEL*****   WHEN THIS-BE-AN-AVFUEL-XTN
      *****      MOVE 'CF'            TO CXXCW170-CIX-PROD-TYP
              WHEN THIS-BE-TERMINAL-FUEL
                 MOVE 'TF'            TO CXXCW170-CIX-PROD-TYP
              WHEN THIS-BE-A-SMART-FUEL-PRE-AUTH
              WHEN THIS-BE-A-SMART-FUEL-AUTH
                 MOVE 'SF'            TO CXXCW170-CIX-PROD-TYP
              WHEN THIS-BE-AN-IOL-XTN
                 MOVE 'IO'            TO CXXCW170-CIX-PROD-TYP
              WHEN THIS-IS-A-CANCEL-XTN
                 MOVE 'CN'            TO CXXCW170-CIX-PROD-TYP
              WHEN THIS-BE-AN-UNATTENDED-XTN
                 MOVE 'US'            TO CXXCW170-CIX-PROD-TYP
              WHEN OTHER
                 MOVE 'FP'            TO CXXCW170-CIX-PROD-TYP
           END-EVALUATE.

      *------------------------------
080210 IRIS-REJECT-CHECK.
      *------------------------------
           IF CXXCW170-CIR-IRIS-REJECTED
083110        MOVE 'Y' TO WS-NOTIFY-IRIS-FL
              MOVE WS-E-IRIS-DENIED-N    TO POS-ERROR-NUMBER
              MOVE WS-E-IRIS-DENIED      TO OUT-COMENT
              PERFORM CHECK-FOR-EXIT-INITIAL-SCREEN
           END-IF.

      *------------------------------
       20990-COMPUTE-WS-CURXMN.
      *------------------------------
           MOVE WS-BILLABLE  TO WS-CURXMN.
           MOVE WS2-BILLABLE TO WS2-CURXMN.
           MOVE WS3-BILLABLE TO WS3-CURXMN.
           IF THIS-BE-TERMINAL-FUEL
              MOVE ZERO TO WS-CURXMN
                           WS2-CURXMN
                           WS3-CURXMN.
           IF MNX-TRANSACTION
              MOVE WS-UIWA-CASH-AMT TO WS-CURXMN
              MOVE WS-UIWA-CASH-AMT-SC TO WS2-CURXMN
              MOVE WS-UIWA-CASH-AMT-US TO WS3-CURXMN.

      *------------------------------
       20991-MOVE-WS-CURXMN.
      *------------------------------
           IF COM-ACCT-IS-BASE-CURRENCY
              MOVE WS-CURXMN TO I-AMT
              MOVE WS-CURXMN TO ODR-ORDER-AMT IN ORDRFIL-DETAIL-RECD,
                                OUT-NETXMN
           ELSE
              MOVE WS2-CURXMN TO I-AMT
              MOVE WS2-CURXMN TO ODR-ORDER-AMT IN ORDRFIL-DETAIL-RECD,
                                OUT-NETXMN.

SD0620*------------------------------
SD0620 20992-FUEL-PROXIMITY-CHECK.
SD0620*------------------------------
SD0620     IF THIS-BE-A-POS-AUTH
SD0620     OR THIS-BE-AN-UNATTENDED-PRE-AUTH
SD0620     OR THIS-BE-A-SMART-FUEL-PRE-AUTH
SD0620     OR THIS-IS-NOT-A-POS-TRANS
SD0620        PERFORM 20992-BUILD-XCTE-COMMAREA
SD0620        PERFORM 20992-LINK-TO-CXXCO0TE
SD0620     END-IF
SD0620     CONTINUE
SD0620     .
SD0620
SD0620*-----------------------------
SD0620 20992-BUILD-XCTE-COMMAREA.
SD0620*-----------------------------
SD0620
SD0620     INITIALIZE WS-CXXCW0TE-COMMAREA
SD0620
SD0620     MOVE PRM-CHECK-DIGIT              TO WS-PRM-CARD-CKD
SD0620     MOVE WS-PRM-CARD                  TO WS-XCTE-CARD-NBR
SD0620     MOVE UNITMST-UBC-UNIT-NR          TO WS-XCTE-UNIT-NUMBER
SD0620     MOVE UNITMST-UNIT-PROFILE-ID      TO WS-XCTE-UNIT-PROFILE-ID
SD0620     MOVE UNITMST-UNIT-DEVICE-ID       TO WS-XCTE-UNIT-DEVICE-ID
SD0620     MOVE CDN-CUST-ACCT-CODE           TO WS-XCTE-ACCOUNT-CODE
SD0620     MOVE CDN-CUST-NUMBER              TO WS-XCTE-CUSTOMER-ID
SD0620     PERFORM GET-CURRENT-TIMESTAMP
SD0620     MOVE WS-CURRENT-TIMESTAMP         TO WS-XCTE-TRANS-TS
SD0620     MOVE WS-CURXMN                    TO WS-XCTE-AMT-ACTUAL
SD0620     MOVE WS-USERID                    TO WS-XCTE-USERID
SD0620     MOVE 'C'                          TO WS-XCTE-PROCESS-NW-IND
SD0620     IF THIS-BE-A-POS-AUTH
SD0620     OR THIS-BE-AN-UNATTENDED-PRE-AUTH
SD0620     OR THIS-BE-A-SMART-FUEL-PRE-AUTH
SD0620        MOVE 'Y'                        TO WS-XCTE-PRE-AUTH-POST
SD0620     ELSE
SD0620        MOVE 'N'                        TO WS-XCTE-PRE-AUTH-POST
SD0620     END-IF
SD0620     MOVE HLD-CUSTOMER-RECORD           TO WS-XCTE-CDNCUST-ACCOUNT
SD0620     MOVE CDN-CUSTOMER-RECORD           TO WS-XCTE-CDNCUST-CUST
SD0620     MOVE UNITMST-UNIT-MASTER-RECORD    TO WS-XCTE-UNITMST
SD0620     MOVE SERVICE-CENTER-MASTER-RECORD  TO WS-XCTE-SCMSTR
SD0620
SD0620     EVALUATE TRUE
SD0620     WHEN THIS-BE-AN-UNATTENDED-PRE-AUTH
SD0620     WHEN THIS-BE-A-SMART-FUEL-PRE-AUTH
SD0620        SET WS-XCTE-PRE-AUTH    TO TRUE
SD0620        MOVE WS-AUTO-GAS-AVAIL-QTY-NR2     TO WS-XCTE-NR2-GALLONS
SD0620        MOVE WS-AUTO-GAS-AVAIL-QTY-NR1     TO WS-XCTE-NR1-GALLONS
SD0620        MOVE WS-AUTO-GAS-AVAIL-QTY-OTH     TO WS-XCTE-OTR-GALLONS
SD0620     WHEN THIS-IS-NOT-A-POS-TRANS
SD0620     WHEN THIS-BE-A-POS-AUTH
SD0620        SET WS-XCTE-POST        TO TRUE
SD0620        MOVE WS-UIWA-NR2-QTY               TO WS-XCTE-NR2-GALLONS
SD0620        MOVE WS-UIWA-NR1-QTY               TO WS-XCTE-NR1-GALLONS
SD0620        MOVE WS-UIWA-OTH-QTY               TO WS-XCTE-OTR-GALLONS
SD0620     END-EVALUATE
SD0620     .
SD0620
SD0620*-----------------------------
SD0620 209922-READ-MASTER-UNIT.
SD0620*-----------------------------
SD0620
DR0422     MOVE '209922-READ-MASTER-UNIT'   TO CXUTS0ML-PARAGRAPH.

SD0620     MOVE CDN-UNIT-POOL-MASTER    TO UNITMST-UBC-CUST-ID
SD0620     EXEC CICS READ
SD0620          DATASET ('UNITMST')
SD0620          INTO    (WS-MASTER-UNIT)
SD0620          RIDFLD  (UNITMST-KEY)
SD0620          RESP    (EIBRESP)
SD0620     END-EXEC
DR0422     MOVE UNITMST-KEY                 TO CXUTS0ML-COMMAND
SD0620     PERFORM CHECK-FOR-NOTFND-EIBRESP
SD0620     .
SD0620
SD0620*-----------------------------
SD0620 20992-LINK-TO-CXXCO0TE.
SD0620*-----------------------------
DR0422     MOVE '20992-LINK-TO-CXXCO0TE'    TO CXUTS0ML-PARAGRAPH.
SD0620
SD0620     EXEC CICS LINK
SD0620         PROGRAM  ('CXXCO0TE')
SD0620         COMMAREA (WS-CXXCW0TE-COMMAREA)
SD0620         LENGTH   (LENGTH OF WS-CXXCW0TE-COMMAREA)
SD0620         RESP     (EIBRESP)
SD0620     END-EXEC
SD0620     PERFORM CHECK-FOR-NORMAL-EIBRESP
SD0620
SD0620     IF WSR-XCTE-RESP-CODE NOT = +0000
SD0620        MOVE WSR-XCTE-RESP-CODE       TO POS-ERROR-NUMBER
SD6020        MOVE WSR-XCTE-RESP-MSG        TO OUT-COMENT
SD0620        PERFORM CHECK-FOR-EXIT-MAIN-SCREEN
SD0620     END-IF
SD0620     .
SD1020
SD1020     IF THIS-BE-A-POS-AUTH
SD1020     OR THIS-BE-AN-UNATTENDED-PRE-AUTH
SD1020     OR THIS-BE-A-SMART-FUEL-PRE-AUTH
SD1020* Apply telematics restriction on fuel quanitites
SD1020        IF WSR-XCTE-RTN-MAX-GALLONS > 0
SD1020           IF WS-UIWA-NR1-QTY > WSR-XCTE-RTN-MAX-GALLONS
SD1020              MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-UIWA-NR1-QTY
SD1020           END-IF
SD1020           IF WS-UIWA-NR2-QTY > WSR-XCTE-RTN-MAX-GALLONS
SD1020              MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-UIWA-NR2-QTY
SD1020           END-IF
SD1020           IF WS-UIWA-OTH-QTY > WSR-XCTE-RTN-MAX-GALLONS
SD1020              MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-UIWA-OTH-QTY
SD1020           END-IF
SD1020           IF WS-AUTO-GAS-AVAIL-QTY-NR1 > WSR-XCTE-RTN-MAX-GALLONS
SD1020              MOVE WSR-XCTE-RTN-MAX-GALLONS TO
SD1020                                       WS-AUTO-GAS-AVAIL-QTY-NR1
SD1020           END-IF
SD1020           IF WS-AUTO-GAS-AVAIL-QTY-NR2 > WSR-XCTE-RTN-MAX-GALLONS
SD1020              MOVE WSR-XCTE-RTN-MAX-GALLONS TO
SD1020                                       WS-AUTO-GAS-AVAIL-QTY-NR2
SD1020           END-IF
SD1020           IF WS-AUTO-GAS-AVAIL-QTY-OTH > WSR-XCTE-RTN-MAX-GALLONS
SD1020              MOVE WSR-XCTE-RTN-MAX-GALLONS TO
SD1020                                       WS-AUTO-GAS-AVAIL-QTY-OTH
SD1020           END-IF
SD1020        END-IF
SD1020     END-IF
SD1020     .
SD1020

      *------------------------------
       21010-CHECK-UNATTENDED-EXIT.
      *------------------------------
      **** (AT THIS POINT THE UNATTENDED PRE AUTH SHOULD BE COMPLETE) **
           IF THIS-BE-AN-UNATTENDED-AUTH
102810       OR FORCE-POST-FROM-PRE-AUTH
              IF WS-HOLD-POS-ERROR-NUMBER > ZEROES
                 MOVE WS-HOLD-POS-ERROR-NUMBER TO POS-ERROR-NUMBER
                 MOVE WS-HOLD-POS-ERROR-MSG    TO POS-MESSAGE
              END-IF
              MOVE ZEROES           TO POS-ERROR-NUMBER.

           IF THIS-BE-AN-UNATTENDED-PRE-AUTH
              IF THIS-BE-A-PRODUCT-PRE-AUTH
                 IF CDN-FLEET-LIMIT-FLAG = 'Y'
                    PERFORM 21015-REPOPULATE-SP14
                 ELSE
                    PERFORM 21017-BUILD-SP14-REPLY
                 END-IF
              END-IF
              IF WS-UIWA-RFID-NBR > SPACES
                 PERFORM RFID-ADJUSTMENT-TO-SP14
              END-IF
              PERFORM ADD-TO-PRE-AUTH-TBL
              MOVE ZEROES TO POS-ERROR-NUMBER
              PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.

      *------------------------------
102810 21015-REPOPULATE-SP14.
      *------------------------------
           MOVE WS-AUTO-GAS-AVAIL
                        TO WS-SP14-MAX-PUR-AMT
           IF WS-AUTO-GAS-AVAIL = ZERO
              MOVE ZERO TO WS-SP14-MAX-PUR-QTY
           ELSE
020711        IF COM-CONVERT-TO-SC-CURR
020711           MOVE WS-SP14-MAX-PUR-QTY TO WS-AUTO-GAS-AVAIL-QTY-WRK
020711           PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
020711           MOVE WS-AUTO-GAS-AVAIL-QTY-WRK
020711                  TO WS-SP14-MAX-PUR-QTY
              END-IF
           END-IF


SB0914* FLEET LIMITS ARE IN THE WS-SP14-REPLY AREA
SB0914* FMRM LIMITS ARE IN THE COM-RMR-???? FIELDS
SB0914* IF THE FMRM LIMITS ARE LESS THAN THE FLEET LIMITS MOVE THEM
SB0914* TO THE WS-SP14-REPLY FIELDS.
SB0914     IF WS-USE-FLEET-LIMITS = 'Y'
SB0914        IF COM-RMR-MAXIMUM-GALLONS < WS-SP14-MAX-NR2-QTY
SB0914           MOVE COM-RMR-MAXIMUM-GALLONS TO WS-SP14-MAX-NR2-QTY
SB0914        END-IF
SB0914        IF COM-RMR-MAXIMUM-GALLONS < WS-SP14-MAX-NR1-QTY
SB0914           MOVE COM-RMR-MAXIMUM-GALLONS TO WS-SP14-MAX-NR1-QTY
SB0914        END-IF
SB0914        IF COM-RMR-MAX-RFR-GALLONS < WS-SP14-MAX-REF-QTY
SB0914           MOVE COM-RMR-MAX-RFR-GALLONS TO WS-SP14-MAX-REF-QTY
SB0914        END-IF
SB0914        IF COM-RMR-MAX-OTH-GALLONS < WS-SP14-MAX-OTH-QTY
SB0914           MOVE COM-RMR-MAX-OTH-GALLONS TO WS-SP14-MAX-OTH-QTY
SB0914        END-IF
SB0914        IF COM-RMR-MAXIMUM-GALLONS = ZERO
SB0914           MOVE ZERO TO WS-SP14-MAX-NR2-AMT
SB0914                        WS-SP14-MAX-NR1-AMT
SB0914        END-IF
SB0914        IF COM-RMR-MAX-RFR-GALLONS = ZERO
SB0914           MOVE ZERO TO WS-SP14-MAX-REF-AMT
SB0914        END-IF
SB0914        IF COM-RMR-MAX-OTH-GALLONS = ZERO
SB0914           MOVE ZERO TO WS-SP14-MAX-OTH-AMT
SB0914        END-IF
SB0914* IF FLEET LIMITS ARE NOT BEING USED THEN FMRM LIMITS ARE USED
SB0914     ELSE
SB0814        MOVE COM-RMR-MAXIMUM-GALLONS
SB0814                     TO WS-SP14-MAX-NR2-QTY
SB0814        IF COM-RMR-MAXIMUM-GALLONS = ZERO
SB0814           MOVE ZERO TO WS-SP14-MAX-NR2-AMT
SB0814        END-IF
SB0814        MOVE COM-RMR-MAXIMUM-GALLONS
SB0814                     TO WS-SP14-MAX-NR1-QTY
SB0814        IF COM-RMR-MAXIMUM-GALLONS = ZERO
SB0814           MOVE ZERO TO WS-SP14-MAX-NR1-AMT
SB0814        END-IF
SB0814        MOVE COM-RMR-MAX-RFR-GALLONS
SB0814                     TO WS-SP14-MAX-REF-QTY
SB0814        IF COM-RMR-MAX-RFR-GALLONS = ZERO
SB0814           MOVE ZERO TO WS-SP14-MAX-REF-AMT
SB0814        END-IF
SB0814        MOVE COM-RMR-MAX-OTH-GALLONS
SB0814                     TO WS-SP14-MAX-OTH-QTY
SB0814        IF COM-RMR-MAX-OTH-GALLONS = ZERO
SB0814           MOVE ZERO TO WS-SP14-MAX-OTH-AMT
SB0814        END-IF
SB0914     END-IF.

           MOVE WS-AUTO-GAS-AVAIL-QTY-OIL
                        TO WS-SP14-MAX-OIL-QTY
           IF WS-AUTO-GAS-AVAIL-QTY-OIL = ZERO
              MOVE ZERO TO WS-SP14-MAX-OIL-AMT
           END-IF
           MOVE WS-AUTO-GAS-AVAIL-AMT-CSH
                        TO WS-SP14-MAX-CASH-AVAIL
SD0321********************************************************
SD0321* IF telematics assessed a restricted quantity then override
SD0321     IF WSR-XCTE-RTN-MAX-GALLONS > 0
SD0321        IF WSR-XCTE-RTN-MAX-GALLONS < WS-SP14-MAX-NR1-QTY
SD0321           MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-SP14-MAX-NR1-QTY
SD0321        END-IF
SD0321        IF WSR-XCTE-RTN-MAX-GALLONS < WS-SP14-MAX-NR2-QTY
SD0321           MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-SP14-MAX-NR2-QTY
SD0321        END-IF
SD0321        IF WSR-XCTE-RTN-MAX-GALLONS < WS-SP14-MAX-REF-QTY
SD0321           MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-SP14-MAX-REF-QTY
SD0321        END-IF
SD0321        IF WSR-XCTE-RTN-MAX-GALLONS < WS-SP14-MAX-OTH-QTY
SD0321           MOVE WSR-XCTE-RTN-MAX-GALLONS TO WS-SP14-MAX-OTH-QTY
SD0321        END-IF
SD0321
SD0321        PERFORM VARYING WS-PAC-SUB FROM +1 BY +1
SD0321                UNTIL   WS-PAC-SUB > 10
SD0321            IF WS-SP14-PUR-CATEGORY (WS-PAC-SUB) = '20001'
SD0321            OR WS-SP14-PUR-CATEGORY (WS-PAC-SUB) = '20002'
SD0321            OR WS-SP14-PUR-CATEGORY (WS-PAC-SUB) = '20003'
SD0321            OR WS-SP14-PUR-CATEGORY (WS-PAC-SUB) = '20004'
SD0321               IF WSR-XCTE-RTN-MAX-GALLONS <
SD0321                  WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
SD0321                  MOVE WSR-XCTE-RTN-MAX-GALLONS
SD0321                    TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
SD0321               END-IF
SD0321            END-IF
SD0321        END-PERFORM
SD0321
SD0321     END-IF
SD0321**********************************************************
020711***** THE SP14 IS A SERVICE CENTER PRE-AUTH, SO AMTS AND QTYS
020711***** NEED TO BE IN SERVICE CENTER CURRENCY
020711     IF COM-CONVERT-TO-SC-CURR
020711        PERFORM 21016-CONVERT-OIL
020711        PERFORM 21016-CONVERT-AMTS
020711        PERFORM 21016-CONVERT-PRODS
020711          VARYING WS-PAC-SUB FROM 1 BY 1
020711          UNTIL WS-PAC-SUB > 10
020711     END-IF.

      *------------------------------
020711 21016-CONVERT-OIL.
      *------------------------------
           IF WS-SP14-MAX-OIL-AMT NUMERIC
             AND WS-SP14-MAX-OIL-AMT > ZERO
              IF COM-CN-COMP-US-SC
                 MOVE WS-SP14-MAX-OIL-AMT TO WS-CANADIAN-DOLLARS
                 PERFORM CAN-DOLLARS-TO-US
                 MOVE WS-US-DOLLARS       TO WS-SP14-MAX-OIL-AMT
              END-IF
              IF COM-US-COMP-CN-SC
                 MOVE WS-SP14-MAX-OIL-AMT TO WS-US-DOLLARS
                 PERFORM US-DOLLARS-TO-CAN
                 MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-OIL-AMT
              END-IF
           END-IF.
      *------------------------------
020711 21016-CONVERT-AMTS.
      *------------------------------
           IF WS-SP14-MAX-NR2-AMT NUMERIC
             AND WS-SP14-MAX-NR2-AMT > ZERO
              IF COM-CN-COMP-US-SC
                 MOVE WS-SP14-MAX-NR2-AMT TO WS-CANADIAN-DOLLARS
                 PERFORM CAN-DOLLARS-TO-US
                 MOVE WS-US-DOLLARS       TO WS-SP14-MAX-NR2-AMT
              END-IF
              IF COM-US-COMP-CN-SC
                 MOVE WS-SP14-MAX-NR2-AMT TO WS-US-DOLLARS
                 PERFORM US-DOLLARS-TO-CAN
                 MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-NR2-AMT
              END-IF
           END-IF
           IF WS-SP14-MAX-NR1-AMT NUMERIC
             AND WS-SP14-MAX-NR1-AMT > ZERO
              IF COM-CN-COMP-US-SC
                 MOVE WS-SP14-MAX-NR1-AMT TO WS-CANADIAN-DOLLARS
                 PERFORM CAN-DOLLARS-TO-US
                 MOVE WS-US-DOLLARS       TO WS-SP14-MAX-NR1-AMT
              END-IF
              IF COM-US-COMP-CN-SC
                 MOVE WS-SP14-MAX-NR1-AMT TO WS-US-DOLLARS
                 PERFORM US-DOLLARS-TO-CAN
                 MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-NR1-AMT
              END-IF
           END-IF
           IF WS-SP14-MAX-REF-AMT NUMERIC
             AND WS-SP14-MAX-REF-AMT > ZERO
              IF COM-CN-COMP-US-SC
                 MOVE WS-SP14-MAX-REF-AMT TO WS-CANADIAN-DOLLARS
                 PERFORM CAN-DOLLARS-TO-US
                 MOVE WS-US-DOLLARS       TO WS-SP14-MAX-REF-AMT
              END-IF
              IF COM-US-COMP-CN-SC
                 MOVE WS-SP14-MAX-REF-AMT TO WS-US-DOLLARS
                 PERFORM US-DOLLARS-TO-CAN
                 MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-REF-AMT
              END-IF
           END-IF
           IF WS-SP14-MAX-OTH-AMT NUMERIC
             AND WS-SP14-MAX-OTH-AMT > ZERO
              IF COM-CN-COMP-US-SC
                 MOVE WS-SP14-MAX-OTH-AMT TO WS-CANADIAN-DOLLARS
                 PERFORM CAN-DOLLARS-TO-US
                 MOVE WS-US-DOLLARS       TO WS-SP14-MAX-OTH-AMT
              END-IF
              IF COM-US-COMP-CN-SC
                 MOVE WS-SP14-MAX-OTH-AMT TO WS-US-DOLLARS
                 PERFORM US-DOLLARS-TO-CAN
                 MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-OTH-AMT
              END-IF
           END-IF
           IF WS-SP14-MAX-PRD-AMT NUMERIC
             AND WS-SP14-MAX-PRD-AMT > ZERO
              IF COM-CN-COMP-US-SC
                 MOVE WS-SP14-MAX-PRD-AMT TO WS-CANADIAN-DOLLARS
                 PERFORM CAN-DOLLARS-TO-US
                 MOVE WS-US-DOLLARS       TO WS-SP14-MAX-PRD-AMT
              END-IF
              IF COM-US-COMP-CN-SC
                 MOVE WS-SP14-MAX-PRD-AMT TO WS-US-DOLLARS
                 PERFORM US-DOLLARS-TO-CAN
                 MOVE WS-CANADIAN-DOLLARS TO WS-SP14-MAX-PRD-AMT
              END-IF
           END-IF.
      *------------------------------
020711 21016-CONVERT-PRODS.
      *------------------------------
           IF WS-SP14-MAX-PROD-QTY (WS-PAC-SUB) NUMERIC
             AND WS-SP14-MAX-PROD-QTY (WS-PAC-SUB) > ZERO
              MOVE WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
                TO WS-AUTO-GAS-AVAIL-QTY-WRK
              PERFORM SPR-COMPUTE-AG-AVAIL-QTY-CONV
              MOVE WS-AUTO-GAS-AVAIL-QTY-WRK
                TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
           END-IF
           IF WS-SP14-MAX-PROD-AMT (WS-PAC-SUB) NUMERIC
             AND WS-SP14-MAX-PROD-AMT (WS-PAC-SUB) > ZERO
              IF COM-CN-COMP-US-SC
                 MOVE WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
                   TO WS-CANADIAN-DOLLARS
                 PERFORM CAN-DOLLARS-TO-US
                 MOVE WS-US-DOLLARS TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
              END-IF
              IF COM-US-COMP-CN-SC
                 MOVE WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
                   TO WS-US-DOLLARS
                 PERFORM US-DOLLARS-TO-CAN
                 MOVE WS-CANADIAN-DOLLARS
                                    TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
              END-IF
           END-IF.
      *------------------------------
102810 21017-BUILD-SP14-REPLY.
      *------------------------------
           INITIALIZE   WS-SP14-REPLY
                        WS-POPULATED-SW
           MOVE 'N'  TO WS-PRE-AUTH-CODES
           MOVE ZERO TO WS-PAC-SUB
           PERFORM PROCESS-SUB-PROD-CODES
             UNTIL WS-PAC-SUB = 10
           IF WS-PRE-AUTH-CODES = 'N'
              PERFORM PROCESS-DEFLT-SUB-PROD-CODES
           END-IF
           PERFORM PROCESS-CASH-OIL-ALL-PROD.
      *------------------------------
102810 PROCESS-SUB-PROD-CODES.
      *------------------------------
           ADD 1 TO WS-PAC-SUB
           IF (WS-UIWA-SUB-PRD-IND (WS-PAC-SUB) = 'P' OR 'C')
             AND WS-UIWA-SUB-PRD-CD (WS-PAC-SUB) > SPACES
              MOVE 'Y' TO WS-PRE-AUTH-CODES
              IF WS-UIWA-SUB-PRD-IND (WS-PAC-SUB) = 'P'
                 PERFORM TRANSLATE-PCAT-CODE
              ELSE
                 PERFORM TRANSLATE-CDN-CODE
                 MOVE 'XX' TO FL-TYP OF DSBPRDXL
              END-IF
              IF WS-SUB-PROD-FIND = 'Y'
                 MOVE WS-UIWA-SUB-PRD-CD (WS-PAC-SUB)
                   TO WS-XCPL-PROD (3:3)
092414           IF COM-USE-FMRM-SP14-QTYS = 'Y'
092414              PERFORM POPULATE-SP14-REPLY-FMRM
092414           ELSE
                    PERFORM POPULATE-SP14-REPLY
092414           END-IF
              END-IF
           ELSE
              MOVE 10 TO WS-PAC-SUB
           END-IF.
      *------------------------------
102810 TRANSLATE-PCAT-CODE.
      *------------------------------
CP1011     MOVE 'TRANSLATE-PCAT-CODE' TO CXUTS0ML-PARAGRAPH
CP1011     MOVE 'SELECT'              TO CXUTS0ML-COMMAND
           INITIALIZE DSBPRDXL
           MOVE WS-UIWA-SUB-PRD-CD (WS-PAC-SUB)
                    TO IN-SUB-PROD-CD OF DSBPRDXL
           MOVE 'P' TO CD-TYP         OF DSBPRDXL
           MOVE 'Y' TO WS-SUB-PROD-FIND
           EXEC SQL
              SELECT FL_TYP,
                     CDN_SUB_PROD_CD
                INTO :DSBPRDXL.FL-TYP,
                     :DSBPRDXL.CDN-SUB-PROD-CD
                FROM  DBO.SUB_PROD_XLATE
              WHERE DBO.SUB_PROD_XLATE.CD_TYP =
                    :DSBPRDXL.CD-TYP
                AND DBO.SUB_PROD_XLATE.IN_SUB_PROD_CD =
                    :DSBPRDXL.IN-SUB-PROD-CD
           END-EXEC
           IF SQLCODE = +100
              MOVE 'N' TO WS-SUB-PROD-FIND
              MOVE 10  TO WS-PAC-SUB
              MOVE INVALID-PRODUCT-CODE   TO OUT-COMENT
              MOVE INVALID-PRODUCT-CODE-N TO POS-ERROR-NUMBER
              PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
           ELSE
              PERFORM CHECK-NOTFND-SQL
           END-IF.
      *------------------------------
102810 TRANSLATE-CDN-CODE.
      *------------------------------
      ***** COMDATA PRODUCT CODE CANNOT BE MORE THAN TWO CHARACTERS
           IF WS-UIWA-SUB-PRD-CD (WS-PAC-SUB) (3:1) > SPACE
              MOVE 'N' TO WS-SUB-PROD-FIND
              MOVE 10  TO WS-PAC-SUB
              MOVE INVALID-PRODUCT-CODE   TO OUT-COMENT
              MOVE INVALID-PRODUCT-CODE-N TO POS-ERROR-NUMBER
              PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
           ELSE
CP1011        MOVE 'TRANSLATE-CDN-CODE' TO CXUTS0ML-PARAGRAPH
CP1011        MOVE 'SELECT'             TO CXUTS0ML-COMMAND
              INITIALIZE DSBPRDXL
              MOVE WS-UIWA-SUB-PRD-CD (WS-PAC-SUB) (1:2)
                       TO FL-TYP OF DSBPRDXL
              MOVE 'B' TO CD-TYP OF DSBPRDXL
              MOVE 'Y' TO WS-SUB-PROD-FIND
              EXEC SQL
                 SELECT FL_TYP
                   INTO :DSBPRDXL.FL-TYP
                   FROM  DBO.SUB_PROD_XLATE
                 WHERE DBO.SUB_PROD_XLATE.CD_TYP =
                       :DSBPRDXL.CD-TYP
                   AND DBO.SUB_PROD_XLATE.FL_TYP =
                       :DSBPRDXL.FL-TYP
              END-EXEC
              IF SQLCODE = +100
                 MOVE 'N' TO WS-SUB-PROD-FIND
                 MOVE 10  TO WS-PAC-SUB
                 MOVE INVALID-PRODUCT-CODE   TO OUT-COMENT
                 MOVE INVALID-PRODUCT-CODE-N TO POS-ERROR-NUMBER
                 PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
              ELSE
                 PERFORM CHECK-NOTFND-SQL
              END-IF
           END-IF.
      *------------------------------
102810 PROCESS-DEFLT-SUB-PROD-CODES.
      *------------------------------
           PERFORM 87520-GET-ALL-DFLT-SUB-PROD
           MOVE 1                       TO WS-PAC-SUB
           MOVE 'D2'                    TO FL-TYP OF DSBPRDXL
           MOVE WS-DFLT-NR2-SUB-PROD-IN TO WS-XCPL-PROD (3:3)
           PERFORM POPULATE-SP14-REPLY
           ADD  1                       TO WS-PAC-SUB
           MOVE 'D1'                    TO FL-TYP OF DSBPRDXL
           MOVE WS-DFLT-NR1-SUB-PROD-IN TO WS-XCPL-PROD (3:3)
           PERFORM POPULATE-SP14-REPLY
           ADD  1                       TO WS-PAC-SUB
           MOVE 'RF'                    TO FL-TYP OF DSBPRDXL
           MOVE WS-DFLT-REF-SUB-PROD-IN TO WS-XCPL-PROD (3:3)
           PERFORM POPULATE-SP14-REPLY
           ADD  1                       TO WS-PAC-SUB
           MOVE 'OT'                    TO FL-TYP OF DSBPRDXL
           MOVE WS-DFLT-OTH-SUB-PROD-IN TO WS-XCPL-PROD (3:3)
           PERFORM POPULATE-SP14-REPLY.
      *------------------------------
       POPULATE-SP14-REPLY.
      *------------------------------
           EVALUATE FL-TYP OF DSBPRDXL
              WHEN 'D2'
                 MOVE '20001' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
                 MOVE WS-AUTO-GAS-AVAIL-QTY-NR2
                              TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
              WHEN 'D1'
                 MOVE '20002' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
                 MOVE WS-AUTO-GAS-AVAIL-QTY-NR1
                              TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
              WHEN 'RF'
                 MOVE '20003' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
                 MOVE WS-AUTO-GAS-AVAIL-QTY-REF
                              TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
              WHEN 'OT'
                 MOVE '20004' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
                 MOVE WS-AUTO-GAS-AVAIL-QTY-OTH
                              TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
              WHEN 'XX'
                 MOVE '20005' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
                 MOVE 99999.99
                              TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
           END-EVALUATE
           MOVE WS-XCPL-PROD (3:3)
                              TO WS-SP14-SUB-PROD-CD (WS-PAC-SUB)
SB1115     EVALUATE FL-TYP OF DSBPRDXL
SB1115        WHEN 'XX'
SB1115           ADD WS-XCLP-PROD-NUM +1 GIVING WS-PRD-SUB
SB0116           IF WS-PRD-MAX-DAILY(WS-PRD-SUB) NOT NUMERIC
SB0116              MOVE ZEROS TO WS-PRD-MAX-DAILY(WS-PRD-SUB)
SB0116           END-IF
SB1115           IF WS-PRD-MAX-DAILY(WS-PRD-SUB) = ZEROS
SB1115              MOVE 99999.99 TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
SB1115           ELSE
SB1115              IF WS-PRD-MAX-DAILY(WS-PRD-SUB) = -1
SB1115                MOVE ZEROS TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
SB1115              ELSE
SB1115                 MOVE WS-PRD-MAX-DAILY(WS-PRD-SUB)
SB1115                              TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
SB1115                 ADD WS-PRD-MAX-DAILY(WS-PRD-SUB)
SB1115                              TO WS-SP14-MAX-PRD-AMT
SB1115                                 WS-SP14-MAX-PUR-AMT
SB1115              END-IF
SB1115           END-IF
SB1115        WHEN OTHER
                 MOVE WS-AUTO-GAS-AVAIL
                                 TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
SB1115     END-EVALUATE
           EVALUATE FL-TYP OF DSBPRDXL ALSO TRUE
              WHEN 'D2' ALSO WS-MAX-NR2-POPULATED = 'Y'
              WHEN 'D1' ALSO WS-MAX-NR1-POPULATED = 'Y'
              WHEN 'RF' ALSO WS-MAX-REF-POPULATED = 'Y'
              WHEN 'OT' ALSO WS-MAX-OTH-POPULATED = 'Y'
              WHEN 'XX' ALSO ANY
                 CONTINUE
              WHEN OTHER
                 PERFORM POPULATE-SP14-REPLY2
           END-EVALUATE.

092414*------------------------------
092414 POPULATE-SP14-REPLY-FMRM.
092414*------------------------------
092414     EVALUATE FL-TYP OF DSBPRDXL
092414        WHEN 'D2'
092414           MOVE '20001' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
092414           MOVE COM-SP14-MAX-PROD-QTY (WS-PAC-SUB)
092414                        TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
092414        WHEN 'D1'
092414           MOVE '20002' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
092414           MOVE COM-SP14-MAX-PROD-QTY (WS-PAC-SUB)
092414                        TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
092414        WHEN 'RF'
092414           MOVE '20003' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
092414           MOVE COM-SP14-MAX-PROD-QTY (WS-PAC-SUB)
092414                        TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
092414        WHEN 'OT'
092414           MOVE '20004' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
092414           MOVE COM-SP14-MAX-PROD-QTY (WS-PAC-SUB)
092414                        TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
092414        WHEN 'XX'
092414           MOVE '20005' TO WS-SP14-PUR-CATEGORY (WS-PAC-SUB)
092414           MOVE 99999.99
092414                        TO WS-SP14-MAX-PROD-QTY (WS-PAC-SUB)
092414     END-EVALUATE
092414     MOVE WS-XCPL-PROD (3:3)
092414                        TO WS-SP14-SUB-PROD-CD (WS-PAC-SUB)
092414     MOVE WS-AUTO-GAS-AVAIL
092414                        TO WS-SP14-MAX-PROD-AMT (WS-PAC-SUB)
092414     EVALUATE FL-TYP OF DSBPRDXL ALSO TRUE
092414        WHEN 'D2' ALSO WS-MAX-NR2-POPULATED = 'Y'
092414        WHEN 'D1' ALSO WS-MAX-NR1-POPULATED = 'Y'
092414        WHEN 'RF' ALSO WS-MAX-REF-POPULATED = 'Y'
092414        WHEN 'OT' ALSO WS-MAX-OTH-POPULATED = 'Y'
092414        WHEN 'XX' ALSO ANY
092414           CONTINUE
092414        WHEN OTHER
092414           PERFORM POPULATE-SP14-REPLY2
092414     END-EVALUATE.

      *------------------------------
       POPULATE-SP14-REPLY2.
      *------------------------------
           EVALUATE FL-TYP OF DSBPRDXL
              WHEN 'D2'
                 MOVE WS-AUTO-GAS-AVAIL         TO WS-SP14-MAX-NR2-AMT
SB1014           IF COM-USE-FMRM-SP14-QTYS NOT = 'Y'
SB1014           MOVE WS-AUTO-GAS-AVAIL-QTY-NR2 TO WS-SP14-MAX-NR2-QTY
SB1014           ELSE
SB0814           MOVE COM-RMR-MAXIMUM-GALLONS   TO WS-SP14-MAX-NR2-QTY
SB1014           END-IF
                 ADD WS-SP14-MAX-NR2-QTY        TO WS-SP14-MAX-PUR-QTY
                 MOVE 'Y' TO WS-MAX-NR2-POPULATED
              WHEN 'D1'
                 MOVE WS-AUTO-GAS-AVAIL         TO WS-SP14-MAX-NR1-AMT
SB1014           IF COM-USE-FMRM-SP14-QTYS NOT = 'Y'
SB1014           MOVE WS-AUTO-GAS-AVAIL-QTY-NR1 TO WS-SP14-MAX-NR1-QTY
SB1014           ELSE
SB1014           MOVE COM-RMR-MAXIMUM-GALLONS   TO WS-SP14-MAX-NR1-QTY
SB1014           END-IF
                 ADD WS-SP14-MAX-NR1-QTY        TO WS-SP14-MAX-PUR-QTY
                 MOVE 'Y' TO WS-MAX-NR1-POPULATED
              WHEN 'RF'
                 MOVE WS-AUTO-GAS-AVAIL         TO WS-SP14-MAX-REF-AMT
SB1014           IF COM-USE-FMRM-SP14-QTYS NOT = 'Y'
SB1014           MOVE WS-AUTO-GAS-AVAIL-QTY-REF TO WS-SP14-MAX-REF-QTY
SB1014           ELSE
SB1014           MOVE COM-RMR-MAX-RFR-GALLONS   TO WS-SP14-MAX-REF-QTY
SB1014           END-IF
                 ADD WS-SP14-MAX-REF-QTY        TO WS-SP14-MAX-PUR-QTY
                 MOVE 'Y' TO WS-MAX-REF-POPULATED
              WHEN 'OT'
                 MOVE WS-AUTO-GAS-AVAIL         TO WS-SP14-MAX-OTH-AMT
SB1014           IF COM-USE-FMRM-SP14-QTYS NOT = 'Y'
SB1014           MOVE WS-AUTO-GAS-AVAIL-QTY-OTH TO WS-SP14-MAX-OTH-QTY
SB1014           ELSE
SB1014           MOVE COM-RMR-MAX-OTH-GALLONS   TO WS-SP14-MAX-OTH-QTY
SB1014           END-IF
                 ADD WS-SP14-MAX-OTH-QTY        TO WS-SP14-MAX-PUR-QTY
                 MOVE 'Y' TO WS-MAX-OTH-POPULATED
           END-EVALUATE.
      *------------------------------
102810 PROCESS-CASH-OIL-ALL-PROD.
      *------------------------------
SB1115     IF WS-AUTO-GAS-AVAIL = ZEROS
SB1115        IF WS-AUTO-GAS-AVAIL-PURC NUMERIC
SB1115           IF WS-BALANCE-BASED
SB1115              IF WS-SP14-MAX-PUR-AMT > WS-AUTO-GAS-AVAIL-PURC
SB1115                 MOVE WS-AUTO-GAS-AVAIL-PURC
SB1115                   TO WS-SP14-MAX-PUR-AMT
SB1115              END-IF
SB1115           END-IF
SB1115        ELSE
SB1115           MOVE ZEROS TO WS-SP14-MAX-PUR-AMT
SB1115     ELSE
SB1115        MOVE WS-AUTO-GAS-AVAIL TO WS-SP14-MAX-PUR-AMT
SB1115     END-IF

SB1115     MOVE ZERO TO WS-PAC-SUB
SB1115     PERFORM UNTIL WS-PAC-SUB = 10
SB1115      OR WS-SP14-MAX-PROD-AMT (WS-PAC-SUB) = 99999.99
SB1115        ADD +1 TO WS-PAC-SUB
SB1115        IF WS-SP14-MAX-PROD-AMT (WS-PAC-SUB) = 99999.99
SB1115           MOVE 99999.99 TO WS-SP14-MAX-PRD-AMT
SB1115        END-IF
SB1115     END-PERFORM.

SB1115     IF WS-SP14-MAX-PUR-AMT = ZEROS
SB1115        MOVE 99999.99 TO WS-SP14-MAX-PUR-AMT
SB1115        IF WS-BALANCE-BASED
SB1115          IF WS-SP14-MAX-PUR-AMT > WS-AUTO-GAS-AVAIL-PURC
SB1115             MOVE WS-AUTO-GAS-AVAIL-PURC TO WS-SP14-MAX-PUR-AMT
SB1115          END-IF
SB1115        END-IF
SB1115     END-IF.

           MOVE WS-AUTO-GAS-AVAIL-AMT-CSH TO WS-SP14-MAX-CASH-AVAIL
           MOVE WS-AVAIL-AMT-OIL          TO WS-SP14-MAX-OIL-AMT
020711     IF COM-CONVERT-TO-SC-CURR
020711        PERFORM 21016-CONVERT-OIL
020711     END-IF
           MOVE WS-AUTO-GAS-AVAIL-QTY-OIL TO WS-SP14-MAX-OIL-QTY.
      *------------------------------
041112 RFID-ADJUSTMENT-TO-SP14.
      *------------------------------
           EVALUATE WS-UIWA-RFID-TAG-TYP(1:1)
              WHEN 'U'
                 PERFORM RFID-ADJ-TO-SP14-FOR-UNIT
              WHEN 'T'
                 PERFORM RFID-ADJ-TO-SP14-FOR-TRLR
           END-EVALUATE.
      *------------------------------
041112 RFID-ADJ-TO-SP14-FOR-UNIT.
      *------------------------------
           MOVE ZERO TO WS-SP14-MAX-CASH-AVAIL
                        WS-SP14-MAX-REF-AMT
                        WS-SP14-MAX-REF-QTY
           PERFORM
              VARYING WS-SUB1 FROM 1 BY 1
              UNTIL   WS-SUB1 > 10
                 IF WS-SP14-PUR-CATEGORY (WS-SUB1) = '20003'
                    MOVE ZERO TO WS-SP14-MAX-PROD-AMT (WS-SUB1)
                                 WS-SP14-MAX-PROD-QTY (WS-SUB1)
                 ELSE
                    IF WS-SP14-PUR-CATEGORY (WS-SUB1) NOT > SPACES
                       MOVE 11 TO WS-SUB1
                    END-IF
                 END-IF
           END-PERFORM.
      *------------------------------
041112 RFID-ADJ-TO-SP14-FOR-TRLR.
      *------------------------------
           MOVE ZERO TO WS-SP14-MAX-CASH-AVAIL
                        WS-SP14-MAX-OIL-AMT
                        WS-SP14-MAX-OIL-QTY
                        WS-SP14-MAX-NR2-AMT
                        WS-SP14-MAX-NR2-QTY
                        WS-SP14-MAX-NR1-AMT
                        WS-SP14-MAX-NR1-QTY
                        WS-SP14-MAX-OTH-AMT
                        WS-SP14-MAX-OTH-QTY
                        WS-SP14-MAX-PRD-AMT
052912     IF WS-SP14-MAX-REF-AMT < WS-SP14-MAX-PUR-AMT
              MOVE WS-SP14-MAX-REF-AMT TO WS-SP14-MAX-PUR-AMT
           END-IF
052912     IF WS-SP14-MAX-REF-QTY < WS-SP14-MAX-PUR-QTY
              MOVE WS-SP14-MAX-REF-QTY TO WS-SP14-MAX-PUR-QTY
           END-IF
           PERFORM
              VARYING WS-SUB1 FROM 1 BY 1
              UNTIL   WS-SUB1 > 10
                 IF WS-SP14-PUR-CATEGORY (WS-SUB1) NOT = '20003'
                    MOVE ZERO TO WS-SP14-MAX-PROD-AMT (WS-SUB1)
                                 WS-SP14-MAX-PROD-QTY (WS-SUB1)
                 ELSE
                    IF WS-SP14-PUR-CATEGORY (WS-SUB1) NOT > SPACES
                       MOVE 11 TO WS-SUB1
                    END-IF
                 END-IF
           END-PERFORM.

      *------------------------------
       21020-COMPUTE-MANUAL-FEE.
      *------------------------------
      **** (THE MANUAL FEE IS FOR NON SETTLEMENT LOCATIONS) ****

      **** (SEE WHICH CALL FEE IS TO BE USED) ****
           IF NOT THIS-IS-A-SETTLEMENT-ITEM AND
              NOT THIS-BE-TERMINAL-FUEL
CP0400           PERFORM 21021-CALC-NON-SET-FEE.

      **** (IF THIS IS A TEMP CODE USE THE TEMP CODE MANUAL FEE) ****
           IF COM-FP-SC-CODE > 'YA000'
              IF SCM-COUNTRY-CODE = 'C'
                 MOVE SCPM-YCODE-FEE-CAN TO WS-MANUAL-FEE
              ELSE
                 MOVE SCPM-YCODE-FEE     TO WS-MANUAL-FEE.

CP0400*------------------------------
CP0400 21021-CALC-NON-SET-FEE.
CP0400*------------------------------
CP0400     PERFORM 21022-CALC-TOTAL-FACE-SC.
           IF THIS-IS-A-POS-TRANS OR
              COM-DOWN-ENTRY-FLAG = 'Y'
                 MOVE COM-SCM-AUTO-CALL-FEE   TO WS-MANUAL-FEE
CP0400           IF SCM-AUTO-FUEL-FEE-TYPE = 'P' AND
CP0400              COM-SCM-AUTO-CALL-FEE > ZEROS
CP0700              IF WS-TOTAL-FACE-SC > ZEROS
CP0400                 COMPUTE WS-MANUAL-FEE ROUNDED =
CP0700                         WS-TOTAL-FACE-SC *
CP0400                         COM-SCM-AUTO-CALL-FEE / 100
CP0800                 COMPUTE WS-MANUAL-FEE = WS-MANUAL-FEE +
CP0800                         WS-SC-AUTO-CASH-ADD-ON
CP0400              ELSE
CP0800                 MOVE WS-SC-AUTO-CASH-ADD-ON TO WS-MANUAL-FEE
CP0400              END-IF
CP0400           END-IF
           ELSE
              MOVE COM-SCM-MANUAL-CALL-FEE TO WS-MANUAL-FEE
CP0400        IF SCM-MAN-FUEL-FEE-TYPE = 'P' AND
CP0400           COM-SCM-MANUAL-CALL-FEE > ZEROS
CP0700              IF WS-TOTAL-FACE-SC > ZEROS
CP0400                 COMPUTE WS-MANUAL-FEE ROUNDED =
CP0700                         WS-TOTAL-FACE-SC *
CP0400                         COM-SCM-MANUAL-CALL-FEE / 100
CP0800                 COMPUTE WS-MANUAL-FEE = WS-MANUAL-FEE +
CP0800                         WS-SC-MAN-CASH-ADD-ON
CP0400              ELSE
CP0800                 MOVE WS-SC-MAN-CASH-ADD-ON TO WS-MANUAL-FEE
CP0400              END-IF
CP0400        END-IF
CP0400     END-IF.

CP0700*------------------------------
CP0700 21022-CALC-TOTAL-FACE-SC.
CP0700*------------------------------
CP0700     IF WS-TOTAL-FACE-SC NOT > ZEROS
CP0700        COMPUTE WS-TOTAL-FACE-SC =
CP0700                WS-UIWA-NR2-COST-SC +
CP0700                WS-UIWA-REF-COST-SC +
CP0700                WS-UIWA-OTH-COST-SC +
CP0700                WS-UIWA-NR1-COST-SC +
CP0700                WS-UIWA-OIL-COST-SC +
CP0700                WS-UIWA-PR1-COST-SC +
CP0700                WS-UIWA-PR2-COST-SC +
CP0700                WS-UIWA-PR3-COST-SC.
CP0800     MOVE ZEROS TO WS-SC-AUTO-CASH-ADD-ON,
CP0800                   WS-SC-MAN-CASH-ADD-ON.
CP0800     IF WS-UIWA-CASH-AMT-SC > ZEROS
CP0800        PERFORM 21023-CALC-SC-CASH-ADD-ON
CP0800     END-IF.

CP0800*------------------------------
CP0800 21023-CALC-SC-CASH-ADD-ON.
CP0800*------------------------------
CP0800     IF SCM-AUTO-CASH-ADD-ON-FEE > 0
CP0800        IF SCM-AUTO-CASH-FEE-TYPE = 'P'
CP0800           COMPUTE WS-SC-AUTO-CASH-ADD-ON ROUNDED =
CP0800                   WS-UIWA-CASH-AMT-SC *
CP0800                   SCM-AUTO-CASH-ADD-ON-FEE / 100
CP0800        ELSE
CP0800           MOVE SCM-AUTO-CASH-ADD-ON-FEE TO
CP0800                WS-SC-AUTO-CASH-ADD-ON
CP0800        END-IF
CP0800     END-IF.
CP0800     IF SCM-MAN-CASH-ADD-ON-FEE > 0
CP0800        IF SCM-MAN-CASH-FEE-TYPE = 'P'
CP0800           COMPUTE WS-SC-MAN-CASH-ADD-ON ROUNDED =
CP0800                   WS-UIWA-CASH-AMT-SC *
CP0800                   SCM-MAN-CASH-ADD-ON-FEE / 100
CP0800        ELSE
CP0800           MOVE SCM-MAN-CASH-ADD-ON-FEE TO
CP0800                WS-SC-MAN-CASH-ADD-ON
CP0800        END-IF
CP0800     END-IF.

      *------------------------------
       21025-ADJUST-MANUAL-FEE.
      *------------------------------
           IF (COM-DOWN-ENTRY-FLAG = 'Y')   OR
              (INHIBIT-SETTLEMENT-REQUESTS)
              MOVE ZEROES TO WS-MANUAL-FEE.

      **** (ONLY CHARGE MANUAL FEE IF FUEL WAS PURCHASED) ****
           COMPUTE WS-TOTAL-GALLONS = WS-UIWA-NR2-QTY-SC +
                                      WS-UIWA-REF-QTY-SC +
                                      WS-UIWA-OTH-QTY-SC +
                                      WS-UIWA-NR1-QTY-SC.

SB0107     IF COM-FP-SC-CODE > 'YA000'
SB0107        CONTINUE
SB0107     ELSE
              IF WS-MANUAL-FEE    > ZEROES AND
                 WS-TOTAL-GALLONS = ZEROES
                    MOVE ZEROES TO WS-MANUAL-FEE.

           IF WS-MANUAL-FEE NOT < WS2-BILLABLE
              MOVE ZEROES TO WS-MANUAL-FEE.

      *------------------------------
       21030-SEND-MANUAL-FEE-MESSAGE.
      *------------------------------
      **** (SEE IF I NEED TO SEND OUT THE FEE MESSAGE) ****
           IF WS-MANUAL-FEE > ZEROES
              IF (COM-ADJUSTMENT-FLAG = 'S' OR 'C') OR
                 (THIS-IS-A-POS-TRANS)
                 MOVE 'C' TO COM-ADJUSTMENT-FLAG
                 CONTINUE
              ELSE
                 PERFORM 21031-SEND-MANUAL-FEE-MESSAGE.

      *------------------------------
       21031-SEND-MANUAL-FEE-MESSAGE.
      *------------------------------

DR0422     MOVE '21031-SEND-MANUAL-FEE-MESSAGE'
DR0422                                      TO CXUTS0ML-PARAGRAPH.

      **** (SEE IF ANY PREVIOUS CHARGES EXIST          ) ****
      **** (THIS IS DONE BY READING THE SETTLEMENT INFO) ****
           INITIALIZE SETTLEMENT-INFORMATION-RECORD
           INITIALIZE SIR-CONTROL-INFORMATION
           MOVE WS-UIWA-SC-CODE TO SIR-SERVICE-CENTER-CODE
           MOVE 'A'          TO SIR-RECORD-TYPE
           EXEC CICS READ
                DATASET ('SETINFO')
                INTO    (SETTLEMENT-INFORMATION-RECORD)
                RIDFLD  (SIR-KEY)
                RESP    (EIBRESP)
           END-EXEC
DR0422     MOVE SIR-KEY              TO CXUTS0ML-COMMAND
           PERFORM CHECK-FOR-NOTFND-EIBRESP
MP1011     IF SIR-CI-CYCLE-STATUS-PENDING
MP1011        MOVE 'N'               TO WS-UPDT-FLAG
MP1011        PERFORM 85011-CYCLE-SETTLEMENT
MP1011     END-IF.
           IF EIBRESP                    = DFHRESP (NOTFND) OR
              SIR-CI-PAYMENT-ITEM-NUMBER = ZEROES
              INITIALIZE SIR-GROUP-INFORMATION
           ELSE
              MOVE SIR-CI-PAYMENT-GROUP-ID    TO WS-PAYMENT-GROUP-ID
              INITIALIZE SETTLEMENT-INFORMATION-RECORD
              MOVE 'P'                        TO SIR-PALT-GROUP-TYPE
              MOVE WS-UIWA-SC-CODE            TO SIR-PALT-SC-CODE
              MOVE WS-PAYMENT-GROUP-ID        TO SIR-PALT-GROUP-ID
              MOVE ZEROES                     TO SIR-PALT-ITEM-NUMBER
              EXEC CICS READ
                   DATASET ('SETPAIX')
                   INTO    (SETTLEMENT-INFORMATION-RECORD)
                   RIDFLD  (SIR-PAYMENT-ALT-INDEX-KEY)
                   RESP    (EIBRESP)
              END-EXEC
DR0422        MOVE SIR-PAYMENT-ALT-INDEX-KEY TO CXUTS0ML-COMMAND
              PERFORM CHECK-FOR-NORMAL-EIBRESP.


      **** (FORMAT AND SEND OUT THE FEE MESSAGE) ****
           IF SIR-GI-TOTAL-AMOUNT > ZEROES
              MOVE 'SETTLEMENT HAS A PREVIOUS BALANCE.      PLEASE CORRE
      -            'CT BEFORE CONTINUING WITH THIS TRANSACTION' TO
                          OUT-COMENT
              MOVE '*' TO ERROR-FLAG
              MOVE -1 TO FPINVNRL
              PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.
           MOVE 'S' TO COM-ADJUSTMENT-FLAG.
           COMPUTE CHECK-ADJUSTMENT-AMT =
                       WS2-BILLABLE                         -
                       WS-MANUAL-FEE                        -
                       SIR-GI-TOTAL-DISCOUNT                -
                       SIR-GI-TOTAL-CHARGES.
           COMPUTE CHECK-ADJUSTMENT-FEE = WS-MANUAL-FEE.
           COMPUTE CHECK-ADJUSTMENT-OT-FEE = SIR-GI-TOTAL-DISCOUNT +
                                             SIR-GI-TOTAL-CHARGES.
           MOVE CHECK-ADJUSTMENT-MSG TO OUT-COMENT.
           MOVE -1 TO FPINVNRL.
ED0810     MOVE 'N'                  TO WS-NOTIFY-IRIS-FL
           PERFORM CHECK-FOR-EXIT-MAIN-SCREEN.

      *------------------------------
       21040-CHECK-FOR-RESTORE.
      *------------------------------
      **** (SEE IF THIS IS A RESTORE REQUEST) ****
           IF WS-THIS-BE-A-RESTORE = 'Y'
              MOVE 'RESTORE COMPLETE, VERIFY INFO AND PRESS ENTER'
                   TO FP1MSG1O, OUT-COMENT
              PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.

      *-----------------------------
       21045-CHECK-FOR-NATS-PRE-AUTH.
      *-----------------------------
           MOVE 'N' TO WS-NATS-PRE-AUTH-FLAG.
           IF COM-RMR-NATS-FLAG = 'Y'
              MOVE 'Y'            TO WS-NATS-PRE-AUTH-FLAG.

      ***** (IF THIS IS A NATS AUTH IT CAN NOT BE A PRE AUTH) ****
           IF THIS-BE-A-NATS-AUTH
              MOVE 'N' TO WS-NATS-PRE-AUTH-FLAG.

      *-----------------------------
       21047-CHECK-FOR-ATM.
      *-----------------------------
BW0211     IF TSXCO0AT-TRAN-TYPE-ASI
BW0211        PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
BW0211     END-IF.

           IF THIS-BE-AN-ATM-XTN
              PERFORM 21047-CHECK-FOR-ATM-EXIT.

      *-----------------------------
       21047-CHECK-FOR-ATM-EXIT.
      *-----------------------------
      **** (IF ERROR WAS FOUND AND THIS IS A REVERSAL THEN IGNORE ERROR)
      **** (THIS IS DONE BECAUSE THE CARD HOLDER HAS RECEIVED CASH     )
           IF WS-HOLD-POS-ERROR-NUMBER > ZEROES AND
              TSXCO0AT-REVERSAL-XTN    = 'Y'
              MOVE ZEROES TO WS-HOLD-POS-ERROR-NUMBER
              MOVE SPACES TO WS-HOLD-POS-ERROR-MSG.

      **** (IF ERROR WAS FOUND AND THIS IS A STAND-IN THEN IGNORE ERROR)
      **** (THIS IS DONE BECAUSE THE CARD HOLDER HAS RECEIVED CASH     )
JS0703     IF WS-HOLD-POS-ERROR-NUMBER > ZEROES AND
MP0903        (TSXCO0AT-TRAN-TYPE-PURC-SI-F OR
MP0903         TSXCO0AT-TRAN-TYPE-WITH-SI-F)
JS0703        MOVE ZEROES TO WS-HOLD-POS-ERROR-NUMBER
JS0703        MOVE SPACES TO WS-HOLD-POS-ERROR-MSG.

      **** (IF THIS IS AN INQUIRY, ERROR #77 INDICATES A ZERO BALANCE) *
           IF TSXCO0AT-TRAN-TYPE-INQUIRY AND
              WS-HOLD-POS-ERROR-NUMBER = +77
              MOVE ZEROES TO WS-HOLD-POS-ERROR-NUMBER
              MOVE SPACES TO WS-HOLD-POS-ERROR-MSG.

      **** (IF AN ERROR OCCURED OR THIS IS AN INQUIRY XTN) ****
      **** (ZERO OUT THE CASH AMOUNTS                    ) ****
           IF TSXCO0AT-TRAN-TYPE-INQUIRY OR
              WS-HOLD-POS-ERROR-NUMBER > ZEROES
              MOVE ZEROES TO WS-UIWA-CASH-AMT
                             WS-UIWA-CASH-AMT-SC
                             WS-UIWA-CASH-AMT-US
                             WS-BILLABLE
                             WS2-BILLABLE
                             WS3-BILLABLE
                             ODR-ORDER-AMT IN ORDRFIL-DETAIL-RECD
                             WS-CURXMN
                             WS2-CURXMN
                             WS3-CURXMN
                             WS-TOTAL-REQUEST
                             WS2-TOTAL-REQUEST
                             WS3-TOTAL-REQUEST
                             OUT-NETXMN
           END-IF.
           IF WS-HOLD-POS-ERROR-NUMBER > ZEROES
              MOVE ZEROES          TO WS-BASE-FUEL-RATE
                                      WS-MIXED-FUEL-RATE
MP0800        IF TSXCO0AT-TRAN-TYPE-PURCHASE OR
MP0800           TSXCO0AT-TRAN-TYPE-P-SAV-CR
ED0606           IF TSXCO0AT-IN-NETW-PURC
ED0606              CONTINUE
ED0606           ELSE
MP0898              MOVE CDN-MAESTRO-DECL-FEE
MP0898                             TO WS-BASE-ADVANCE-RATE
MP0898                                WS-MIXED-ADVANCE-RATE
ED0606           END-IF
MP0898        ELSE
ED0606           IF TSXCO0AT-IN-NETW-CASH-OUT
ED0606              CONTINUE
ED0606           ELSE
MP0898              MOVE CDN-ATM-DEC-FEE
MP0898                             TO WS-BASE-ADVANCE-RATE
MP0898                                WS-MIXED-ADVANCE-RATE
ED0606           END-IF
MP0898        END-IF
              PERFORM 209XX-COMPLETE-FEE-PROCESS
              PERFORM 20960-CHECK-DEDUCT-FEE
           END-IF.

SB0315*------------------------------
SB0315 21048-CHECK-FOR-FUELUP.
SB0315*------------------------------
SB0315     SET FUELUP-YES TO TRUE.
SB0315     MOVE ZEROS TO FUELUP-CASH-PRICE.
SB0315
MB0715     IF WS-SETUP-XCPRODC-DONE NOT = 'Y'
MB0715        PERFORM SETUP-XCPRODC-AND-DT-TM
MB0715     END-IF.
MB0715     IF XCP-FUEL-DAYS-SINCE-LAST-UPDT NOT NUMERIC
MB0715        MOVE 2 TO XCP-FUEL-DAYS-SINCE-LAST-UPDT
MB0715     END-IF.

SB0315     IF COM-CO-IS-CANADIAN  OR
SB0315        COM-SC-IS-CANADIAN  OR
SB0415        WS-BALANCE-BASED    OR
MB0715*       WS-CALC-DAYS > 2
MB0715        WS-CALC-DAYS > XCP-FUEL-DAYS-SINCE-LAST-UPDT
SB0315        SET FUELUP-NO TO TRUE
SB0315     END-IF
SB0315
SB0315     IF FUELUP-YES
SB0315        IF WS-UIWA-SERVICE-TYPE = 'F'
SB0315           IF SCM-HAS-FULL-SERV-CASH
SB0315              MOVE SCM-FULL-SERV-CASH-PRICE TO FUELUP-CASH-PRICE
SB0315           END-IF
SB0315        END-IF
SB0315        IF WS-UIWA-SERVICE-TYPE = 'S'
SB0315           IF SCM-HAS-SELF-SERV-CASH
SB0315              MOVE SCM-SELF-SERV-CASH-PRICE TO FUELUP-CASH-PRICE
SB0315           END-IF
SB0315        END-IF
SB0315        IF WS-UIWA-SERVICE-TYPE = 'M'
SB0315           IF SCM-HAS-MINI-SERV-CASH
SB0315              MOVE SCM-MINI-SERV-CASH-PRICE TO FUELUP-CASH-PRICE
SB0315           END-IF
SB0315        END-IF
SB0315        IF FUELUP-CASH-PRICE NOT > ZERO
SB0315           SET FUELUP-NO TO TRUE
SB0315        END-IF
SB0315     END-IF
SB0315
SB0315     IF FUELUP-YES
SB0315        IF WS-UIWA-NR2-QTY-SC > ZERO
SB0315           IF FUELUP-CASH-PRICE NOT < WS-UIWA-NR2-PPU-SC
SB0315              SET FUELUP-NO TO TRUE
SB0315           END-IF
SB0315        ELSE
SB0315           SET FUELUP-NO TO TRUE
SB0315        END-IF
SB0315     END-IF
SB0315
SB0315** WS-DC-FEE-AMT-FUEL IS SCMM FEE AMOUNT
SB0315** WS-DC-FEE-AMT-RETAIN IS FMRM 04 RETAINED AMOUNT
SB0315     IF FUELUP-YES
SB0315        SUBTRACT FUELUP-CASH-PRICE FROM WS-UIWA-NR2-PPU-SC
SB0315           GIVING FUELUP-PRICE-DIFF ROUNDED
SB0315        ADD WS-DC-FEE-AMT-FUEL, WS-DC-FEE-AMT-RETAIN
SB0315           GIVING FUELUP-RETAIN-FEE
SB0315        IF FUELUP-PRICE-DIFF > FUELUP-RETAIN-FEE
SB0315           SET FUELUP-NO TO TRUE
SB0315        END-IF
SB0315     END-IF.

      *------------------------------
       21050-BUILD-ORDRFIL.
      *------------------------------
           MOVE 'D' TO ODR-RECD-ID IN ORDRFIL-DETAIL-RECD.
           MOVE WS-UIWA-DRV-NAME TO ODR-NAME IN ORDRFIL-DETAIL-RECD,
                                ODR-NAME-SEARCH IN ORDRFIL-DETAIL-RECD,
                                WS-HOLD-ODR-NAME.

CP0807     MOVE CUST-RGE-SMLNM      TO ODR-SMALL-NAME IN
                                       ORDRFIL-DETAIL-RECD
           MOVE SYS-TIMIN           TO ODR-TIME-IN    IN
                                       ORDRFIL-DETAIL-RECD,
                                       I-TIMIN
           MOVE WS-UIWA-SC-CODE     TO ODR-SRVC-CENTER IN
                                       ORDRFIL-DETAIL-RECD

           MOVE 'P'                 TO ODR-PLUS-LESS IN
                                       ORDRFIL-DETAIL-RECD
           MOVE WS-ID-NR            TO ODR-FP-CARD-NR IN
                                       ORDRFIL-DETAIL-RECD
           MOVE FPNAMEI             TO ODR-NAME IN
                                          ORDRFIL-DETAIL-RECD
                                       ODR-NAME-SEARCH IN
                                          ORDRFIL-DETAIL-RECD
                                       WS-HOLD-ODR-NAME.
           MOVE 0                   TO ODR-FP-NR-RECDS IN
                                       ORDRFIL-DETAIL-RECD
                                       ODR-FP-1ST-RRN  IN
                                       ORDRFIL-DETAIL-RECD
                                       ODR-RMT-RRN     IN
                                       ORDRFIL-DETAIL-RECD
                                       ODR-FMLOG-RRN   IN
                                       ORDRFIL-DETAIL-RECD
CP0807     MOVE WS-FP-ACCT-CODE TO ODR-ACCT-CODE IN ORDRFIL-DETAIL-RECD.
           MOVE CICS-PRIOR-DAY-JULIAN-DATE-OL
             TO ODR-DATE IN ORDRFIL-DETAIL-RECD.
           COMPUTE ODR-TIME IN ORDRFIL-DETAIL-RECD = EIBTIME / 100.
           MOVE EIBTRMID TO ODR-FULL-TERM IN ORDRFIL-DETAIL-RECD.
           MOVE 'FP'     TO  ODR-TRANS-ID IN ORDRFIL-DETAIL-RECD.
           MOVE 0        TO  ODR-DISC-AMT IN ORDRFIL-DETAIL-RECD.
CP0807     MOVE 'P'             TO ODR-SYS-BYTE IN
                                   ORDRFIL-DETAIL-RECD (2).
           MOVE 'Y'             TO ODR-SKIP-AR-FLAG IN
                                   ORDRFIL-DETAIL-RECD.
           MOVE WS2-BILLABLE   TO ODR-DRAFT-AMT
                               IN ORDRFIL-DETAIL-RECD.
           MOVE WS-TOTAL-PRCNTAGE TO WS-CDN-DISC.
           PERFORM BLD-0010.
           MOVE WS-TOTAL-PRCNTAGE TO WS-DISC.
           SUBTRACT WS-CDN-PRCNTAGE FROM WS-DISC.
           MULTIPLY WS-DISC-R1 BY INP-TOTAL-COST
             GIVING WS-DISC-AMT-SAVE ROUNDED.

           PERFORM 21050-BUILD-ORDRFIL-RATE.
           PERFORM 21050-BUILD-ORDRFIL-SETTLE.
           PERFORM 21050-BUILD-ORDRFIL-PRINTER.
           PERFORM 21050-BUILD-ORDRFIL-STATUS.
           PERFORM 21050-BUILD-ORDRFIL-TIMEOUT.
           PERFORM 21050-BUILD-ORDRFIL-HUB.
           PERFORM 21050-BUILD-ORDRFIL-POS.
           PERFORM 21050-BUILD-ORDRFIL-CREDIT.
           PERFORM 21050-BUILD-ORDRFIL-TERM-FUEL.
           PERFORM 21050-BUILD-ORDRFIL-DB.
           PERFORM 21050-BUILD-ORDRFIL-PREMIER.
           PERFORM 21050-BUILD-ORDRFIL-CUSTID.
           PERFORM 21050-BUILD-ORDRFIL-COUNTRY.
           PERFORM 21050-BUILD-ORDRFIL-CASH-ONLY.
           PERFORM 21050-BUILD-ORDRFIL-GUAR-DISC.

           PERFORM GET-CNTL-NR-CREATE-ORDER-RECD.
           IF WS-NATS-PRE-AUTH-FLAG NOT = 'Y'
              PERFORM UPDATE-ORDRPTR-INFO
CP1011        PERFORM LOG-TRNS-HIST.

      *------------------------------
       21050-BUILD-ORDRFIL-RATE.
      *------------------------------
           IF COM-ACCT-IS-BASE-CURRENCY
              MOVE WS-TOTAL-RATE  TO ODR-XMIT-RATE
                                     IN ORDRFIL-DETAIL-RECD
           ELSE
              MOVE WS-TOTAL-RATE2 TO ODR-XMIT-RATE
                                     IN ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-SETTLE.
      *------------------------------
           IF THIS-IS-A-SETTLEMENT-ITEM OR
              WS-MANUAL-FEE > ZEROES
              MOVE 'D' TO ODR-PRCS-FLAG IN ORDRFIL-DETAIL-RECD
              MOVE 'S' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (4)
           ELSE
              MOVE 'F' TO ODR-PRCS-FLAG IN ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-PRINTER.
      *------------------------------
           IF FPAUTOI IS EQUAL TO 'Y'
             MOVE COM-FP-PRNT-FLAG
               TO ODR-PRINTER-FLAG IN ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-STATUS.
      *------------------------------
           MOVE SPACES TO ODR-STATUS IN ORDRFIL-DETAIL-RECD.
           IF FPAUTOI IS EQUAL TO 'N'
             MOVE '2' TO ODR-STATUS IN ORDRFIL-DETAIL-RECD.

           IF (THIS-BE-TERMINAL-FUEL                   ) OR
              (THIS-IS-A-SETTLEMENT-ITEM               ) OR
              (WS-MANUAL-FEE > ZEROES                  ) OR
              (WS3-BILLABLE  = ZEROES                  ) OR
CP0807        (WS-FP-ACCT-CODE IS EQUAL TO 'CD006'        )
              MOVE '2' TO ODR-STATUS IN ORDRFIL-DETAIL-RECD
              MOVE SPACES TO ODR-CREDIT-STATUS IN ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-TIMEOUT.
      *------------------------------
           IF ODR-IS-SENT IN ORDRFIL-DETAIL-RECD
              MOVE SYS-TIMIN TO ODR-TIME-OUT  IN ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-HUB.
      *------------------------------
      **** (SINCE THE HUB INFORMATION IS IN THE FMLOG RECORD) ****
      **** (IT WAS NO LONGER NEEDED IN THE ORDER FILE       ) ****
      **** (THIS AREA WAS CHANGED TO BE THE CONVERSION RATES) ****
      *    MOVE FP-LAST-HUB-READING TO ODR-PREV-HUB-READING IN
      *                                ORDRFIL-DETAIL-RECD.
      *    MOVE ZEROES        TO ODR-CUR-HUB-READING
      *                       IN ORDRFIL-DETAIL-RECD.
      *    IF TRACTOR-PURCHASE = 1
      *       MOVE WS-UIWA-HUB TO ODR-CUR-HUB-READING
      *                          IN ORDRFIL-DETAIL-RECD.

      **** (PLEASE NOTE SPECIAL HANDLING OF TRI-STATE MOTORS) ****
CP0698     IF (COM-FP-CO-CODE   = '00109' OR '00115' OR '00238') OR
CP0807        (WS-FP-ACCT-CODE = 'TR440' OR 'TR355' OR
CP0807                           'SC071' OR 'LE041')
              MOVE FPHUBI TO ODR-FP-UNIT-NR IN ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-POS.
      *------------------------------
           IF THIS-BE-A-PC-REQUEST
              MOVE 'P' TO ODR-POS-FLAG IN ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-CREDIT.
      *------------------------------
           IF ODR-IS-CREDIT-PROBLEM IN ORDRFIL-DETAIL-RECD
              MOVE '*' TO ODR-ORDER-PROB-FLAG IN ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-TERM-FUEL.
      *------------------------------
           IF THIS-BE-TERMINAL-FUEL
              IF THIS-BE-AN-UNATTENDED-AUTH
102810          OR FORCE-POST-FROM-PRE-AUTH
                 MOVE 'A' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (1)
              ELSE
                 MOVE 'T' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (1).

           IF COM-THIS-IS-A-TERM-FUEL-XTN
              MOVE ZEROES TO ODR-DRAFT-AMT IN ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-DB.
      *------------------------------
           IF MNX-TRANSACTION
             OR WS-NON-BILLABLE IS GREATER THAN 0
             MOVE 'D' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (1).

      *------------------------------
       21050-BUILD-ORDRFIL-PREMIER.
      *------------------------------
           MOVE COM-PREMIER-CARD TO ODR-PREMIER-CARD IN
                                    ORDRFIL-DETAIL-RECD
JS1199     PERFORM DETERMINE-IF-BALANCE-BASED
JS1199     IF WS-BALANCE-BASED
              MOVE 'E' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (3)
           ELSE
              MOVE 'P' TO ODR-SYS-BYTE IN ORDRFIL-DETAIL-RECD (3).

      *------------------------------
       21050-BUILD-ORDRFIL-CUSTID.
      *------------------------------
JS1203     MOVE COM-FP-CO-CODE TO INP-CO-CODE
JS1203                            ODR-FUEL-CODE   IN
JS1203                            ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-COUNTRY.
      *------------------------------
      **** (DETERMINE THE COUNTRY CODES) ****
           EVALUATE TRUE
              WHEN COM-ACCT-IS-BASE-CURRENCY
                 IF COM-CO-IS-CANADIAN
                    MOVE 'C' TO ODR-CO-COUNTRY IN ORDRFIL-DETAIL-RECD
                 END-IF
                 IF COM-CO-IS-US
                    MOVE 'U' TO ODR-CO-COUNTRY IN ORDRFIL-DETAIL-RECD
                 END-IF
              WHEN OTHER
                 IF COM-SC-IS-CANADIAN
                    MOVE 'C' TO ODR-CO-COUNTRY IN ORDRFIL-DETAIL-RECD
                 END-IF
                 IF COM-SC-IS-US
                    MOVE 'U' TO ODR-CO-COUNTRY IN ORDRFIL-DETAIL-RECD
                 END-IF
           END-EVALUATE.
           MOVE 'U' TO ODR-SC-COUNTRY IN ORDRFIL-DETAIL-RECD.
           IF COM-SC-IS-CANADIAN
              MOVE 'C' TO ODR-SC-COUNTRY IN ORDRFIL-DETAIL-RECD.

           MOVE 'U' TO ODR-DRAFT-TYPE IN ORDRFIL-DETAIL-RECD
           IF WS-CANADIAN-CHK-FLAG = 'Y'
              MOVE 'C' TO ODR-DRAFT-TYPE IN ORDRFIL-DETAIL-RECD.
           IF COM-SC-IS-CANADIAN
              MOVE 'C' TO ODR-DRAFT-TYPE IN ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-CASH-ONLY.
      *------------------------------
      **** (SET UP THE CASH ONLY FLAG) ****
           MOVE ' ' TO ODR-FP-XTN-TYPE IN ORDRFIL-DETAIL-RECD.
           IF PGRM-FUNCTION-CASH-ONLY
              MOVE 'C' TO ODR-FP-XTN-TYPE IN ORDRFIL-DETAIL-RECD.

      *------------------------------
       21050-BUILD-ORDRFIL-GUAR-DISC.
      *------------------------------
      **** (CHECK FOR GUAR DISC AND ADJUST RATE IF NEEDED) ****
      *****IF (CDN-GUAR-YN = 'Y') AND
082008     IF (WS-CDN-GUAR-YN = 'Y') AND
              (CDN-GUAR-START-DATE NOT > PD-YYDDD)
              COMPUTE ODR-XMIT-RATE IN ORDRFIL-DETAIL-RECD =
                      ODR-XMIT-RATE IN ORDRFIL-DETAIL-RECD -
                      CDN-GUAR-DISC.

      *------------------------------
       GET-CNTL-NR-CREATE-ORDER-RECD.
      *------------------------------
DR0422     MOVE 'GET-CNTL-NR-CREATE-ORDER-RECD' TO CXUTS0ML-PARAGRAPH.
082008     IF WS-LARGE-TRANS-SPLITS
082008        PERFORM FP-0175-LTI-B
           ELSE
              MOVE 'N' TO WS-LOOP-FLAG
              PERFORM FP-0175
                UNTIL WS-LOOP-FLAG = 'Y'
           END-IF
           IF ODR-NAME-LINK IN DUP-ORDRFIL-RECD IS NUMERIC
             MOVE ODR-NAME-LINK IN DUP-ORDRFIL-RECD
               TO ODR-NAME-LINK IN ORDRFIL-DETAIL-RECD
           ELSE
             MOVE 0 TO ODR-NAME-LINK IN ORDRFIL-DETAIL-RECD.
           MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
             TO ODR-ORIG-CTL-NR IN ORDRFIL-DETAIL-RECD,
082008          OUT-CTL-NR.
082008     IF NOT WS-LARGE-TRANS-SPLITS
082008        MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
082008          TO I-CTL-NR
082008     END-IF
           MOVE WS-SAVE-POS-SUB-ID     TO  ODR-SRVC-CNTR-SUB-ID
                                       IN ORDRFIL-DETAIL-RECD.
           IF WS-NATS-PRE-AUTH-FLAG = 'Y'
              EXEC CICS UNLOCK
                   DATASET ('ORDRFIL')
                   RESP    (EIBRESP)
              END-EXEC
           ELSE
              EXEC CICS REWRITE
                   DATASET ('ORDRFIL')
                   FROM    (ORDRFIL-DETAIL-RECD)
                   RESP    (EIBRESP)
              END-EXEC
              PERFORM CHECK-FOR-NORMAL-EIBRESP.
           MOVE ORDRFIL-DETAIL-RECD TO DUP-ORDRFIL-RECD, COM-FP-ORDRFIL.
           MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD TO DUP-CONTROL-NR.
           ADD ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD, 2276
             GIVING OUT-CK-AUTH-NR.

      *----------------------------
       FP-0175.
      *----------------------------
DR0422     MOVE 'FP-0175'                   TO CXUTS0ML-PARAGRAPH.
           IF WS-UIWA-NATS-CTL-NR NOT NUMERIC
              MOVE ZEROES TO WS-UIWA-NATS-CTL-NR.
           IF THIS-BE-A-NATS-AUTH AND
              WS-UIWA-NATS-CTL-NR > ZEROES
CP1011        MOVE WS-UIWA-NATS-CTL-NR TO CNRRA-1ST-CTRL-NR
              MOVE ZEROES              TO WS-UIWA-NATS-CTL-NR
           ELSE
CP1011        SET CNRIA-RN-REQUEST      TO TRUE
CP1011        MOVE 1                    TO CNRIA-QTY-REQUESTED
CP1011        CALL WS-CXUTS400 USING DFHEIBLK,
CP1011                               DFHCOMMAREA,
CP1011                               CXUTW400-PARMS
CP1011        PERFORM CHECK-FOR-NORMAL-EIBRESP
CP1011        IF CNRRA-RC-MAX-CTL-USED
CP1011           MOVE CTL-NR-MAX TO OUT-COMENT
CP1011           MOVE CTL-NR-MAX-N TO POS-ERROR-NUMBER
CP1011           MOVE -1 TO FPINVNRL
CP1011           PERFORM EXIT-FUEL-PGM-MAIN-SCREEN
CP1011        END-IF
CP1011     END-IF.
CP1011     MOVE CNRRA-1ST-CTRL-NR TO
                               ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD,
                               WS-CONTROL-NR.
           COMPUTE WS-CTR1 = ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD + 1
           MOVE WS-CTR1 TO ORDRFIL-RRN.
           EXEC CICS READ
                DATASET ('ORDRFIL')
                INTO    (DUP-ORDRFIL-RECD)
                RIDFLD  (ORDRFIL-RRN) RRN
                UPDATE
                RESP    (EIBRESP)
           END-EXEC.
DR0422     MOVE ORDRFIL-RRN       TO WS-NUM-7.
DR0422     MOVE WS-NUM-7          TO CXUTS0ML-COMMAND.
           PERFORM CHECK-FOR-NOTFND-EIBRESP.
           IF EIBRESP = DFHRESP(NOTFND)
              EXEC CICS UNLOCK
                   DATASET ('ORDRFIL')
                   RESP    (EIBRESP)
              END-EXEC
           ELSE
              IF ODR-VALID-DETAIL-RECD IN DUP-ORDRFIL-RECD
                  EXEC CICS UNLOCK
                       DATASET ('ORDRFIL')
                       RESP    (EIBRESP)
                  END-EXEC
           ELSE
              MOVE 'Y' TO WS-LOOP-FLAG.

      *----------------------------
082008 FP-0175-LTI-B.
      *----------------------------
DR0422     MOVE 'FP-0175-LTI-B'             TO CXUTS0ML-PARAGRAPH.

           IF LTI-FIRST-PASS
CP1011        MOVE WS-CONTROL-NR TO CNRRA-1ST-CTRL-NR
           ELSE
CP1011        ADD 1              TO CNRRA-1ST-CTRL-NR
           END-IF
           IF COM-ACCT-IS-BASE-CURRENCY
              MOVE WS-CURXMN  TO ODR-ORDER-AMT IN ORDRFIL-DETAIL-RECD
           ELSE
              MOVE WS2-CURXMN TO ODR-ORDER-AMT IN ORDRFIL-DETAIL-RECD
           END-IF
      ***** THE REST OF THIS COPIED FROM PARAGRAPH FP-0175
CP1011     MOVE CNRRA-1ST-CTRL-NR TO
                               ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
                               WS-CONTROL-NR
           COMPUTE WS-CTR1 = ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD + 1
           MOVE WS-CTR1 TO ORDRFIL-RRN
           EXEC CICS READ
                DATASET ('ORDRFIL')
                INTO    (DUP-ORDRFIL-RECD)
                RIDFLD  (ORDRFIL-RRN) RRN
                UPDATE
                RESP    (EIBRESP)
           END-EXEC
DR0422     MOVE ORDRFIL-RRN                 TO WS-NUM-7.
DR0422     MOVE WS-NUM-7                    TO CXUTS0ML-COMMAND.
           PERFORM CHECK-FOR-NOTFND-EIBRESP.

      *---------------------------------
       UPDATE-ORDRPTR-INFO.
      *---------------------------------
DR0422     MOVE 'UPDATE-ORDRPTR-INFO'       TO CXUTS0ML-PARAGRAPH.
      *  DO LETTER LINKAGE
           EXEC CICS READ
                DATASET ('ORDRPTR')
                INTO    (ORDRPTR-RECD)
                RIDFLD  (ORDRPTR-RRN) RRN
                UPDATE
                RESP    (EIBRESP)
           END-EXEC.
DR0422     MOVE ORDRPTR-RRN                 TO WS-NUM-7.
DR0422     MOVE WS-NUM-7                    TO CXUTS0ML-COMMAND.

           PERFORM CHECK-FOR-NORMAL-EIBRESP.
           IF OPT-LAST-RRN IS NUMERIC
             MOVE OPT-LAST-RRN TO SAVE-RRN
           ELSE
              MOVE 0 TO SAVE-RRN
              MOVE WS-CTR1 TO OPT-1ST-RRN.
           MOVE WS-CTR1 TO OPT-LAST-RRN.
           EXEC CICS REWRITE
                DATASET ('ORDRPTR')
                FROM    (ORDRPTR-RECD)
                RESP    (EIBRESP)
           END-EXEC.
           PERFORM CHECK-FOR-NORMAL-EIBRESP.
           IF SAVE-RRN > ZEROES
              MOVE SAVE-RRN TO ORDRFIL-RRN
              EXEC CICS READ
                   DATASET ('ORDRFIL')
                   INTO    (DUP-ORDRFIL-RECD)
                   RIDFLD  (ORDRFIL-RRN) RRN
                   UPDATE
                   RESP    (EIBRESP)
              END-EXEC
DR0422        MOVE ORDRFIL-RRN              TO WS-NUM-7
DR0422        MOVE WS-NUM-7                 TO CXUTS0ML-COMMAND
              PERFORM CHECK-FOR-NOTFND-EIBRESP
              IF EIBRESP = DFHRESP(NORMAL)
                 MOVE WS-CTR1 TO ODR-NAME-LINK IN DUP-ORDRFIL-RECD
                 MOVE WS-SAVE-POS-SUB-ID     TO  ODR-SRVC-CNTR-SUB-ID
                                              IN DUP-ORDRFIL-RECD
              EXEC CICS REWRITE
                   FROM    (DUP-ORDRFIL-RECD)
                   DATASET ('ORDRFIL')
                   RESP    (EIBRESP)
              END-EXEC
              PERFORM CHECK-FOR-NORMAL-EIBRESP.

      *------------------------------
       21055-CHECK-FOR-NATS-EXIT.
      *------------------------------
           IF WS-NATS-PRE-AUTH-FLAG = 'Y'
              PERFORM 21055-CHECK-FOR-DUP
              PERFORM 21055-START-NATS-SEND
              PERFORM 21195-SETUP-CHECK-ENTRY-AREA
              PERFORM 21260-CHECK-SETTLE-EXIT.

      *------------------------------
       21055-CHECK-FOR-DUP.
      *------------------------------
DR0422     MOVE '21055-CHECK-FOR-DUP'       TO CXUTS0ML-PARAGRAPH.
JS1201     MOVE SPACES TO NATS-RECORD.
           INITIALIZE NATS-RECORD
           PERFORM 21055-BUILD-NATS-KEY.
           PERFORM WITH TEST AFTER
              UNTIL NATS-AI-CARD-NR  NOT = WS-PRM-CARD-NUM OR
                    NATS-AI-LOCATION NOT = WS-TSCODE-COMP  OR
                    NATS-AI-STATUS   NOT = 'A'             OR
                    EIBRESP          NOT = DFHRESP(NORMAL)
              EXEC CICS READ
                   DATASET ('NATSAIX')
                   INTO    (NATS-RECORD)
                   RIDFLD  (NATS-ALT-INDX)
                   GTEQ
                   RESP    (EIBRESP)
               END-EXEC
MP0599        IF EIBRESP = DFHRESP (NOTOPEN)
MP0599           EXEC CICS READ
MP0599                DATASET ('NATHAIX')
MP0599                INTO    (NATS-RECORD)
MP0599                RIDFLD  (NATS-ALT-INDX)
MP0599                GTEQ
MP0599                RESP    (EIBRESP)
MP0599           END-EXEC
MP0599        END-IF
DR0422         MOVE NATS-ALT-INDX           TO CXUTS0ML-COMMAND
               PERFORM CHECK-FOR-NOTFND-EIBRESP
               IF EIBRESP          = DFHRESP(NORMAL)
                  PERFORM 21055-NUM-CHECKS
                  PERFORM 21055-NUM-CHECKS2
                  IF NATS-AI-CARD-NR  = WS-PRM-CARD-NUM AND
                      NATS-AI-LOCATION = WS-TSCODE-COMP  AND
                      NATS-AI-STATUS   = 'A'
                      PERFORM 21055-CHECK-POSSIBLE-DUP
                      COMPUTE NATS-TN-SEQ-NR = NATS-TN-SEQ-NR + 1
                      MOVE NATS-TRACKING-NUMBER TO NATS-AI-TRACKING-NR
                  END-IF
               END-IF
           END-PERFORM.

      *------------------------------
       21055-NUM-CHECKS.
      *------------------------------
           IF NATS-AI-CARD-NR NOT NUMERIC
              MOVE ZEROS          TO NATS-AI-CARD-NR.
           IF WS-AXIA-NR2-COST NOT NUMERIC
              MOVE ZEROS          TO WS-AXIA-NR2-COST.
           IF WS-AXIA-REF-COST NOT NUMERIC
              MOVE ZEROS          TO WS-AXIA-REF-COST.
           IF WS-AXIA-NR1-COST NOT NUMERIC
              MOVE ZEROS          TO WS-AXIA-NR1-COST.
           IF WS-AXIA-OTH-COST NOT NUMERIC
              MOVE ZEROS          TO WS-AXIA-OTH-COST.
           IF WS-AXIA-OIL-COST NOT NUMERIC
              MOVE ZEROS          TO WS-AXIA-OIL-COST.

      *------------------------------
       21055-NUM-CHECKS2.
      *------------------------------
           IF WS-AXIA-PR1-COST NOT NUMERIC
              MOVE ZEROS          TO WS-AXIA-PR1-COST.
           IF WS-AXIA-PR2-COST NOT NUMERIC
              MOVE ZEROS          TO WS-AXIA-PR2-COST.
           IF WS-AXIA-PR3-COST NOT NUMERIC
              MOVE ZEROS          TO WS-AXIA-PR3-COST.
           IF WS-AXIA-CASH-AMT NOT NUMERIC
              MOVE ZEROS          TO WS-AXIA-CASH-AMT.
           IF WS-AXIA-TAX-AMT NOT NUMERIC
              MOVE ZEROS          TO WS-AXIA-TAX-AMT.

      *------------------------------
       21055-CHECK-POSSIBLE-DUP.
      *------------------------------
           IF WS-AXIA-INVOICE-NR   = WS-UIWA-INVOICE-NR  AND
              (WS-AXIA-NR2-COST       +
               WS-AXIA-REF-COST       +
               WS-AXIA-NR1-COST       +
               WS-AXIA-OTH-COST       +
               WS-AXIA-OIL-COST       +
               WS-AXIA-PR1-COST       +
               WS-AXIA-PR2-COST       +
               WS-AXIA-PR3-COST       +
               WS-AXIA-CASH-AMT       +
               WS-AXIA-TAX-AMT) =
              (WS-UIWA-NR2-COST-SC    +
               WS-UIWA-REF-COST-SC    +
               WS-UIWA-OIL-COST-SC    +
               WS-UIWA-CASH-AMT-SC    +
               WS-UIWA-OTH-COST-SC    +
               WS-UIWA-PR1-COST-SC    +
               WS-UIWA-PR2-COST-SC    +
               WS-UIWA-PR3-COST-SC    +
               WS-UIWA-NR1-COST-SC    +
               WS-UIWA-TAX-AMT-SC)
              IF EIBAID NOT = DFHPF3
                 MOVE DUPLICATE-NATS-PRE-AUTH   TO OUT-COMENT
                 MOVE DUPLICATE-NATS-PRE-AUTH-N TO POS-ERROR-NUMBER
                 MOVE 'Y'                       TO VCWS-ERROR-IND
                 MOVE -1                        TO FPINVNRL
                 PERFORM EXIT-FUEL-PGM-MAIN-SCREEN.

      *------------------------------
       21055-START-NATS-SEND.
      *------------------------------
           INITIALIZE NATS-RECORD
           PERFORM 21055-BUILD-NATS-KEY
           PERFORM 21055-BUILD-NATS-DETAIL
           PERFORM 21055-BUILD-NATS-REQUEST1
           PERFORM 21055-BUILD-NATS-REQUEST-SWIPE.
           PERFORM 21055-BUILD-NATS-REQUEST-NR2.
           PERFORM 21055-BUILD-NATS-REQUEST-TR.
           PERFORM 21055-BUILD-NATS-REQUEST-OTH.
           PERFORM 21055-BUILD-NATS-REQUEST-NR1.
           PERFORM 21055-BUILD-NATS-REQUEST-OIL.
           PERFORM 21055-BUILD-NATS-REQUEST-CASH.
           PERFORM 21055-BUILD-NATS-REQUEST-PROD.
           PERFORM 21055-BUILD-NATS-REQUEST-TOTS.
           PERFORM 21055-BUILD-NATS-POS-AREA.
           PERFORM 21055-START-NATS-SEND-PGM.

      *------------------------------
       21055-BUILD-NATS-KEY.
      *------------------------------
           MOVE '0'                        TO NATS-RECORD-TYPE
JS2000     MOVE WS-CURRENT-DATE-YYDDD      TO NATS-TN-DATE.
           MOVE COM-PREMIER-CARD           TO WS-PRM-CARD-NR
           MOVE PRM-CHECK-DIGIT            TO WS-PRM-CARD-CKD
           MOVE WS-PRM-CARD-NUM            TO NATS-AI-CARD-NR
           IF SCM-MASTER-SVC-CTR-CODE > SPACES
              MOVE SCM-MASTER-SVC-CTR-CODE TO NATS-AI-LOCATION,
                                              WS-TSCODE-COMP
           ELSE
              MOVE COM-FP-SC-CODE         TO NATS-AI-LOCATION,
                                              WS-TSCODE-COMP.
           MOVE 'A'                       TO NATS-STATUS,
                                             NATS-AI-STATUS.

      *------------------------------
       21055-BUILD-NATS-DETAIL.
      *------------------------------
           MOVE '0'                       TO NATS-ERROR-TYPE
           MOVE CDN-CUST-ACCT-CODE        TO NATS-ACCOUNT-CODE.

      *------------------------------
       21055-BUILD-NATS-REQUEST1.
      *------------------------------
           MOVE SCM-NATS-ACCT-CODE        TO NATS-NRF-NATS-LOCATION
           IF SCM-MASTER-SVC-CTR-CODE > SPACES
              MOVE SCM-MASTER-SVC-CTR-CODE TO NATS-NRF-CDN-LOCATION
           ELSE
              MOVE COM-FP-SC-CODE         TO NATS-NRF-CDN-LOCATION.
           MOVE CDN-UNOCAL-NUMBER         TO NATS-NRF-NATS-ACCOUNT
      ***  MOVE NATS-CDN-CUST-ID          TO NATS-NRF-CDN-CUST-ID
091211***** CALL TO ROUTINE CXUTS200 REMOVED
MP1004     MOVE CDN-CUST-NUMBER           TO NATS-NRF-CDN-CUST-ID
           MOVE COM-PREMIER-CARD          TO WS-PRM-CARD-NR
           MOVE PRM-CHECK-DIGIT           TO WS-PRM-CARD-CKD
           MOVE WS-PRM-CARD-BASE-A        TO NATS-NRF-CARD-NUMBER
           MOVE ODR-CONTROL-NR IN ORDRFIL-DETAIL-RECD
                                          TO NATS-NRF-CDN-AUTH-NR.
           MOVE 19                        TO NATS-NRF-TRAN-DATE(1:2).
           IF PD-YY < 70
              MOVE 20                     TO NATS-NRF-TRAN-DATE(1:2).
           MOVE PD-YY                     TO NATS-NRF-TRAN-DATE(3:2).
           MOVE PD-MM                     TO NATS-NRF-TRAN-DATE(5:2).
           MOVE PD-DD                     TO NATS-NRF-TRAN-DATE(7:2),
                                             NATS-NRF-CDN-AUTH-NR(1:2).
           MOVE EIBTIME                   TO NATS-NRF-TRAN-TIME.
           EVALUATE TRUE
              WHEN COM-COMDATA-COMPLETE-FLAG = 'Y'
                 SET NATS-NRF-TRANS-LINK  TO TRUE
              WHEN WS-BILLABLE     > ZEROES AND
                   WS-NON-BILLABLE > ZEROES
                 SET NATS-NRF-BILLING-SPLIT TO TRUE
              WHEN WS-BILLABLE     > ZEROES
                 SET NATS-NRF-FUNDED      TO TRUE
              WHEN OTHER
                 SET NATS-NRF-DIRECT-BILL TO TRUE
           END-EVALUATE.
           SET NATS-NRF-PURCHASE          TO TRUE.

      *------------------------------
       21055-BUILD-NATS-REQUEST-SWIPE.
      *------------------------------
           EVALUATE TRUE
              WHEN NOT THIS-BE-A-PC-REQUEST
                 SET NATS-NRF-VOICE-CTR   TO TRUE
              WHEN OTHER
                 SET NATS-NRF-MAN-KEYED   TO TRUE
                 IF WS-UIWA-SWIPED-KEYED = 'S'
                    SET NATS-NRF-ELEC-SWIPE TO TRUE
                 END-IF
           END-EVALUATE.

      *------------------------------
       21055-BUILD-NATS-REQUEST-NR2.
      *------------------------------
           MOVE ZEROES TO WS-INDEX.
           IF WS-UIWA-NR2-QTY-SC > ZEROES
              COMPUTE WS-INDEX = WS-INDEX + 1
MN0307        MOVE WS-UIWA-NR2-SUB-PROD TO WS-NATS-PROD-IN
MN0307        PERFORM 87600-GET-NATS-SUB-PROD-XLATE
MN0307        MOVE WS-NATS-PROD-OUT    TO NATS-NRF-PROD-CODE (WS-INDEX)
              MOVE WS-UIWA-NR2-QTY-SC  TO NATS-NRF-PROD-QTY  (WS-INDEX)
              MOVE WS-UIWA-NR2-COST-SC TO NATS-NRF-PROD-NET  (WS-INDEX)
              COMPUTE NATS-NRF-PROD-PPG(WS-INDEX) =
                      WS-UIWA-NR2-COST-SC / WS-UIWA-NR2-QTY-SC.

      *------------------------------
       21055-BUILD-NATS-REQUEST-TR.
      *------------------------------
           IF WS-UIWA-REF-QTY-SC > ZEROES
              COMPUTE WS-INDEX = WS-INDEX + 1
MN0307        MOVE WS-UIWA-REF-SUB-PROD TO WS-NATS-PROD-IN
MN0307        PERFORM 87600-GET-NATS-SUB-PROD-XLATE
MN0307        MOVE WS-NATS-PROD-OUT    TO NATS-NRF-PROD-CODE (WS-INDEX)
              MOVE WS-UIWA-REF-QTY-SC  TO NATS-NRF-PROD-QTY  (WS-INDEX)
              MOVE WS-UIWA-REF-COST-SC TO NATS-NRF-PROD-NET  (WS-INDEX)
              COMPUTE NATS-NRF-PROD-PPG(WS-INDEX) =
                      WS-UIWA-REF-COST-SC / WS-UIWA-REF-QTY-SC.

      *------------------------------
       21055-BUILD-NATS-REQUEST-OTH.
      *------------------------------
           IF WS-UIWA-OTH-QTY-SC > ZEROES
             COMPUTE WS-INDEX = WS-INDEX + 1
MN0307       MOVE WS-UIWA-OTH-SUB-PROD TO WS-NATS-PROD-IN
MN0307       PERFORM 87600-GET-NATS-SUB-PROD-XLATE
MN0307       MOVE WS-NATS-PROD-OUT    TO NATS-NRF-PROD-CODE (WS-INDEX)
             MOVE WS-UIWA-OTH-QTY-SC  TO NATS-NRF-PROD-QTY  (WS-INDEX)
             MOVE WS-UIWA-OTH-COST-SC TO NATS-NRF-PROD-NET  (WS-INDEX)
             COMPUTE NATS-NRF-PROD-PPG(WS-INDEX) = WS-UIWA-OTH-COST-SC /
                                                   WS-UIWA-OTH-QTY-SC.

      *------------------------------
       21055-BUILD-NATS-REQUEST-NR1.
      *------------------------------
           IF WS-UIWA-NR1-QTY-SC > ZEROES
             COMPUTE WS-INDEX = WS-INDEX + 1
MN0307       MOVE WS-UIWA-NR1-SUB-PROD TO WS-NATS-PROD-IN
MN0307       PERFORM 87600-GET-NATS-SUB-PROD-XLATE
MN0307       MOVE WS-NATS-PROD-OUT    TO NATS-NRF-PROD-CODE (WS-INDEX)
             MOVE WS-UIWA-NR1-QTY-SC   TO NATS-NRF-PROD-QTY  (WS-INDEX)
             MOVE WS-UIWA-NR1-COST-SC TO NATS-NRF-PROD-NET  (WS-INDEX)
             COMPUTE NATS-NRF-PROD-PPG(WS-INDEX) = WS-UIWA-NR1-COST-SC /
                                                   WS-UIWA-NR1-QTY-SC.
